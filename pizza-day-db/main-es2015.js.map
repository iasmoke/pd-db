{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/list-tt/list-tt.component.ts","./src/app/list-tt/list-tt.component.html","./src/app/login/login.component.ts","./src/app/login/login.component.html","./src/app/login/must-match.validator.ts","./src/app/main-user-hr/main-user-hr.component.ts","./src/app/main-user-hr/main-user-hr.component.html","./src/app/main-user-mt/main-user-mt.component.ts","./src/app/main-user-mt/main-user-mt.component.html","./src/app/main/main.component.ts","./src/app/main/main.component.html","./src/app/modal-admin/modal-admin.component.ts","./src/app/modal-admin/modal-admin.component.html","./src/app/modal-hr/modal-hr.component.ts","./src/app/modal-hr/modal-hr.component.html","./src/app/modal-list-tt/modal-list-tt.component.ts","./src/app/modal-list-tt/modal-list-tt.component.html","./src/app/modal-mt/modal-mt.component.ts","./src/app/modal-mt/modal-mt.component.html","./src/app/modal-users-settings/modal-users-settings.component.ts","./src/app/modal-users-settings/modal-users-settings.component.html","./src/app/report-page/report-page.component.ts","./src/app/report-page/report-page.component.html","./src/app/service/list-tt.service.ts","./src/app/service/login.service.ts","./src/app/service/main.service.ts","./src/app/service/report-page.service.ts","./src/app/service/settings-users.service.ts","./src/app/service/telegram-send.service.ts","./src/app/service/tests.service.ts","./src/app/settings-users/settings-users.component.ts","./src/app/settings-users/settings-users.component.html","./src/app/telegram-send/telegram-send.component.ts","./src/app/telegram-send/telegram-send.component.html","./src/app/tests/tests.component.ts","./src/app/tests/tests.component.html","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { Component, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { LoginService } from './service/login.service';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n\n  @ViewChild('drawer') drawer: MatSidenav;\n\n\n\n  title = 'Pizza Day DB';\n  backgroundColorToggle = 'primary'\n  program_v = ''\n  user_id = this.loginService.user_id\n  user_name = this.loginService.user_name\n  user_role = this.loginService.user_role\n\n  mode = 'over'\n\n  array_page: any\n\n  main_page:boolean = false\n  login_page:boolean = this.user_id === null ? true : false\n  settings_page:boolean = false\n  list_tt_page:boolean = false\n  distribution_page:boolean = false\n  report_page:boolean = false\n  tests_page:boolean = false\n\n  access_main = true\n  access_settings:boolean\n  access_list_tt:boolean\n  access_distribution:boolean\n  access_report:boolean\n  access_tests:boolean\n\n  constructor(\n    private loginService: LoginService,\n    private _snackBar: MatSnackBar,\n    private _focusMonitor: FocusMonitor\n  ){\n\n    this.loginService.getUsersSettingsDistribution(this.user_id).subscribe(res => {\n      this.array_page = JSON.parse(res)\n      this.main_page = this.array_page[0].main_page\n      this.list_tt_page = this.array_page[0].list_tt_page\n      this.settings_page = this.array_page[0].settings_page\n      this.distribution_page = this.array_page[0].distribution_page\n      this.report_page = this.array_page[0].report_page\n      this.tests_page = this.array_page[0].tests_page\n      this.access_settings = this.array_page[0].access_settings\n      this.access_list_tt = this.array_page[0].access_list_tt\n      this.access_distribution = this.array_page[0].access_distribution\n      this.access_report = this.array_page[0].access_report\n      this.access_tests = this.array_page[0].access_tests\n    })\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.stopMonitoring(document.getElementById('buttonNav_1'));\n}\n\n  togglePage(items,access) {\n    switch(this[access]){\n      case true:\n        this.main_page = false\n        this.settings_page = false\n        this.list_tt_page = false\n        this.distribution_page = false\n        this.report_page = false\n        this.tests_page = false\n        this[items] = true\n        this.loginService.toggleUsersSettingsDistribution(this.user_id,this.main_page,this.settings_page,this.list_tt_page,this.distribution_page,this.report_page, this.tests_page).subscribe(res =>{\n          this.drawer.close();\n        })\n        break;\n       case false:\n        this._snackBar.open('У Вас нету прав!', '', {\n          duration: 2000,\n          horizontalPosition: 'center',\n          verticalPosition: 'top',\n          panelClass: 'alert-style-error'\n        });\n         break;\n    }\n\n\n    // console.log(this[items])\n    // console.log(this.main_page,this.settings_page,this.list_tt_page,this.distribution_page);\n  }\n\n  logout() {\n      localStorage.removeItem('id_user_pd')\n      localStorage.removeItem('user_name_pd')\n      localStorage.removeItem('user_role_pd')\n      location.reload()\n  }\n\n  ngOnInit() {}\n}\n","<mat-toolbar *ngIf=\"user_id !== null\" color=\"primary\">\n    <mat-toolbar-row class=\"box-shadow\">\n        <button mat-icon-button (click)=\"drawer.toggle()\">\n    <mat-icon>menu</mat-icon>\n  </button>\n        <a class=\"navbar-brand text-white\">Pizza Day DB</a>\n        <div class=\"ml-auto row\">\n            <h3 class=\"mr-3\">{{user_name}}</h3>\n            <button mat-raised-button color=\"warn\" *ngIf=\"user_id !== null\" class=\"mr-3\" (click)=\"logout()\">Выйти</button>\n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-drawer-container>\n    <mat-drawer #drawer [mode]=\"mode\">\n        <mat-list>\n            <mat-list-item>\n                <mat-icon>dns</mat-icon><button id='buttonNav_1' mat-flat-button (click)=\"togglePage('main_page','access_main')\">Главная</button></mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item *ngIf=\"user_role === 'admin'\">\n                <mat-icon>perm_contact_calendar</mat-icon><button mat-flat-button (click)=\"togglePage('settings_page','access_settings')\">Пользователи</button></mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item *ngIf=\"user_role !== 'user_mt'\">\n              <mat-icon>assignment</mat-icon><button mat-flat-button (click)=\"togglePage('tests_page','access_tests')\">Тесты</button></mat-list-item>\n          <mat-divider></mat-divider>\n            <mat-list-item>\n                <mat-icon>store</mat-icon><button mat-flat-button (click)=\"togglePage('list_tt_page','access_list_tt')\">Заведение</button></mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n                <mat-icon>reply_all</mat-icon><button mat-flat-button (click)=\"togglePage('distribution_page','access_distribution')\">Рассылка в Telegram</button></mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item >\n              <mat-icon>report</mat-icon><button mat-flat-button (click)=\"togglePage('report_page','access_report')\">Отзывы и предложения</button></mat-list-item>\n          <mat-divider></mat-divider>\n        </mat-list>\n    </mat-drawer>\n    <app-main *ngIf=\"main_page && user_role === 'admin'\"></app-main>\n    <app-main-user-mt *ngIf=\"main_page && user_role === 'user_mt'\"></app-main-user-mt>\n    <app-main-user-hr *ngIf=\"main_page && user_role === 'user_hr'\"></app-main-user-hr>\n    <app-settings-users *ngIf=\"settings_page\"></app-settings-users>\n    <app-list-tt *ngIf=\"list_tt_page\"></app-list-tt>\n    <app-telegram-send *ngIf=\"distribution_page\"></app-telegram-send>\n    <app-report-page *ngIf=\"report_page\"></app-report-page>\n    <app-tests *ngIf=\"tests_page\"></app-tests>\n</mat-drawer-container>\n\n<app-login *ngIf=\"login_page\"></app-login>\n\n\n\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\n      Use of this source code is governed by an MIT-style license that\n      can be found in the LICENSE file at http://angular.io/license -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LoginComponent } from './login/login.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MainComponent } from './main/main.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { SettingsUsersComponent } from './settings-users/settings-users.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { TelegramSendComponent } from './telegram-send/telegram-send.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MainUserHrComponent } from './main-user-hr/main-user-hr.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DateAdapter, MatNativeDateModule, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MainUserMtComponent } from './main-user-mt/main-user-mt.component';\nimport { ListTtComponent } from './list-tt/list-tt.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { ModalAdminComponent } from './modal-admin/modal-admin.component';\nimport { ModalListTtComponent } from './modal-list-tt/modal-list-tt.component';\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { ModalUsersSettingsComponent } from './modal-users-settings/modal-users-settings.component';\nimport { ModalHrComponent } from './modal-hr/modal-hr.component';\nimport { ModalMtComponent } from './modal-mt/modal-mt.component';\nimport { ReportPageComponent } from './report-page/report-page.component';\nimport { TestsComponent } from './tests/tests.component';\nimport { SatDatepickerModule, SatNativeDateModule } from 'saturn-datepicker';\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'DD.MM.YYYY',\n  },\n  display: {\n    dateInput: 'DD.MM.YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MainComponent,\n    SettingsUsersComponent,\n    TelegramSendComponent,\n    MainUserHrComponent,\n    MainUserMtComponent,\n    ListTtComponent,\n    ModalAdminComponent,\n    ModalListTtComponent,\n    ModalUsersSettingsComponent,\n    ModalHrComponent,\n    ModalMtComponent,\n    ReportPageComponent,\n    TestsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatIconModule,\n    NgbModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatTableModule,\n    MatSortModule,\n    MatExpansionModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatAutocompleteModule,\n    MatProgressSpinnerModule,\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatProgressBarModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n    SatDatepickerModule,\n    SatNativeDateModule\n  ],\n  providers: [\n    MatDatepickerModule,\n    MatNativeDateModule,\n\n    {\n      provide: MAT_DATE_LOCALE,\n      useValue: 'ru-RU'\n    },\n    {\n      provide: MomentDateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ],\n  entryComponents: [\n    ModalAdminComponent,\n    ModalListTtComponent,\n    ModalUsersSettingsComponent,\n    ModalHrComponent,\n    ModalMtComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ListTtService } from '../service/list-tt.service';\nimport { ModalListTtComponent } from '../modal-list-tt/modal-list-tt.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\ndeclare var $: any;\n\nexport interface DialogData {\n  value: string,\n  row: any\n\n}\n\n@Component({\n  selector: 'app-list-tt',\n  templateUrl: './list-tt.component.html',\n  styleUrls: ['./list-tt.component.scss'],\n})\nexport class ListTtComponent implements OnInit {\n\n\n  list_tt: any;\n  value: any;\n  search:any\n\n  dataSource = new MatTableDataSource();\n\n  displayedColumns: string[] = [\n    'number_td',\n    'address',\n    'city',\n    'date_open',\n    'manager',\n    'rm',\n    'button'\n  ];\n\n  constructor(\n    private listTT: ListTtService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar\n  ) {\n    this.listTT.get_all().subscribe(res => {\n      this.list_tt = JSON.parse(res)\n      this.dataSource = new MatTableDataSource(this.list_tt);\n    })\n  }\n\n  getListTT(){\n    this.listTT.get_all().subscribe(res => {\n      this.list_tt = JSON.parse(res)\n      this.dataSource = new MatTableDataSource(this.list_tt);\n    })\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n \n\n  openDialog(row, value): void {\n    const dialogRef = this.dialog.open(ModalListTtComponent, {\n      maxWidth: '500px',\n      disableClose: true,\n      data: {\n        value: value,\n        row: row\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      switch (result) {\n        case 'Торговая точка добавлена':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.getListTT();\n          this.search = ''\n          break;\n        case 'Данные обновлены':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.getListTT();\n          this.search = ''\n          break;\n      }\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n\n\n}\n","<div class=\"container mb-3 mt-2\">\n    <div class=\"row mt-3\">\n        <div class=\"col-3\">\n            <mat-form-field>\n                <mat-label>Поиск</mat-label>\n                <input matInput [(ngModel)]=\"search\" (keyup)=\"applyFilter($event)\">\n            </mat-form-field>\n        </div>\n        <div class=\"ml-auto\">\n            <button mat-raised-button color=\"primary\" (click)=\"openDialog('','new')\"> Добавить\n      </button>\n        </div>\n    </div>\n    <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n\n            <ng-container matColumnDef=\"number_td\">\n                <th mat-header-cell *matHeaderCellDef> # </th>\n                <td mat-cell *matCellDef=\"let element\"> TT-{{element.number_td}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"city\">\n                <th mat-header-cell *matHeaderCellDef> Город </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.city}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"address\">\n                <th mat-header-cell *matHeaderCellDef> Адрес </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.address}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"date_open\">\n                <th mat-header-cell *matHeaderCellDef> Дата открытия </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.date_open}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"manager\">\n                <th mat-header-cell *matHeaderCellDef> Менеджер ТТ </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.manager}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"rm\">\n                <th mat-header-cell *matHeaderCellDef> Региональный менеджер </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.rm}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"button\">\n                <th mat-header-cell *matHeaderCellDef></th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <button mat-icon-button (click)=\"openDialog(element,'edit')\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../service/login.service';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { MustMatch } from './must-match.validator';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  error: any;\n  userName = \"\";\n  password = \"\";\n  user_name_title: any;\n  user_role:any\n\n  constructor(\n    private loginService: LoginService,\n  ) {\n\n  }\n\n  logIn() {\n    localStorage.removeItem('user_id')\n    this.loginService.getLogin(this.userName, this.password).subscribe(res => {\n      console.log(res)\n      this.loginService.user_id = JSON.parse(res)['user_id']\n      localStorage.setItem('id_user_pd', this.loginService.user_id);\n      this.error = JSON.parse(res)['error']\n      this.loginService.user_name = JSON.parse(res)['user_name'];\n      this.loginService.user_role = JSON.parse(res)['user_role'];\n      localStorage.setItem('user_name_pd', this.loginService.user_name);\n      localStorage.setItem('user_role_pd', this.loginService.user_role);\n      if (this.loginService.user_id !== null) {\n        location.reload();\n      }\n    });\n  }\n\n\n\n  ngOnInit(): void {\n\n  }\n}\n","<div class=\"container box\">\n  <div class=\"align-items-center\">\n    <h1 class=\"text-center mb-5\">Pizza Day</h1>\n    <div class=\"mb-3\" [hidden]=\"(error === undefined) || (error === 'Successful')\" class=\"alert alert-danger\">\n      {{error}}\n    </div>\n    <mat-form-field class=\"col\">\n      <mat-label>User name</mat-label>\n      <input matInput type=\"text\" (keydown.enter)=\"logIn()\" [(ngModel)]=\"userName\"\n        [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col\">\n      <mat-label>Password</mat-label>\n      <input matInput type=\"password\" (keydown.enter)=\"logIn()\" [(ngModel)]=\"password\"\n        [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n    <button mat-raised-button class=\"btn-block\" (keydown.enter)=\"logIn()\" color=\"primary\"\n      (click)=\"logIn()\">Войти</button>\n  </div>\n</div>\n","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormGroup, FormBuilder, Validators, FormControl, } from '@angular/forms';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MainService } from '../service/main.service';\nimport { LoginService } from '../service/login.service';\nimport * as moment from 'moment';\nimport { ModalHrComponent } from '../modal-hr/modal-hr.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\ndeclare var $: any;\n\nexport interface DialogData {\n  user_name: string,\n  value: string,\n  row: any\n\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\n\n\n@Component({\n  selector: 'app-main-user-hr',\n  templateUrl: './main-user-hr.component.html',\n  styleUrls: ['./main-user-hr.component.scss'],\n})\n\nexport class MainUserHrComponent implements OnInit {\n\n  id_tt: string[];\n  dataTable_user_hr = [];\n\n  displayedColumns_user_hr: string[] = [\n    'color',\n    'fio',\n    'position',\n    'interview_date',\n    'department',\n    'number_phone',\n    'internship_date',\n    'internship_place',\n    'rejection_reason',\n    'status'\n\n  ];\n\n  dataSource = new MatTableDataSource();\n  modal_alert_message: any;\n  search:any\n\n  id_person: any;\n\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private mainService: MainService,\n    public loginService: LoginService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar\n  ) {\n\n    this.mainService.user_hr_get_main_table(this.loginService.user_name).subscribe((res) => {\n      this.dataTable_user_hr = JSON.parse(res);\n      this.dataSource = new MatTableDataSource(this.dataTable_user_hr);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n    })\n  }\n\n  get_table_personal() {\n    this.mainService.user_hr_get_main_table(this.loginService.user_name).subscribe((res) => {\n      this.dataTable_user_hr = JSON.parse(res);\n      this.dataSource = new MatTableDataSource(this.dataTable_user_hr);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  get_id_tt() {\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n    })\n  }\n\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n  // private _filter(value: string): string[] {\n  //   const filterValue = value.toLowerCase();\n  //   return this.id_tt.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\n  // }\n\n  openDialog(row, value): void {\n    const dialogRef = this.dialog.open(ModalHrComponent, {\n      maxWidth: '500px',\n      disableClose: true,\n      data: {\n        user_name: this.loginService.user_name,\n        value: value,\n        row: row\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      switch (result) {\n        case 'Пользователь добавлен':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          break;\n        case 'Данные обновлены':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          this.search = ''\n          break;\n      }\n    })\n  }\n\n  ngOnInit(): void {\n\n  }\n\n\n}\n","<div class=\"container-fluid mt-2 mb-3\">\n  <div class=\"col\">\n    <div class=\"row\">\n      <div class=\"col-2\">\n        <mat-form-field>\n          <mat-label>Поиск</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\">\n        </mat-form-field>\n      </div>\n      <div class=\"ml-auto\">\n        <button mat-fab color=\"primary\" (click)=\"openDialog('','new')\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div class=\"mat-elevation-z8 mt-1\">\n      <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <ng-container matColumnDef=\"color\">\n          <th mat-header-cell *matHeaderCellDef></th>\n          <td mat-cell *matCellDef=\"let row\" style=\"padding-right: 15px;\"><button mat-flat-button\n              [ngStyle]=\"{'background-color': row.color, 'color': row.color }\">{{row.color === '' ? '' : row.color.substr(0, 1)}}</button>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fio\" class=\"col-2\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Ф.И.О.</th>\n          <td mat-cell *matCellDef=\"let row\" style=\"text-align: left\">{{ row.fio }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"position\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header >Должность</th>\n          <td mat-cell *matCellDef=\"let row\" >{{row.position}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"interview_date\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата собеседования</th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.interview_date }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"department\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>TT (Подразделение)</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.department}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"number_phone\">\n          <th mat-header-cell *matHeaderCellDef>Номер телефона</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.number_phone}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"internship_date\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата стажировки</th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.internship_date }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"internship_place\">\n          <th mat-header-cell *matHeaderCellDef>ТТ (Стажировки)</th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.internship_place }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"rejection_reason\">\n          <th mat-header-cell *matHeaderCellDef>Причина отказа</th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.rejection_reason }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Статус</th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.status }}</td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns_user_hr;\"></tr>\n        <tr mat-row class=\"example-element-row\" *matRowDef=\"let row; columns: displayedColumns_user_hr\"\n          (dblclick)=\"openDialog(row, 'edit')\"></tr>\n      </table>\n      <mat-paginator [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n    </div>\n  </div>\n</div>\n\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MainService } from '../service/main.service';\nimport { LoginService } from '../service/login.service';\nimport * as moment from 'moment';\nimport { ModalMtComponent } from '../modal-mt/modal-mt.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TestsService } from '../service/tests.service';\n\n\nexport interface DialogData {\n  user_name: string,\n  value: string,\n  row: any\n}\n\n@Component({\n  selector: 'app-main-user-mt',\n  templateUrl: './main-user-mt.component.html',\n  styleUrls: ['./main-user-mt.component.scss']\n})\nexport class MainUserMtComponent implements OnInit {\n\n  id_tt: string[];\n  search: any\n  dataTable_user_mt = [];\n  displayedColumns: string[] = [\n    'fio',\n    'name_test',\n    'internship_date',\n    'test_score',\n    'passing_date',\n    'type_department',\n    'department',\n    'position'\n  ];\n  dataSource = new MatTableDataSource();\n\n  nameTestsList:string[];\n\n\n  modal_alert_message: any;\n  name_test = 'all'\n  passing_date = 'all'\n\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private mainService: MainService,\n    private formBuilder: FormBuilder,\n    public loginService: LoginService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n    private testsService: TestsService\n\n  ) {\n    this.mainService.user_mt_main_table_get(this.name_test, this.passing_date).subscribe((res) => {\n      this.dataTable_user_mt = JSON.parse(res);\n      this.dataSource = new MatTableDataSource(this.dataTable_user_mt);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n    });\n\n    this.testsService.tests_get_name_tests().subscribe(res => {\n      this.nameTestsList = JSON.parse(res)\n    })\n  }\n\n\n  ngOnInit(): void {\n\n  }\n\n  openDialog(row, value): void {\n    switch(value){\n      case 'new_testing_for_person':\n        const dialogRef_new_testing_for_person = this.dialog.open(ModalMtComponent, {\n          width: '900px',\n          maxHeight: '600px',\n          disableClose: true,\n          data: {\n            user_name: this.loginService.user_name,\n            value: value,\n            row: row\n          }\n        });\n\n        dialogRef_new_testing_for_person.afterClosed().subscribe(result => {\n          console.log(result);\n          switch (result) {\n            case 'Готово!':\n              this._snackBar.open(result, '', {\n                duration: 2000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-success'\n              });\n              this.get_table_personal();\n              break;\n          }\n        })\n        break;\n\n\n    case 'new_test':\n\n    const dialogRef = this.dialog.open(ModalMtComponent, {\n      maxWidth: '400px',\n      disableClose: true,\n      data: {\n        user_name: this.loginService.user_name,\n        value: value,\n        row: row\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      switch (result) {\n        case 'Новый тест добавлен':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          break;\n      }\n    })\n    break;\n  }\n  }\n\n  get_table_personal() {\n    this.mainService.user_mt_main_table_get(this.name_test, moment.parseZone(this.passing_date).format('YYYY-MM-DD')).subscribe((res) => {\n      console.log(this.name_test);\n      this.dataTable_user_mt = JSON.parse(res);\n      this.dataSource = new MatTableDataSource(this.dataTable_user_mt);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  saveChanges(row){\n    this.testsService.tests_save_changes_table(row.id_person,row.test_score,moment.parseZone(row.passing_date).format('YYYY-MM-DD'),row.name_test).subscribe(res => {\n      this.modal_alert_message = JSON.parse(res)\n    })\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<div class=\"container-fluid mt-2 mb-3\">\n  <div class=\"row\">\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Поиск</mat-label>\n      <input matInput [(ngModel)]=\"search\" (keyup)=\"applyFilter($event)\">\n    </mat-form-field>\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Выберете тест</mat-label>\n      <mat-select [(ngModel)]=\"name_test\" (ngModelChange)=\"get_table_personal()\">\n        <mat-option value=\"all\">Все</mat-option>\n        <mat-option *ngFor=\"let food of nameTestsList\" [value]=\"food\">\n          {{food}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Выберете дату</mat-label>\n      <input matInput [(ngModel)]=\"passing_date\" [matDatepicker]=\"picker_passing_date\" (ngModelChange)=\"get_table_personal()\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker_passing_date\"></mat-datepicker-toggle>\n      <mat-datepicker #picker_passing_date></mat-datepicker>\n    </mat-form-field>\n\n\n    <div class=\"ml-auto\">\n      <button mat-raised-button color=\"primary\" class=\"mr-2\" (click)=\"openDialog('','new_testing_for_person')\">Добавить сотрудников</button>\n      <button mat-raised-button color=\"primary\" (click)=\"openDialog('','new_test')\">Добавить тест</button>\n    </div>\n  </div>\n  <div class=\"mat-elevation-z8 mt-1\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <ng-container matColumnDef=\"fio\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"padding-left: 50px;\">Ф.И.О.</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.fio }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"type_department\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Тип подразделения</th>\n        <td mat-cell *matCellDef=\"let row\">\n          {{row.type_department}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>TT,подразделение</th>\n        <td mat-cell *matCellDef=\"let row\">\n          {{row.department}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Должность</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.position}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"name_test\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Название теста</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.name_test}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"test_score\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Оценка</th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-form-field style=\"width: 4rem;\">\n            <input matInput type=\"number\" max=\"200\" [(ngModel)]=\"row.test_score\" (ngModelChange)=\"saveChanges(row)\">\n          </mat-form-field>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"internship_date\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата стажировки</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.internship_date}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"passing_date\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата тестирования</th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-form-field style=\"width: 11rem;\">\n            <input matInput [(ngModel)]=\"row.passing_date\" [matDatepicker]=\"picker_passing_date\" readonly (ngModelChange)=\"saveChanges(row)\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker_passing_date\"></mat-datepicker-toggle>\n            <mat-datepicker #picker_passing_date></mat-datepicker>\n          </mat-form-field>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n      <tr mat-row class=\"example-element-row col\" *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MainService } from '../service/main.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { LoginService } from '../service/login.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModalAdminComponent } from '../modal-admin/modal-admin.component';\nimport * as moment from 'moment';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { saveAs } from 'file-saver';\n\n\nmoment.locale('ru')\ndeclare var $: any;\n\nexport interface DialogData {\n  user_name: string,\n  value: string,\n  row: any\n\n}\n\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\n\nexport class MainComponent implements OnInit {\n\n  form: FormGroup;\n\n  inlineRange;\n\n  dataTable = [];\n  displayedColumns: string[] = [\n    'id_person',\n    'fio',\n    'department',\n    'position',\n    'number_phone',\n    'interview_date',\n    'status',\n    'employee_description',\n    'delete'\n  ];\n  dataSource = new MatTableDataSource(this.dataTable);\n\n  value: any;\n  search: any\n  id_tt: string[];\n\n  row_first_name: any\n  row_last_name: any\n  row_personal_id: any\n\n\n  array_data_employee = null\n  modal_alert_message: any\n  user_name_create_employee = this.loginService.user_name\n\n  id_person: any\n\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private mainService: MainService,\n    private formBuilder: FormBuilder,\n    public loginService: LoginService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar\n  ) {\n    this.mainService.admin_main_table_get().subscribe(res => {\n      this.dataTable = JSON.parse(res)\n      this.dataSource = new MatTableDataSource(this.dataTable);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    })\n\n    this.form = this.formBuilder.group({\n      date: new FormControl ({begin:'', end:''}),\n    });\n\n  }\n\n  get_id_tt() {\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n      console.log(this.id_tt);\n    })\n  }\n\n  get_table_personal() {\n    this.mainService.admin_main_table_get().subscribe(res => {\n      this.dataTable = JSON.parse(res)\n      this.dataSource = new MatTableDataSource(this.dataTable);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    })\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  inlineRangeChange($event) {\n    this.inlineRange = $event;\n  }\n\n  downloadFile(data: any) {\n    const replacer = (key, value) => (value === null ? '' : value); // specify how you want to handle null values here\n    const header = Object.keys(data[0]);\n    const csv = data.map((row) =>\n      header\n        .map((fieldName) => JSON.stringify(row[fieldName], replacer))\n        .join(',')\n    );\n    csv.unshift(header.join(','));\n    const csvArray = csv.join('\\r\\n');\n\n    const a = document.createElement('a');\n    const blob = new Blob([csvArray], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n\n    let today = new Date();\n    let day = today.getUTCDate();\n    a.href = url;\n    a.download = day + '.csv';\n    a.click();\n    window.URL.revokeObjectURL(url);\n    a.remove();\n  }\n\n  downloadFileCSV(){\n    switch(this.form.value.date.end){\n      case null:\n        this._snackBar.open('Укажите дату', '', {\n          duration: 2000,\n          horizontalPosition: 'center',\n          verticalPosition: 'top',\n          panelClass: 'alert-style-error'\n        });\n        break;\n        default:\n        this.mainService.admin_get_attraction_channel(this.form.value).subscribe(res => {\n          console.log(res);\n          this.downloadFile(JSON.parse(res))\n          this._snackBar.open('Файл загружен', '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n        })\n      break;\n\n    }\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  openDialog(row, value): void {\n    const dialogRef = this.dialog.open(ModalAdminComponent, {\n      maxWidth: '500px',\n      disableClose: true,\n      data: {\n        user_name: this.loginService.user_name,\n        value: value,\n        row: row\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      switch (result) {\n        case 'Пользователь добавлен':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          break;\n        case 'Данные обновлены':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          this.search = ''\n          break;\n        case 'Пользователь удален':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          this.search = ''\n          break;\n      }\n    })\n  }\n}\n","<div class=\"container-fluid row mt-2 mb-3\">\n  <div class=\"col\">\n    <div class=\"row\">\n      <div class=\"col-2\">\n        <mat-form-field>\n          <mat-label>Поиск</mat-label>\n          <input matInput [(ngModel)]=\"search\" (keyup)=\"applyFilter($event)\">\n        </mat-form-field>\n      </div>\n\n      <div [formGroup]=\"form\" class=\"ml-auto\">\n        <mat-form-field>\n          <input matInput [satDatepicker]=\"picker\" formControlName=\"date\">\n          <sat-datepicker #picker [rangeMode]=\"true\"></sat-datepicker>\n          <sat-datepicker-toggle matSuffix [for]=\"picker\"></sat-datepicker-toggle>\n        </mat-form-field>\n      </div>\n      <div class=\"ml-1\">\n        <button mat-mini-fab color=\"primary\" (click)=\"downloadFileCSV()\"><span class=\"material-icons\">\n          save_alt\n          </span></button>\n      </div>\n      <div class=\"ml-3\">\n        <button mat-fab color=\"primary\" (click)=\"openDialog(this.id_person ,'new')\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n    </div>\n  <div class=\"mat-elevation-z8 mt-1 mb-2\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <ng-container matColumnDef=\"id_person\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.id_person}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"fio\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Ф.И.О.</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.fio }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Подразделение</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.department}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Позиция</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.position }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"number_phone\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Номер телефона</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.number_phone }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"interview_date\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата обучения</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.interview_date }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Статус</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.status }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"employee_description\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Комментарий к сотруднику</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.employee_description }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"delete\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n        <td mat-cell *matCellDef=\"let row\"><button mat-icon-button (click)=\"openDialog(row,'delete')\">\n            <mat-icon>delete</mat-icon>\n          </button></td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n      <tr mat-row class=\"example-element-row\" *matRowDef=\"let row; columns: displayedColumns\"\n        (dblclick)=\"openDialog(row,'edit')\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[20,30,50]\" showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n</div>\n\n<!-- Модал alert edit success -->\n<!-- <div #modal_alert_success id=\"modal_alert_success\" class=\"modal fade\">\n  <div class=\"modal-dialog\">\n    <div class=\"alert alert-success text-center\" role=\"alert\">{{modal_alert_message}}</div>\n  </div>\n</div> -->\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogData } from '../main/main.component';\nimport * as moment from 'moment';\nimport { MainService } from '../service/main.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  templateUrl: './modal-admin.component.html',\n  styleUrls: ['./modal-admin.component.scss']\n})\nexport class ModalAdminComponent implements OnInit {\n\n  newPerson: FormGroup;\n  editPerson: FormGroup;\n\n  user_name = this.data.user_name\n  modal_alert_message: any\n  office = true;\n  trade_dot = false\n  formValueAdd = this.data.value === 'new' ? true : false;\n  formValueEdit = this.data.value === 'edit' ? true : false;\n  valueDelete = this.data.value === 'delete' ? true : false;\n  id_tt: any\n\n  first_name:any\n  last_name:any\n\n\n\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalAdminComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public formBuilder: FormBuilder,\n    private mainService: MainService,\n    private _snackBar: MatSnackBar\n  ) {\n\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n      console.log(this.id_tt);\n    })\n  }\n\n\n\n  get fn() {\n    switch (this.data.value) {\n      case 'new':\n        return this.newPerson.controls;\n      case 'edit':\n        return this.editPerson.controls;\n    }\n  }\n\n\n\n  ngOnInit(): void {\n    switch (this.data.value) {\n      case 'new':\n        this.newPerson = this.formBuilder.group({\n          first_name: new FormControl('', Validators.required),\n          last_name: new FormControl('', Validators.required),\n          second_name: new FormControl(''),\n          type_department: new FormControl('', Validators.required),\n          department: new FormControl('', Validators.required),\n          position: new FormControl('', Validators.required),\n          number_phone: new FormControl('', [Validators.required, Validators.pattern(\"[0-9]{10}\")]),\n          status: new FormControl('', Validators.required),\n          employee_description: [''],\n        });\n        break;\n      case 'edit':\n        this.editPerson = this.formBuilder.group({\n          first_name: new FormControl('', Validators.required),\n          last_name: new FormControl('', Validators.required),\n          second_name: new FormControl(''),\n          department: new FormControl('', Validators.required),\n          position: new FormControl('', Validators.required),\n          type_department: new FormControl('', Validators.required),\n          number_phone: new FormControl('', [Validators.required, Validators.pattern(\"[0-9]{10}\")]),\n          status: new FormControl('', Validators.required),\n          employee_description: new FormControl(''),\n        });\n        let array_row = this.data.row.fio.split(' ')\n        this.editPerson.controls['first_name'].setValue(array_row[1]);\n        this.editPerson.controls['last_name'].setValue(array_row[0]);\n        this.editPerson.controls['second_name'].setValue(array_row[2]);\n        this.editPerson.controls['type_department'].setValue(this.data.row.type_department);\n        this.editPerson.controls['department'].setValue(this.data.row.department);\n        this.editPerson.controls['position'].setValue(this.data.row.position);\n        this.editPerson.controls['number_phone'].setValue(this.data.row.number_phone.substr(3));\n        this.editPerson.controls['status'].setValue(this.data.row.status);\n        this.editPerson.controls['employee_description'].setValue(this.data.row.employee_description);\n\n        this.editPerson.value.type_department === 'Офис' ? this.office = true : false\n        this.editPerson.value.type_department === 'Торговая точка' ? this.trade_dot = true : false\n        break;\n        case 'delete':\n          let fio = this.data.row.fio.split(' ')\n          this.first_name = fio[1]\n          this.last_name = fio[0]\n        break;\n    }\n\n    this.onChangesPosition()\n  }\n\n  add_employee() {\n    switch (this.newPerson.invalid) {\n      case true:\n        console.log(this.newPerson.value);\n        break;\n      default:\n        let dateTimeNow = moment.parseZone(new Date()).format('YYYY-MM-DD HH:mm:ss')\n        this.mainService.admin_main_add_employee(this.newPerson.value, dateTimeNow, this.user_name).subscribe((res) => {\n          this.modal_alert_message = JSON.parse(res);\n          switch (this.modal_alert_message) {\n            case 'Пользователь добавлен':\n              this.newPerson.reset()\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        });\n    }\n  }\n\n\n  update_employee() {\n    switch (this.editPerson.invalid) {\n      case true:\n        console.log(this.editPerson.value);\n        break;\n      default:\n        let dateTimeNow = moment.parseZone(new Date()).format('YYYY-MM-DD HH:mm:ss')\n        this.mainService.admin_main_update_employee(this.user_name, this.editPerson.value, dateTimeNow).subscribe((res) => {\n          this.modal_alert_message = JSON.parse(res);\n          console.log(this.modal_alert_message)\n          switch (this.modal_alert_message) {\n            case 'Данные обновлены':\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        })\n    }\n  }\n\n  delete_employee() {\n    this.mainService.admin_main_delete_employee(this.data.row.id_person).subscribe(res => {\n      this.modal_alert_message = JSON.parse(res);\n      console.log(this.modal_alert_message);\n      switch (this.modal_alert_message) {\n        case 'Пользователь удален':\n          this.dialogRef.close(this.modal_alert_message)\n          break;\n        default:\n          this._snackBar.open(this.modal_alert_message, '', {\n            duration: 7000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-error'\n          });\n          break;\n      }\n    })\n  }\n\n\n  onChangesPosition() {\n    switch (this.data.value) {\n      case 'new':\n        this.newPerson.get('type_department').valueChanges.subscribe((selectType_department) => {\n          if (selectType_department === 'Офис') {\n            this.office = true;\n            this.trade_dot = false\n          } else {\n            this.office = false;\n            this.trade_dot = true\n          }\n        });\n        break;\n      case 'edit':\n        this.editPerson.get('type_department').valueChanges.subscribe((selectType_department) => {\n          if (selectType_department === 'Офис') {\n            this.office = true;\n            this.trade_dot = false\n          } else {\n            this.office = false;\n            this.trade_dot = true\n          }\n        });\n        break;\n    }\n  }\n\n\n\n}\n","<h1 *ngIf=\"formValueAdd\" mat-dialog-title>Новый сотрудник</h1>\n<h1 *ngIf=\"formValueEdit\" mat-dialog-title>Данные сотрудника</h1>\n<h2 *ngIf=\"valueDelete\">Вы хотите удалить сотрудник?</h2>\n<div mat-dialog-content>\n  <div *ngIf=\"valueDelete\">\n    <h3>{{last_name}} {{first_name}}</h3>\n  </div>\n  <form *ngIf=\"formValueAdd\" [formGroup]=\"newPerson\">\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Фамилия</mat-label>\n      <input matInput formControlName=\"last_name\">\n      <mat-error *ngIf=\"!!fn.last_name.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n    <div class=\"container row\">\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Имя</mat-label>\n        <input matInput formControlName=\"first_name\">\n        <mat-error *ngIf=\"!!fn.first_name.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Отчество</mat-label>\n        <input matInput formControlName=\"second_name\">\n        <mat-error *ngIf=\"!!fn.second_name.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n    </div>\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <input type=\"tel\" matInput formControlName=\"number_phone\" placeholder=\"0988788181\">\n      <mat-icon matSuffix>stay_current_portrait</mat-icon>\n      <mat-error *ngIf=\"!!fn.number_phone.errors?.required\">Поле не заполнено</mat-error>\n      <mat-error *ngIf=\"!!fn.number_phone.errors?.pattern\">Неверный формат номера телефона</mat-error>\n    </mat-form-field>\n\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Тип подразделения</mat-label>\n      <mat-select formControlName=\"type_department\">\n        <mat-option value=\"Торговая точка\">Торговая точка</mat-option>\n        <mat-option value=\"Офис\">Офис</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.type_department.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n\n    <div class=\"container row\" *ngIf=\"office\">\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Должность</mat-label>\n        <input matInput formControlName=\"position\">\n        <mat-error *ngIf=\"!!fn.position.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Подразделение</mat-label>\n        <input matInput formControlName=\"department\">\n        <mat-error *ngIf=\"!!fn.department.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"container row\" *ngIf=\"trade_dot\">\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Должность</mat-label>\n        <mat-select matInput formControlName=\"position\">\n          <mat-option value=\"Продавец\">Продавец</mat-option>\n          <mat-option value=\"Повар\">Повар</mat-option>\n          <mat-option value=\"Продавец(0.5)\">Продавец 0.5</mat-option>\n          <mat-option value=\"Повар(0.5)\">Повар 0.5</mat-option>\n          <mat-option value=\"Продавец(У)\">Продавец(У)</mat-option>\n          <mat-option value=\"Повар(У)\">Повар(У)</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.position.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Место работы (ТТ)</mat-label>\n        <mat-select formControlName=\"department\">\n          <mat-option [value]=\"option.substring(0, 2)\" *ngFor=\"let option of id_tt\">\n            {{option}}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.department.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n    </div>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Статус</mat-label>\n      <mat-select matInput formControlName=\"status\">\n        <mat-option value=\"Кандидат\">Кандидат</mat-option>\n        <mat-option value=\"Резерв\">Резерв</mat-option>\n        <mat-option value=\"Отказали\">Отказали</mat-option>\n        <mat-option value=\"Стажёр\">Стажёр</mat-option>\n        <mat-option value=\"Работает\">Работает</mat-option>\n        <mat-option value=\"Уволенный\">Уволенный</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.status.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Комментарий</mat-label>\n      <input matInput formControlName=\"employee_description\">\n      <mat-error *ngIf=\"!!fn.employee_description.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n  </form>\n\n  <form *ngIf=\"formValueEdit\" [formGroup]=\"editPerson\">\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Фамилия</mat-label>\n      <input matInput formControlName=\"last_name\">\n      <mat-error *ngIf=\"!!fn.last_name.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n    <div class=\"container row\">\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Имя</mat-label>\n        <input matInput formControlName=\"first_name\">\n        <mat-error *ngIf=\"!!fn.first_name.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Отчество</mat-label>\n        <input matInput formControlName=\"second_name\">\n        <mat-error *ngIf=\"!!fn.second_name.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n    </div>\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <input type=\"tel\" matInput formControlName=\"number_phone\" placeholder=\"0988788181\">\n      <mat-icon matSuffix>stay_current_portrait</mat-icon>\n      <mat-error *ngIf=\"!!fn.number_phone.errors?.required\">Поле не заполнено</mat-error>\n      <mat-error *ngIf=\"!!fn.number_phone.errors?.pattern\">Неверный формат номера телефона</mat-error>\n    </mat-form-field>\n\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Тип подразделения</mat-label>\n      <mat-select formControlName=\"type_department\">\n        <mat-option value=\"Торговая точка\">Торговая точка</mat-option>\n        <mat-option value=\"Офис\">Офис</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.type_department.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n\n    <div class=\"container row\">\n      <mat-form-field class=\"col\" *ngIf=\"office\" appearance=\"standard\">\n        <mat-label>Должность</mat-label>\n        <input matInput formControlName=\"position\">\n        <mat-error *ngIf=\"!!fn.position.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" *ngIf=\"office\" appearance=\"standard\">\n        <mat-label>Подразделение</mat-label>\n        <input matInput formControlName=\"department\">\n        <mat-error *ngIf=\"!!fn.department.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"container row\">\n      <mat-form-field class=\"col\" *ngIf=\"trade_dot\" appearance=\"standard\">\n        <mat-label>Должность</mat-label>\n        <mat-select matInput formControlName=\"position\">\n          <mat-option value=\"Продавец\">Продавец</mat-option>\n          <mat-option value=\"Повар\">Повар</mat-option>\n          <mat-option value=\"Продавец(0.5)\">Продавец 0.5</mat-option>\n          <mat-option value=\"Повар(0.5)\">Повар 0.5</mat-option>\n          <mat-option value=\"Продавец(У)\">Продавец(У)</mat-option>\n          <mat-option value=\"Повар(У)\">Повар(У)</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.position.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" *ngIf=\"trade_dot\" appearance=\"standard\">\n        <mat-label>Место работы (ТТ)</mat-label>\n        <mat-select formControlName=\"department\">\n          <mat-option [value]=\"option.substring(0, 2)\" *ngFor=\"let option of id_tt\">\n            {{option}}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.department.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n    </div>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Статус</mat-label>\n      <mat-select matInput formControlName=\"status\">\n        <mat-option value=\"Кандидат\">Кандидат</mat-option>\n        <mat-option value=\"Резерв\">Резерв</mat-option>\n        <mat-option value=\"Отказали\">Отказали</mat-option>\n        <mat-option value=\"Стажёр\">Стажёр</mat-option>\n        <mat-option value=\"Работает\">Работает</mat-option>\n        <mat-option value=\"Уволенный\">Уволенный</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.status.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Комментарий</mat-label>\n      <input matInput formControlName=\"employee_description\">\n      <mat-error *ngIf=\"!!fn.employee_description.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n\n  </form>\n</div>\n<div mat-dialog-actions *ngIf=\"formValueAdd\">\n  <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"add_employee()\">Отправить</button>\n  <button mat-raised-button color=\"primary\" mat-dialog-close style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n<div mat-dialog-actions *ngIf=\"formValueEdit\">\n  <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"update_employee()\">Обновить</button>\n  <button mat-raised-button color=\"primary\" mat-dialog-close style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n<div mat-dialog-actions *ngIf=\"valueDelete\">\n  <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"delete_employee()\">Да</button>\n  <button mat-raised-button color=\"primary\" mat-dialog-close style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DialogData } from '../main/main.component';\nimport { MainService } from '../service/main.service';\nimport * as moment from 'moment';\nimport { TestsService } from '../service/tests.service';\n\n@Component({\n  templateUrl: './modal-hr.component.html',\n  styleUrls: ['./modal-hr.component.scss']\n})\nexport class ModalHrComponent implements OnInit {\n\n  newPerson: FormGroup;\n  editPerson: FormGroup;\n\n  user_name = this.data.user_name\n  modal_alert_message: any\n  office = false;\n  trade_dot = false\n  formValueAdd = this.data.value === 'new' ? true : false;\n  formValueEdit = this.data.value === 'edit' ? true : false;\n  id_tt: any\n  candidate = false\n  internships = false\n  if_rejection_reasons = false\n\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalHrComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public formBuilder: FormBuilder,\n    private mainService: MainService,\n    private _snackBar: MatSnackBar,\n    private testService:TestsService\n  ) {\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n    })\n  }\n  get fn() {\n    switch (this.data.value) {\n      case 'new':\n        return this.newPerson.controls;\n      case 'edit':\n        return this.editPerson.controls;\n    }\n  }\n\n  ngOnInit(): void {\n    switch (this.data.value) {\n      case 'new':\n        this.newPerson = this.formBuilder.group({\n          first_name: new FormControl('', Validators.required),\n          last_name: new FormControl('', Validators.required),\n          second_name: new FormControl(''),\n          position: new FormControl('', Validators.required),\n          department: new FormControl('', Validators.required),\n          number_phone: new FormControl('', [Validators.required, Validators.pattern('[0-9]{10}')]),\n          attraction_channel: new FormControl(''),\n          type_department: new FormControl('', Validators.required),\n          attraction_channel_description: new FormControl('').disable(),\n          interview_date: new FormControl(),\n          internship_date: new FormControl(),\n          internship_place: new FormControl(''),\n          rejection_reason: new FormControl(''),\n          status: new FormControl('', Validators.required),\n          employee_description: new FormControl(''),\n          color: new FormControl('')\n        });\n        break;\n      case 'edit':\n        this.editPerson = this.formBuilder.group({\n          first_name: new FormControl('', Validators.required),\n          last_name: new FormControl('', Validators.required),\n          second_name: new FormControl(''),\n          position: new FormControl('', Validators.required),\n          department: new FormControl('', Validators.required),\n          number_phone: new FormControl('', [Validators.required, Validators.pattern('[0-9]{10}')]),\n          attraction_channel: new FormControl(''),\n          type_department: new FormControl('', Validators.required),\n          attraction_channel_description: new FormControl(''),\n          interview_date: new FormControl(''),\n          internship_date: new FormControl(''),\n          internship_place: new FormControl(''),\n          rejection_reason: new FormControl(''),\n          status: new FormControl('', Validators.required),\n          employee_description: new FormControl(''),\n          color: new FormControl('')\n        });\n        \n        let array_row = this.data.row.fio.split(' ')\n        this.editPerson.controls['first_name'].setValue(array_row[1]);\n        this.editPerson.controls['last_name'].setValue(array_row[0]);\n        this.editPerson.controls['second_name'].setValue(array_row[2]);\n        this.editPerson.controls['position'].setValue(this.data.row.position);\n        this.editPerson.controls['department'].setValue(this.data.row.department);\n        this.editPerson.controls['number_phone'].setValue(this.data.row.number_phone.substr(3));\n        this.editPerson.controls['attraction_channel'].setValue(this.data.row.attraction_channel);\n        this.editPerson.controls['type_department'].setValue(this.data.row.type_department);\n        this.editPerson.controls['attraction_channel_description'].setValue(this.data.row.attraction_channel_description);\n        this.editPerson.controls['interview_date'].setValue(this.data.row.interview_date === '' ? null : moment.parseZone(this.data.row.interview_date,\"DD.MM.YYYY\").format('YYYY-MM-DD'));\n        this.editPerson.controls['internship_date'].setValue(this.data.row.internship_date === '' ? null : moment.parseZone(this.data.row.internship_date, \"DD.MM.YYYY\").format('YYYY-MM-DD'));\n        this.editPerson.controls['internship_place'].setValue(this.data.row.internship_place);\n        this.editPerson.controls['rejection_reason'].setValue(this.data.row.rejection_reason);\n        this.editPerson.controls['status'].setValue(this.data.row.status);\n        this.editPerson.controls['employee_description'].setValue(this.data.row.employee_description);\n        this.editPerson.controls['color'].setValue(this.data.row.color);\n        this.editPerson.value.status === \"Кандидат\" ? this.candidate = true : false\n        this.editPerson.value.status === \"Стажёр\" ? this.internships = true : false\n        this.editPerson.value.status === \"Отказали\" ? this.if_rejection_reasons = true : false\n        this.editPerson.value.type_department === 'Офис' ? this.office = true : false\n        this.editPerson.value.type_department === 'Торговая точка' ? this.trade_dot = true : false\n\n\n        switch (this.editPerson.value.status) {\n          case `Кандидат`:\n            this.editPerson.value.attraction_channel === 'Рекомендация от третьих лиц' ? this.editPerson.get('attraction_channel_description').enable() : this.editPerson.get('attraction_channel_description').disable();\n            break;\n        }\n        break;\n    }\n    this.onChangesEditForm();\n    this.onChangesPosition();\n  }\n\n  addEmployee() {\n    switch (this.newPerson.invalid) {\n      case true:\n        console.log(this.newPerson);\n        break;\n      default:\n        let dateTimeNow = moment.parseZone(new Date()).format('YYYY-MM-DD HH:mm:ss')\n        this.newPerson.value.interview_date === null ? null : this.newPerson.controls['interview_date'].setValue(moment.parseZone(this.newPerson.value.interview_date).format('YYYY-MM-DD'));\n        this.newPerson.value.internship_date === null ? null : this.newPerson.controls['internship_date'].setValue(moment.parseZone(this.newPerson.value.internship_date).format('YYYY-MM-DD'));\n        this.mainService.user_hr_main_add_employee(this.newPerson.value, dateTimeNow, this.user_name).subscribe((res) => {\n          this.modal_alert_message = JSON.parse(res);\n          console.log(this.modal_alert_message);\n          switch (this.modal_alert_message) {\n            case 'Пользователь добавлен':\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        })\n    }\n  }\n\n  updateEmployee() {\n    switch (this.editPerson.invalid) {\n      case true:\n        console.log(this.editPerson)\n        break;\n      default:\n        let dateTimeNow = moment.parseZone(new Date()).format('YYYY-MM-DD HH:mm:ss')\n        this.editPerson.value.interview_date === null ? null : this.editPerson.controls['interview_date'].setValue(moment.parseZone(this.editPerson.value.interview_date).format('YYYY-MM-DD'));\n        this.editPerson.value.internship_date === null ? null : this.editPerson.controls['internship_date'].setValue(moment.parseZone(this.editPerson.value.internship_date).format('YYYY-MM-DD'));\n        this.mainService.user_hr_main_update_employee(this.user_name, this.editPerson.value, dateTimeNow, this.data.row.id_person).subscribe((res) => {\n          this.modal_alert_message = JSON.parse(res);\n          console.log(this.modal_alert_message = JSON.parse(res))\n          switch (this.modal_alert_message) {\n            case 'Данные обновлены':\n              this.testService.tests_update_persons_data(this.editPerson.value,this.data.row.id_person).subscribe(res => {\n              this.dialogRef.close(this.modal_alert_message)\n            })\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        });\n        break;\n    }\n  }\n\n\n\n  onChangesPosition() {\n    switch (this.data.value) {\n      case 'new':\n        this.newPerson.get('type_department').valueChanges.subscribe((selectType_department) => {\n          if (selectType_department === 'Офис') {\n            this.office = true;\n            this.trade_dot = false\n          } else {\n            this.office = false;\n            this.trade_dot = true\n          }\n        });\n        break;\n      case 'edit':\n        this.editPerson.get('type_department').valueChanges.subscribe((selectType_department) => {\n          if (selectType_department === 'Офис') {\n            this.office = true;\n            this.trade_dot = false\n          } else {\n            this.office = false;\n            this.trade_dot = true\n          }\n        });\n        break;\n    }\n  }\n\n\n  onChangesEditForm() {\n    switch (this.data.value) {\n      case 'edit':\n        this.editPerson.get('attraction_channel').valueChanges.subscribe((selectAttraction_channel) => {\n          if (selectAttraction_channel === 'Рекомендация от третьих лиц') {\n            this.editPerson.get('attraction_channel_description').enable();\n          } else {\n            this.editPerson.get('attraction_channel_description').reset();\n            this.editPerson.get('attraction_channel_description').disable();\n          }\n        });\n        break;\n      case 'new':\n        this.newPerson.get('attraction_channel').valueChanges.subscribe((selectAttraction_channel) => {\n          if (selectAttraction_channel === 'Рекомендация от третьих лиц') {\n            this.newPerson.get('attraction_channel_description').enable();\n          } else {\n            this.newPerson.get('attraction_channel_description').reset();\n            this.newPerson.get('attraction_channel_description').disable();\n          }\n        });\n        break;\n    }\n  }\n\n}\n","<h1 *ngIf=\"formValueAdd\" mat-dialog-title>Новый сотрудник</h1>\n<h1 *ngIf=\"formValueEdit\" mat-dialog-title>Данные сотрудника</h1>\n<div mat-dialog-content>\n\n  <!-- New person -->\n  <div *ngIf=\"formValueAdd\" [formGroup]=\"newPerson\">\n    <mat-card class=\"mt-2\">\n      <div class=\"row\">\n        <mat-form-field>\n          <mat-label>Фамилия</mat-label>\n          <input matInput formControlName=\"last_name\">\n          <mat-error *ngIf=\"!!fn.last_name.errors?.required\">Введите фамилию</mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>Имя</mat-label>\n          <input matInput formControlName=\"first_name\">\n          <mat-error *ngIf=\"!!fn.first_name.errors?.required\">Введите имя</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <mat-form-field class=\"col-8\">\n          <mat-label>Отчество</mat-label>\n          <input matInput formControlName=\"second_name\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"row\">\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Статус</mat-label>\n          <mat-select matInput formControlName=\"status\">\n            <mat-option value=\"Кандидат\">Кандидат</mat-option>\n            <mat-option value=\"Резерв\">Резерв</mat-option>\n            <mat-option value=\"Отказали\">Отказали</mat-option>\n            <mat-option value=\"Стажёр\">Стажёр</mat-option>\n            <mat-option value=\"Работает\">Работает</mat-option>\n            <mat-option value=\"Уволенный\">Уволенный</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"!!fn.status.errors?.required\">Выберет статус</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Маркер</mat-label>\n          <mat-select formControlName=\"color\">\n            <mat-option value=\"#f44336\">Красный</mat-option>\n            <mat-option value=\"#ffff00\">Желтый</mat-option>\n            <mat-option value=\"#76ff03\">Зелёный</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <mat-form-field class=\"col-8\">\n          <mat-label>Номер телефона</mat-label>\n          <input type=\"tel\" matInput formControlName=\"number_phone\" placeholder=\"0988788181\">\n          <mat-icon matSuffix>phone</mat-icon>\n          <mat-error *ngIf=\"!!fn.number_phone.errors?.required\">Введите телефон</mat-error>\n          <mat-error *ngIf=\"!!fn.number_phone.errors?.pattern\">Неверный формат номера телефона</mat-error>\n        </mat-form-field>\n      </div>\n    </mat-card>\n\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Тип подразделения</mat-label>\n      <mat-select formControlName=\"type_department\">\n        <mat-option value=\"Торговая точка\">Торговая точка</mat-option>\n        <mat-option value=\"Офис\">Офис</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.type_department.errors?.required\">Выберете подразделения</mat-error>\n    </mat-form-field>\n\n\n    <mat-form-field class=\"col\" *ngIf=\"office\">\n      <mat-label>Должность</mat-label>\n      <input matInput formControlName=\"position\">\n      <mat-error *ngIf=\"!!fn.position.errors?.required\">Выберете должность</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" *ngIf=\"office\">\n      <mat-label>Подразделение</mat-label>\n      <input matInput formControlName=\"department\">\n      <mat-error *ngIf=\"!!fn.department.errors?.required\">Выберете подразделение</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" *ngIf=\"trade_dot\">\n      <mat-label>Должность</mat-label>\n      <mat-select matInput formControlName=\"position\">\n        <mat-option value=\"Продавец\">Продавец</mat-option>\n        <mat-option value=\"Повар\">Повар</mat-option>\n        <mat-option value=\"Продавец(0.5)\">Продавец 0.5</mat-option>\n        <mat-option value=\"Повар(0.5)\">Повар 0.5</mat-option>\n        <mat-option value=\"Продавец(У)\">Продавец(У)</mat-option>\n        <mat-option value=\"Повар(У)\">Повар(У)</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.position.errors?.required\">Выберете должность</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" *ngIf=\"trade_dot\">\n      <mat-label>Место работы (ТТ)</mat-label>\n      <mat-select formControlName=\"department\">\n        <mat-option [value]=\"option.substring(0, 2)\" *ngFor=\"let option of id_tt\">\n          {{option}}\n        </mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.department.errors?.required\">Выберете ТТ</mat-error>\n    </mat-form-field>\n\n    <div>\n      <div class=\"row\">\n        <mat-form-field class=\"col\">\n          <mat-label>Место стажировки</mat-label>\n          <mat-select formControlName=\"internship_place\">\n            <mat-option [value]=\"option.substring(0, 2)\" *ngFor=\"let option of id_tt\">\n              {{option}}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"!!fn.internship_place.errors?.required\">Выберете место стажировки</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n          <mat-label>Дата стажировки</mat-label>\n          <input matInput [matDatepicker]=\"picker_internship_date\" formControlName=\"internship_date\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker_internship_date\"></mat-datepicker-toggle>\n          <mat-datepicker #picker_internship_date></mat-datepicker>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <mat-form-field class=\"col-8\">\n          <mat-label>Дата собеседования</mat-label>\n          <input matInput formControlName=\"interview_date\" [matDatepicker]=\"picker_interview_date\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker_interview_date\"></mat-datepicker-toggle>\n          <mat-datepicker #picker_interview_date></mat-datepicker>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"container\">\n      <div class=\"row\">\n        <mat-form-field class=\"col\" appearance=\"standard\">\n          <mat-label>Откуда узнал о вакансии</mat-label>\n          <mat-select formControlName=\"attraction_channel\">\n            <mat-option value=\"Work.ua\">Work.ua</mat-option>\n            <mat-option value=\"Rabota.ua\">Rabota.ua</mat-option>\n            <mat-option value=\"Instagram\">Instagram</mat-option>\n            <mat-option value=\"Facebook\">Facebook</mat-option>\n            <mat-option value=\"Telegram\">Telegram</mat-option>\n            <mat-option value=\"Реклама на магазине\">Реклама на магазине</mat-option>\n            <mat-option value=\"OLX\">OLX</mat-option>\n            <mat-option value=\"Рекомендация от третьих лиц\">Рекомендация от третьих лиц</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"!!fn.attraction_channel.errors?.required\">Выберет значение</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\" appearance=\"standard\">\n          <mat-label>Комментарий</mat-label>\n          <input matInput formControlName=\"attraction_channel_description\">\n        </mat-form-field>\n      </div>\n\n    <div class=\"container\">\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Причина отказа</mat-label>\n        <mat-select matInput formControlName=\"rejection_reason\">\n          <mat-option value=\"Отказ рекрутера\">Отказ рекрутера</mat-option>\n          <mat-option value=\"Переоценка собственных сил\">Переоценка собственных сил</mat-option>\n          <mat-option value=\"Не выход на стажировку\">Невыход на стажировку</mat-option>\n          <mat-option value=\"Отказ менеджера\">Отказ менеджера</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.rejection_reason.errors?.required\">Введите значение</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"row justify-content-center\">\n      <mat-form-field class=\"col-8\">\n        <mat-label>Комментарий к сотруднику</mat-label>\n        <textarea matInput formControlName=\"employee_description\"></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n</div>\n\n  <!-- Edit person -->\n  <div *ngIf=\"formValueEdit\" [formGroup]=\"editPerson\">\n\n\n    <mat-card class=\"mt-2\">\n      <div class=\"row\">\n        <mat-form-field>\n          <mat-label>Фамилия</mat-label>\n          <input matInput formControlName=\"last_name\">\n          <mat-error *ngIf=\"!!fn.last_name.errors?.required\">Введите фамилию</mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>Имя</mat-label>\n          <input matInput formControlName=\"first_name\">\n          <mat-error *ngIf=\"!!fn.first_name.errors?.required\">Введите имя</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <mat-form-field class=\"col-8\">\n          <mat-label>Отчество</mat-label>\n          <input matInput formControlName=\"second_name\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"row\">\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Статус</mat-label>\n          <mat-select matInput formControlName=\"status\">\n            <mat-option value=\"Кандидат\">Кандидат</mat-option>\n            <mat-option value=\"Резерв\">Резерв</mat-option>\n            <mat-option value=\"Отказали\">Отказали</mat-option>\n            <mat-option value=\"Стажёр\">Стажёр</mat-option>\n            <mat-option value=\"Работает\">Работает</mat-option>\n            <mat-option value=\"Уволенный\">Уволенный</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"!!fn.status.errors?.required\">Выберет статус</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Маркер</mat-label>\n          <mat-select formControlName=\"color\">\n            <mat-option value=\"#f44336\">Красный</mat-option>\n            <mat-option value=\"#ffff00\">Желтый</mat-option>\n            <mat-option value=\"#76ff03\">Зелёный</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <mat-form-field class=\"col-8\">\n          <mat-label>Номер телефона</mat-label>\n          <input type=\"tel\" matInput formControlName=\"number_phone\" placeholder=\"0988788181\">\n          <mat-icon matSuffix>phone</mat-icon>\n          <mat-error *ngIf=\"!!fn.number_phone.errors?.required\">Введите телефон</mat-error>\n          <mat-error *ngIf=\"!!fn.number_phone.errors?.pattern\">Неверный формат номера телефона</mat-error>\n        </mat-form-field>\n      </div>\n    </mat-card>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Тип подразделения</mat-label>\n      <mat-select formControlName=\"type_department\">\n        <mat-option value=\"Торговая точка\">Торговая точка</mat-option>\n        <mat-option value=\"Офис\">Офис</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.type_department.errors?.required\">Выберете подразделения</mat-error>\n    </mat-form-field>\n\n    <div class=\"row\">\n      <mat-form-field class=\"col\" *ngIf=\"office\">\n        <mat-label>Должность</mat-label>\n        <input matInput formControlName=\"position\">\n        <mat-error *ngIf=\"!!fn.position.errors?.required\">Выберете должность</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" *ngIf=\"office\">\n        <mat-label>Подразделение</mat-label>\n        <input matInput formControlName=\"department\">\n        <mat-error *ngIf=\"!!fn.department.errors?.required\">Выберете подразделение</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" *ngIf=\"trade_dot\">\n        <mat-label>Должность</mat-label>\n        <mat-select matInput formControlName=\"position\">\n          <mat-option value=\"Продавец\">Продавец</mat-option>\n          <mat-option value=\"Повар\">Повар</mat-option>\n          <mat-option value=\"Продавец(0.5)\">Продавец 0.5</mat-option>\n          <mat-option value=\"Повар(0.5)\">Повар 0.5</mat-option>\n          <mat-option value=\"Продавец(У)\">Продавец(У)</mat-option>\n          <mat-option value=\"Повар(У)\">Повар(У)</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.position.errors?.required\">Выберете должность</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" *ngIf=\"trade_dot\">\n        <mat-label>Место работы (ТТ)</mat-label>\n        <mat-select formControlName=\"department\">\n          <mat-option [value]=\"option.substring(0, 2)\" *ngFor=\"let option of id_tt\">\n            {{option}}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.department.errors?.required\">Выберете ТТ</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"container\">\n      <div class=\"row\">\n        <mat-form-field class=\"col\" appearance=\"standard\">\n          <mat-label>Откуда узнал о вакансии</mat-label>\n          <mat-select formControlName=\"attraction_channel\">\n            <mat-option value=\"Work.ua\">Work.ua</mat-option>\n            <mat-option value=\"Rabota.ua\">Rabota.ua</mat-option>\n            <mat-option value=\"Instagram\">Instagram</mat-option>\n            <mat-option value=\"Facebook\">Facebook</mat-option>\n            <mat-option value=\"Telegram\">Telegram</mat-option>\n            <mat-option value=\"Реклама на магазине\">Реклама на магазине</mat-option>\n            <mat-option value=\"OLX\">OLX</mat-option>\n            <mat-option value=\"Рекомендация от третьих лиц\">Рекомендация от третьих лиц</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"!!fn.attraction_channel.errors?.required\">Выберет значение</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\" appearance=\"standard\">\n          <mat-label>Комментарий</mat-label>\n          <input matInput formControlName=\"attraction_channel_description\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <mat-form-field class=\"col-8\">\n          <mat-label>Дата собеседования</mat-label>\n          <input matInput formControlName=\"interview_date\" [matDatepicker]=\"picker_interview_date\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker_interview_date\"></mat-datepicker-toggle>\n          <mat-datepicker #picker_interview_date></mat-datepicker>\n        </mat-form-field>\n\n      </div>\n    </div>\n\n    <div class=\"container\">\n      <div class=\"row\">\n        <mat-form-field class=\"col\">\n          <mat-label>Место стажировки</mat-label>\n          <mat-select formControlName=\"internship_place\">\n            <mat-option [value]=\"option.substring(0, 2)\" *ngFor=\"let option of id_tt\">\n              {{option}}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"!!fn.internship_place.errors?.required\">Выберете место стажировки</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n          <mat-label>Дата стажировки</mat-label>\n          <input matInput [matDatepicker]=\"picker_internship_date\" formControlName=\"internship_date\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker_internship_date\"></mat-datepicker-toggle>\n          <mat-datepicker #picker_internship_date></mat-datepicker>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <mat-label>Причина отказа</mat-label>\n      <mat-select matInput formControlName=\"rejection_reason\">\n        <mat-option value=\"Отказ рекрутера\">Отказ рекрутера</mat-option>\n        <mat-option value=\"Переоценка собственных сил\">Переоценка собственных сил</mat-option>\n        <mat-option value=\"Не выход на стажировку\">Невыход на стажировку</mat-option>\n        <mat-option value=\"Отказ менеджера\">Отказ менеджера</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.rejection_reason.errors?.required\">Введите значение</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\">\n      <mat-label>Комментарий к сотруднику</mat-label>\n      <textarea matInput cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"1\"\n        cdkAutosizeMaxRows=\"5\" formControlName=\"employee_description\"></textarea>\n    </mat-form-field>\n  </div>\n</div>\n\n<div mat-dialog-actions *ngIf=\"formValueAdd\">\n  <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"addEmployee()\">Отправить</button>\n  <button mat-raised-button color=\"primary\" mat-dialog-close\n    style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n<div mat-dialog-actions *ngIf=\"formValueEdit\">\n  <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"updateEmployee()\">Обновить</button>\n  <button mat-raised-button color=\"primary\" mat-dialog-close\n    style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DialogData } from '../main/main.component';\nimport { ListTtService } from '../service/list-tt.service';\nimport * as moment from 'moment';\n\n\n@Component({\n  templateUrl: './modal-list-tt.component.html',\n  styleUrls: ['./modal-list-tt.component.scss']\n})\nexport class ModalListTtComponent implements OnInit {\n\n  new_outlet: FormGroup;\n  edit_outlet: FormGroup;\n\n  modal_alert_message: any;\n\n  formValueAdd = this.data.value === 'new' ? true : false;\n  formValueEdit = this.data.value === 'edit' ? true : false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalListTtComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public formBuilder: FormBuilder,\n    private ListTtService: ListTtService,\n    private _snackBar: MatSnackBar\n      ) {\n\n  }\n\n  ngOnInit(): void {\n    switch (this.data.value) {\n      case 'new':\n    this.new_outlet = this.formBuilder.group({\n      number_td: new FormControl(),\n      address: new FormControl(),\n      city: new FormControl(),\n      date_open: new FormControl(),\n      manager: new FormControl(),\n      rm: new FormControl(),\n    });\n      break;\n      case 'edit':\n    this.edit_outlet = this.formBuilder.group({\n      id_tt: new FormControl(),\n      number_td: new FormControl(),\n      address: new FormControl(),\n      city: new FormControl(),\n      date_open: new FormControl(),\n      manager: new FormControl(),\n      rm: new FormControl()\n    });\n        this.edit_outlet.controls['id_tt'].setValue(this.data.row.id_tt)\n        this.edit_outlet.controls['number_td'].setValue(this.data.row.number_td);\n        this.edit_outlet.controls['address'].setValue(this.data.row.address);\n        this.edit_outlet.controls['date_open'].setValue(this.data.row.date_open === '' ? null : moment.parseZone(this.data.row.date_open,\"DD.MM.YYYY\").format('YYYY-MM-DD'));\n        this.edit_outlet.controls['city'].setValue(this.data.row.city);\n        this.edit_outlet.controls['manager'].setValue(this.data.row.manager);\n        this.edit_outlet.controls['rm'].setValue(this.data.row.rm);\n        console.log(this.edit_outlet);\n\n    break;\n  }\n  }\n\n  addOutlet() {\n    switch (this.new_outlet.invalid) {\n      case true:\n        console.log(this.new_outlet.value);\n        break;\n      default:\n        this.ListTtService.add_outlet(this.new_outlet.value).subscribe((res) => {\n          console.log(this.new_outlet.value);\n          this.modal_alert_message = JSON.parse(res);\n          switch (this.modal_alert_message) {\n            case 'Торговая точка добавлена':\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        });\n    }\n  }\n\n  editOutlet() {\n    switch (this.edit_outlet.invalid) {\n      case true:\n        console.log(this.edit_outlet.value);\n        break;\n      default:\n        this.edit_outlet.value.date_open === null ? null : this.edit_outlet.controls['date_open'].setValue(moment.parseZone(this.edit_outlet.value.date_open).format('DD.MM.YYYY'));\n        this.ListTtService.edit_outlet(this.edit_outlet.value).subscribe((res) => {\n          this.modal_alert_message = JSON.parse(res);\n          console.log(this.modal_alert_message)\n          switch (this.modal_alert_message) {\n            case 'Данные обновлены':\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        })\n    }\n  }\n}\n","<h1 *ngIf=\"formValueAdd\" mat-dialog-title>Новая торговая точка</h1>\n<div mat-dialog-content>\n    <form *ngIf=\"formValueAdd\" [formGroup]=\"new_outlet\">\n        <mat-form-field class=\"col\">\n            <mat-label>Номер торговой точки</mat-label>\n            <input matInput formControlName=\"number_td\">\n            <mat-error>Поле не заполнено</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Город</mat-label>\n            <input matInput formControlName=\"city\">\n            <mat-error>Поле не заполнено</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Адрес</mat-label>\n            <input matInput formControlName=\"address\">\n            <mat-error>Поле не заполнено</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Дата открытия</mat-label>\n            <input matInput formControlName=\"date_open\" [matDatepicker]=\"picker_new_outlet\"\n                (focus)=\"picker_new_outlet.open()\" readonly>\n        </mat-form-field>\n        <mat-datepicker #picker_new_outlet></mat-datepicker>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Менеджер ТТ</mat-label>\n            <input matInput formControlName=\"manager\">\n            <mat-error>Поле не заполнено</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Региональный менеджер</mat-label>\n            <input matInput formControlName=\"rm\">\n            <mat-error>Поле не заполнено</mat-error>\n        </mat-form-field>\n    </form>\n\n    <form *ngIf=\"formValueEdit\" [formGroup]=\"edit_outlet\">\n\n        <mat-form-field class=\"col\">\n            <mat-label>Номер торговой точки</mat-label>\n            <input matInput formControlName=\"number_td\">\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Дата открытия</mat-label>\n            <input matInput formControlName='date_open' [matDatepicker]=\"picker_edit_outlet\"\n                (focus)=\"picker_edit_outlet.open()\" readonly>\n            <mat-datepicker-toggle matSuffix [for]=\"picker_edit_outlet\"></mat-datepicker-toggle>\n            <mat-datepicker #picker_edit_outlet></mat-datepicker>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Город</mat-label>\n            <input matInput formControlName=\"city\">\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Адрес</mat-label>\n            <input matInput formControlName=\"address\">\n        </mat-form-field>\n\n\n        <mat-form-field class=\"col\">\n            <mat-label>Менеджер ТТ</mat-label>\n            <input matInput formControlName=\"manager\">\n\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Региональный менеджер</mat-label>\n            <input matInput formControlName=\"rm\">\n        </mat-form-field>\n    </form>\n</div>\n\n<div mat-dialog-actions *ngIf=\"formValueAdd\">\n    <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"addOutlet()\">Добавить</button>\n    <button mat-raised-button color=\"primary\" mat-dialog-close\n        style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n\n<div mat-dialog-actions *ngIf=\"formValueEdit\">\n    <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"editOutlet()\">Изменить</button>\n    <button mat-raised-button color=\"primary\" mat-dialog-close\n        style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DialogData } from '../main/main.component';\nimport { MainService } from '../service/main.service';\nimport { TestsService } from '../service/tests.service';\n\n@Component({\n  selector: 'app-modal-mt',\n  templateUrl: './modal-mt.component.html',\n  styleUrls: ['./modal-mt.component.scss']\n})\nexport class ModalMtComponent implements OnInit {\n\n  formValueAdd = this.data.value === 'new_test' ? true : false;\n  boolean_list_person = this.data.value === 'new_testing_for_person' ? true : false;\n\n\n\n  newTest: FormGroup;\n  modal_alert_message: any\n  list_position: any\n\n\n  search = ''\n  list_persons = [];\n\n  list_name_tests: string[];\n\n  name_test = '';\n\n\n  displayedColumns: string[] = [\n    'select',\n    'fi',\n    'department',\n    'position'\n  ];\n\n  selection = new SelectionModel(true, []);\n  dataSource = new MatTableDataSource();\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalMtComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public formBuilder: FormBuilder,\n    private mainService: MainService,\n    private _snackBar: MatSnackBar,\n    private testsService: TestsService\n  ) {\n    switch (this.data.value) {\n      case 'new_testing_for_person':\n        this.testsService.tests_get_list_persons().subscribe(res => {\n          this.list_persons = JSON.parse(res);\n          this.dataSource = new MatTableDataSource(this.list_persons);\n          this.dataSource.sort = this.sort;\n          this.dataSource.paginator = this.paginator;\n          this.selection = new SelectionModel(true, []);\n        })\n\n        this.testsService.tests_get_name_tests().subscribe(res => {\n          this.list_name_tests = JSON.parse(res)\n        })\n        break;\n      case 'new_test':\n        this.testsService.tests_get_list_position().subscribe(res => {\n          this.list_position = JSON.parse(res);\n        })\n        break;\n    }\n  }\n\n  get fn() {\n    switch (this.data.value) {\n      case 'new_test':\n        return this.newTest.controls;\n\n      case 'new_testing_for_person':\n        console.log('new_testing_for_person');\n        break;\n    }\n  }\n\n\n  ngOnInit(): void {\n    switch (this.data.value) {\n      case 'new_test':\n        this.newTest = this.formBuilder.group({\n          name_test: new FormControl('', Validators.required),\n          description_test: new FormControl(''),\n          max_score: new FormControl('',[Validators.max(200), Validators.required]),\n          position_type: new FormControl('', Validators.required),\n        });\n        break;\n    }\n  }\n\n  addPersons() {\n    switch (this.name_test) {\n      case '':\n        this._snackBar.open(\"Выберете для начала тест\", 'Закрыть', {\n          duration: 5000,\n          horizontalPosition: 'center',\n          verticalPosition: 'top',\n          panelClass: 'alert-style-error'\n        });\n        break;\n      default:\n        this.testsService.tests_check_persons_for_match(this.selection.selected, this.name_test).subscribe(res => {\n          this.modal_alert_message = JSON.parse(res);\n          switch (this.modal_alert_message) {\n            case 'done':\n              this.testsService.tests_add_testing_for_person(this.selection.selected, this.name_test).subscribe(res => {\n                this.modal_alert_message = JSON.parse(res)\n                switch (this.modal_alert_message) {\n                  case 'Готово!':\n                    this.dialogRef.close(this.modal_alert_message)\n                    break;\n                  default:\n                    this._snackBar.open(this.modal_alert_message[0].error, '', {\n                      duration: 7000,\n                      horizontalPosition: 'center',\n                      verticalPosition: 'top',\n                      panelClass: 'alert-style-error'\n                    });\n                    break;\n                }\n              })\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        })\n        break;\n    }\n  }\n\n  addNewTest() {\n    switch (this.newTest.invalid) {\n      case true:\n        console.log('false');\n        break;\n      default:\n        this.testsService.tests_add_new_test(this.newTest.value).subscribe(res => {\n          this.modal_alert_message = JSON.parse(res)\n          switch (this.modal_alert_message) {\n            case 'Новый тест добавлен':\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        })\n        break;\n    }\n\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n}\n","<div *ngIf=\"formValueAdd\">\n\n\n  <h1 mat-dialog-title>Новый тест</h1>\n  <mat-divider></mat-divider>\n  <div [formGroup]=\"newTest\">\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Название теста</mat-label>\n      <input matInput formControlName=\"name_test\">\n      <mat-error *ngIf=\"!!fn.name_test.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Выберете должность</mat-label>\n      <mat-select formControlName=\"position_type\">\n        <mat-option [value]=\"item\" *ngFor=\"let item of list_position;\">\n          {{item}}\n        </mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.position_type.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <mat-label>Максимальная оценка теста</mat-label>\n      <input matInput type='number' formControlName=\"max_score\">\n      <mat-error *ngIf=\"!!fn.max_score.errors?.required\">Поле не заполнено</mat-error>\n      <mat-error *ngIf=\"!!fn.max_score.errors?.max\">Максимальная оценка 200 балов</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Описание теста</mat-label>\n      <input matInput formControlName=\"description_test\">\n    </mat-form-field>\n\n  </div>\n\n  <mat-divider></mat-divider>\n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"addNewTest()\">Отправить</button>\n    <button mat-raised-button color=\"primary\" mat-dialog-close\n      style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n  </div>\n</div>\n\n<div *ngIf=\"boolean_list_person\">\n  <div class=\"row\">\n    <div class=\"col-2\">\n      <mat-form-field>\n        <mat-label>Поиск</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\">\n      </mat-form-field>\n    </div>\n    <div class=\"col-3 ml-auto\">\n      <mat-form-field>\n        <mat-label>Выберете тест</mat-label>\n        <mat-select [(ngModel)]=\"name_test\">\n          <mat-option *ngFor=\"let food of list_name_tests\" [value]=\"food\">\n            {{food}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"mat-elevation-z8 mt-1\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n            [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"fi\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Ф.И.</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.fi }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>TT,подразделение</th>\n        <td mat-cell *matCellDef=\"let row\">\n          {{row.department}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Должность</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.position}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns;\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n  </div>\n  <mat-divider></mat-divider>\n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"addPersons()\">Добавить</button>\n    <button mat-raised-button color=\"primary\" mat-dialog-close\n      style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DialogData } from '../main/main.component';\nimport { MustMatch } from '../login/must-match.validator';\nimport { LoginService } from '../service/login.service';\n\n\n@Component({\n  templateUrl: './modal-users-settings.component.html',\n  styleUrls: ['./modal-users-settings.component.scss']\n})\nexport class ModalUsersSettingsComponent implements OnInit {\n\n  registerForm: FormGroup\n  modal_alert_message: any\n  user_name = this.loginService.user_name\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalUsersSettingsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public formBuilder: FormBuilder,\n    private _snackBar: MatSnackBar,\n    private loginService: LoginService\n  ) { }\n\n  get f() { return this.registerForm.controls; }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      userName: new FormControl('', Validators.required),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      confirmPassword: new FormControl('', Validators.required),\n      first_name: new FormControl('', Validators.required),\n      last_name: new FormControl('', Validators.required),\n      user_role: new FormControl('', Validators.required)\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n\n  register() {\n    switch (this.registerForm.invalid) {\n      case true:\n        console.log('false');\n        console.log(this.registerForm.value);\n        break;\n      default:\n        this.loginService.registerUser(this.registerForm.value).subscribe(res => {\n          this.modal_alert_message = JSON.parse(res)\n          console.log(this.modal_alert_message);\n          switch (this.modal_alert_message) {\n            case 'Регистрация успешна':\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        });\n        break;\n    }\n  }\n}\n","<h1 mat-dialog-title>Новый пользователь</h1>\n<div mat-dialog-content>\n    <div [formGroup]=\"registerForm\">\n        <div class=\"row\">\n            <mat-form-field class=\"col\" appearance=\"outline\">\n                <mat-label>Фамилия</mat-label>\n                <input matInput formControlName=\"last_name\">\n                <mat-error *ngIf=\"!!f.last_name.errors?.required\">Поле не заполнено</mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"col\" appearance=\"outline\">\n                <mat-label>Имя</mat-label>\n                <input matInput formControlName=\"first_name\">\n                <mat-error *ngIf=\"!!f.first_name.errors?.required\">Поле не заполнено</mat-error>\n            </mat-form-field>\n        </div>\n        <mat-form-field class=\"col\" appearance=\"outline\">\n            <mat-label>User name</mat-label>\n            <input matInput formControlName=\"userName\">\n            <mat-error *ngIf=\"!!f.userName.errors?.required\">Поле не заполнено</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\" appearance=\"outline\">\n            <mat-label>Пароль</mat-label>\n            <input matInput type=\"password\" formControlName=\"password\">\n            <mat-error *ngIf=\"!!f.password.errors?.required\">Поле не заполнено</mat-error>\n            <mat-error *ngIf=\"!!f.password.errors?.minlength\">Пароль должен быть не меньше 6 символов</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\" appearance=\"outline\">\n            <mat-label>Повторите пароль</mat-label>\n            <input matInput type=\"password\" formControlName=\"confirmPassword\">\n            <mat-error *ngIf=\"!!f.confirmPassword.errors?.required\">Поле не заполнено</mat-error>\n            <mat-error *ngIf=\"!!f.confirmPassword.errors?.mustMatch\">Введенный пароль не совпадает</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\" appearance=\"outline\">\n            <mat-label>Привилегии пользователя</mat-label>\n            <mat-select formControlName=\"user_role\">\n                <mat-option *ngIf=\"user_name==='admin'\" value=\"admin\">Admin</mat-option>\n                <mat-option value=\"user_hr\">Human resources</mat-option>\n                <mat-option value=\"user_pi\">Кадровый инспектор</mat-option>\n                <mat-option value=\"user_mt\">Менеджер по обучению</mat-option>\n            </mat-select>\n            <mat-error>Выберете привилегии</mat-error>\n        </mat-form-field>\n    </div>\n</div>\n<div mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" class=\"mr-auto\" (click)=\"register()\">Отправить</button>\n    <button mat-raised-button color=\"primary\" mat-dialog-close\n        style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ReportPageService } from 'src/app/service/report-page.service'\nimport * as moment from 'moment';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\n\n@Component({\n  selector: 'app-report-page',\n  templateUrl: './report-page.component.html',\n  styleUrls: ['./report-page.component.scss']\n})\nexport class ReportPageComponent implements OnInit {\n\n  modal_alert_message:any\n  report_list: string[]\n  search:any\n  type_reports = 'all'\n  type_reports_list:string[]\n\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\n\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  displayedColumns: string[] = [\n    'id',\n    'fi',\n    'number_phone',\n    'department',\n    'position',\n    'type_reports',\n    'description',\n    'date_time'\n  ];\n\n\n  constructor(\n    private reportPage:ReportPageService\n  ) {\n    this.reportPage.report_get_table(this.type_reports).subscribe(res => {\n      this.report_list = JSON.parse(res)\n      this.dataSource = new MatTableDataSource(this.report_list);\n      this.dataSource.paginator = this.paginator;\n    })\n    this.reportPage.report_get_type_reports_list().subscribe(res => {\n      this.type_reports_list = JSON.parse(res);\n    })\n  }\n\n  ngModalChangeTypeReportList(){\n    this.reportPage.report_get_table(this.type_reports).subscribe(res => {\n      this.report_list = JSON.parse(res)\n      this.dataSource = new MatTableDataSource(this.report_list);\n      this.dataSource.paginator = this.paginator;\n    })\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid mt-2 mb-3\">\n  <div class=\"row\">\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Поиск</mat-label>\n      <input matInput [(ngModel)]=\"search\" (keyup)=\"applyFilter($event)\">\n    </mat-form-field>\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Выберете тип обращения</mat-label>\n      <mat-select [(ngModel)]=\"type_reports\" (ngModelChange)=\"ngModalChangeTypeReportList()\">\n        <mat-option value=\"all\">Все</mat-option>\n        <mat-option *ngFor=\"let food of type_reports_list\" [value]=\"food\">\n          {{food}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fi\">\n      <th mat-header-cell *matHeaderCellDef> Фамилия, Имя </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.fi}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"number_phone\">\n      <th mat-header-cell *matHeaderCellDef> Номер телефона </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.number_phone}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"department\">\n      <th mat-header-cell *matHeaderCellDef> Подразделение </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.department}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> Должность </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"type_reports\">\n      <th mat-header-cell *matHeaderCellDef> Тип обращения </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.type_reports}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef> Описание </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-form-field class=\"example-full-width\">\n          <!-- <textarea matInput cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"1\"\n            cdkAutosizeMaxRows=\"5\" readonly>{{element.description}}</textarea> -->\n            <textarea matInput readonly>{{element.description}}</textarea>\n        </mat-form-field>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"date_time\">\n      <th mat-header-cell *matHeaderCellDef style=\"text-align: center;\"> Дата обращения </th>\n      <td mat-cell *matCellDef=\"let element\" style=\"text-align: center;\"> {{element.date_time}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n</div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ListTtService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  get_all() {\n    return this.http.post(\n      './assets/php/list_tt_get_all.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  \n  edit_outlet(edit_outlet) {\n    return this.http.post(\n      './assets/php/list_tt_edit.php',\n      JSON.stringify(\n        {\n          edit_outlet:edit_outlet\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  \n  add_outlet(new_outlet){\n    return this.http.post(\n      './assets/php/list_tt_add.php',\n      JSON.stringify(\n        {\n          new_outlet:new_outlet\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppComponent } from '../app.component';\n\n\n@Injectable({\n\n  providedIn: 'root'\n\n})\nexport class LoginService {\n\n  user_id: string = JSON.parse(localStorage.getItem('id_user_pd'));\n  user_name: string = localStorage.getItem('user_name_pd');\n  user_role: string = localStorage.getItem('user_role_pd')\n\n\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  registerUser(user_form) {\n    return this.http.post(\n      './assets/php/register_user.php',\n      JSON.stringify(\n        {\n          user_form: user_form\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  getLogin(user_name, password) {\n\n    return this.http.post(\n      './assets/php/login.php',\n      JSON.stringify({\n\n        'user_name': user_name,\n        'password': password\n      }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  getSettingsUser(user_id) {\n    return this.http.post(\n      './assets/php/user_settings_get.php',\n      JSON.stringify({\n        'user_id': user_id,\n      }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  getUsersSettingsDistribution(user_id) {\n    return this.http.post(\n      './assets/php/users_settings_distribution_get.php',\n      JSON.stringify({\n        'user_id': user_id,\n      }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  toggleUsersSettingsDistribution(user_id,main_page,settings_page,list_tt_page, distribution_page,report_page,tests_page) {\n    return this.http.post(\n      './assets/php/users_settings_distribution_toggle.php',\n      JSON.stringify(\n        {\n          user_id: user_id,\n          main_page:main_page,\n          settings_page:settings_page,\n          list_tt_page:list_tt_page,\n          distribution_page:distribution_page,\n          report_page:report_page,\n          tests_page:tests_page\n\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  admin_main_table_get() {\n    return this.http.post(\n      './assets/php/admin_main_table_get.php',\n      JSON.stringify(\n        {}\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  admin_main_delete_employee(id_person) {\n    return this.http.post(\n      './assets/php/admin_main_delete_employee.php',\n      JSON.stringify(\n        {\n          id_person: id_person\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  admin_main_add_employee(new_form, time_create, user_name_create_employee) {\n    console.log(new_form);\n    return this.http.post(\n      './assets/php/admin_main_add_employee.php',\n      JSON.stringify(\n        {\n          new_form: new_form,\n          time_create: time_create,\n          user_name_create_employee: user_name_create_employee\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  admin_main_update_employee(user_name, form_edit_employee, time_last_change) {\n    return this.http.post(\n      './assets/php/admin_main_update_employee.php',\n      JSON.stringify(\n        {\n          user_name: user_name,\n          form_edit_employee: form_edit_employee,\n          time_last_change: time_last_change\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  admin_get_attraction_channel(date){\n    return this.http.post(\n      './assets/php/admin_get_attraction_channel.php',\n      JSON.stringify(\n        {\n          date: date\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n\n  user_hr_get_main_table(user_name_create_employee) {\n    return this.http.post(\n      './assets/php/user_hr_get_main_table.php',\n      JSON.stringify(\n        {\n          user_name_create_employee: user_name_create_employee\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  user_hr_main_add_employee(newPerson, dateTimeNow, user_name) {\n    return this.http.post(\n      './assets/php/user_hr_main_add_employee.php',\n      JSON.stringify(\n        {\n          newPerson: newPerson,\n          dateTimeNow: dateTimeNow,\n          user_name: user_name\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n\n\n  user_hr_main_update_employee(user_name, editPerson, dateTimeNow, id_person) {\n    return this.http.post(\n      './assets/php/user_hr_main_update_employee.php',\n      JSON.stringify(\n        {\n          user_name: user_name,\n          editPerson: editPerson,\n          dateTimeNow: dateTimeNow,\n          id_person:id_person\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  get_id_tt() {\n    return this.http.post(\n      './assets/php/get_id_tt.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  user_mt_main_table_get(name_test, passing_date) {\n    return this.http.post(\n      './assets/php/user_mt_main_table_get.php',\n      JSON.stringify(\n        {\n          name_test: name_test,\n          passing_date: passing_date\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  user_mt_update_employee(user_name, form_edit_employee, id_person, date_now) {\n    return this.http.post(\n      './assets/php/user_mt_get_main_update_employee.php',\n      JSON.stringify(\n        {\n          user_name: user_name,\n          form_edit_employee: form_edit_employee,\n          id_person: id_person,\n          date_now: date_now\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  user_pi_get_table_main() {\n    return this.http.post(\n      './assets/php/user_pi_get_main_table.php',\n      JSON.stringify(\n        {}\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  user_pi_update_employee(user_name, form_edit_employee, id_person, date_now) {\n    return this.http.post(\n      './assets/php/user_pi_get_main_update_employee.php',\n      JSON.stringify(\n        {\n          user_name: user_name,\n          form_edit_employee: form_edit_employee,\n          id_person: id_person,\n          date_now: date_now\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n\n\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportPageService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  report_get_table(type_reports) {\n    return this.http.post(\n      './assets/php/report_get_table.php',\n      JSON.stringify(\n        {\n          type_reports:type_reports\n        }\n      ),\n      { responseType: 'text' }\n    )\n  }\n\n  report_get_type_reports_list(){\n    return this.http.post(\n      './assets/php/report_get_type_reports_list.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    )\n  }\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsUsersService {\n\n  user_server: any;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  RunPy(user_id, backtest_id) {\n    console.log(user_id, backtest_id);\n    return this.http.post('http://' + this.user_server + '/research_tool/assets/python/trading_script/start_py.php',\n      JSON.stringify(\n        {\n          user_id: user_id,\n          backtest_id: backtest_id\n        }\n      ),\n      { responseType: 'text' });\n  }\n\n\n  get_users() {\n    return this.http.post(\n      './assets/php/settings_users_get.php',\n      JSON.stringify(\n        {\n\n        }\n      ),\n      { responseType: 'text' }\n    )\n  }\n\n  update_user_settings(users_array) {\n    return this.http.post(\n      './assets/php/settings_users_update.php',\n      JSON.stringify(\n        {\n          users_array:users_array\n        }\n      ),\n      { responseType: 'text' }\n    )\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TelegramSendService {\n\n  constructor(\n    private http:HttpClient\n  ) { }\n\n  telegram_send_get_list_type_department(){\n    return this.http.post(\n      './assets/php/telegram_send_get_list_type_department.php',\n      JSON.stringify(\n        {\n\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_list_all_person(type_department){\n    return this.http.post(\n      './assets/php/telegram_send_get_list_all_person.php',\n      JSON.stringify(\n        {\n          type_department:type_department,\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_department_list(type_department){\n    return this.http.post(\n      './assets/php/telegram_send_get_department_list.php',\n      JSON.stringify(\n        {\n          type_department:type_department,\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_department_list_person(type_department,department){\n    return this.http.post(\n      './assets/php/telegram_send_get_department_list_person.php',\n      JSON.stringify(\n        {\n          type_department:type_department,\n          department:department\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_list_cities(){\n    return this.http.post(\n      './assets/php/telegram_send_get_list_cities.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_list_person_by_cities(array_city){\n    return this.http.post(\n      './assets/php/telegram_send_get_list_person_by_cities.php',\n      JSON.stringify(\n        {\n          array_city:array_city\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_person_by_number_tt(array_number_td){\n    return this.http.post(\n      './assets/php/telegram_send_get_person_by_number_tt.php',\n      JSON.stringify(\n        {\n          array_number_td:array_number_td\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_position_td(){\n    return this.http.post(\n      './assets/php/telegram_send_get_position_td.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_all_person_position (type_department,position){\n    return this.http.post(\n      './assets/php/telegram_send_get_all_person_position.php',\n      JSON.stringify(\n        {\n          type_department:type_department,\n          position:position\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  add_TOKEN_user(user_id,user_name,TOKEN_id,TOKEN_name){\n    return this.http.post(\n      './assets/php/telegram_add_token.php',\n      JSON.stringify(\n        {\n          user_id:user_id,\n          user_name:user_name,\n          TOKEN_id:TOKEN_id,\n          TOKEN_name:TOKEN_name,\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  get_my_token(user_id){\n    return this.http.post(\n      './assets/php/telegram_get_token_name.php',\n      JSON.stringify(\n        {\n          user_id:user_id\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n\n  get_type_department(){\n    return this.http.post(\n      './assets/php/telegram_get_type_department.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  get_department_trade_dot(city){\n    return this.http.post(\n      './assets/php/telegram_get_department.php',\n      JSON.stringify(\n        {\n          city:city\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n    get_position(){\n    return this.http.post(\n      './assets/php/telegram_get_trade_dot_position.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n\n  get_data_send_bot(department){\n    return this.http.post(\n      './assets/php/telegram_get_data_send.php',\n      JSON.stringify(\n        {\n          department:department\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  get_department_office(type_department){\n    return this.http.post(\n      './assets/php/telegram_get_department_office.php',\n      JSON.stringify(\n        {\n          type_department:type_department\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  select_person(user_id, selected){\n    return this.http.post(\n      './assets/php/telegram_get_select_person.php',\n      JSON.stringify({\n        user_id:user_id,\n        selected:selected\n      }),\n      { responseType: 'text' }\n    )\n\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestsService {\n\n  constructor(\n    private http:HttpClient\n  ) { }\n\n  tests_add_new_test(newTest){\n    return this.http.post(\n      './assets/php/tests_add_new_test.php',\n      JSON.stringify(\n        {\n          newTest:newTest\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  tests_get_list_position(){\n    return this.http.post(\n      './assets/php/tests_get_list_position.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  tests_save_changes_table(id_person,test_score,passing_date,name_test){\n    return this.http.post(\n      './assets/php/tests_save_changes_table.php',\n      JSON.stringify(\n        {\n          id_person:id_person,\n          test_score:test_score,\n          passing_date:passing_date,\n          name_test:name_test\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  tests_get_name_tests(){\n    return this.http.post(\n      './assets/php/tests_get_name_tests.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  tests_get_list_persons(){\n    return this.http.post(\n      './assets/php/tests_get_list_persons.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  tests_check_persons_for_match(list_person,name_test){\n    return this.http.post(\n      './assets/php/tests_check_persons_for_match.php',\n      JSON.stringify(\n        {\n          list_person:list_person,\n          name_test:name_test\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  tests_add_testing_for_person(list_person,name_test){\n    return this.http.post(\n      './assets/php/tests_add_testing_for_person.php',\n      JSON.stringify(\n        {\n          list_person:list_person,\n          name_test:name_test\n\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  tests_update_persons_data(editPerson,id_person){\n    return this.http.post(\n      './assets/php/tests_update_persons_data.php',\n      JSON.stringify(\n        {\n          editPerson:editPerson,\n          id_person:id_person\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SettingsUsersService } from '../service/settings-users.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoginService } from '../service/login.service';\nimport { MatAccordion } from '@angular/material/expansion';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ModalUsersSettingsComponent } from '../modal-users-settings/modal-users-settings.component';\n\nexport interface DialogData {\n  user_name: string,\n  value: string,\n  row: any\n\n}\n\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-settings-users',\n  templateUrl: './settings-users.component.html',\n  styleUrls: ['./settings-users.component.scss']\n})\nexport class SettingsUsersComponent implements OnInit {\n\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n  panelOpenState = false;\n\n  error_register: any;\n  users_array:any;\n  hide = true\n  user_settings_obj:FormGroup\n  modal_alert_message:any;\n\n\n\n\n  constructor(\n    private settingsUsers:SettingsUsersService,\n    private loginService:LoginService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n\n  ) {\n    this.settingsUsers.get_users().subscribe(res => {\n      this.users_array = JSON.parse(res);\n    })\n  }\n\n\n  // update_user_settings(index){\n  //   this.settingsUsers.\n\n  // }\n  get_users_settings(){\n    this.settingsUsers.get_users().subscribe(res => {\n      this.users_array = JSON.parse(res);\n    })\n  }\n\n\n\n\n  update_user_settings(index){\n  this.settingsUsers.update_user_settings(this.users_array[index]).subscribe(res => {\n      this.modal_alert_message = JSON.parse(res)\n      switch(this.modal_alert_message){\n        case 'Данные обновлены':\n          this._snackBar.open(this.modal_alert_message, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          break;\n          default:\n            this._snackBar.open(this.modal_alert_message[0].error, '', {\n              duration: 7000,\n              horizontalPosition: 'center',\n              verticalPosition: 'top',\n              panelClass: 'alert-style-error'\n            });\n            break;\n      }\n    })\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ModalUsersSettingsComponent, {\n      maxWidth: '500px',\n      disableClose: true,\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      switch (result) {\n        case 'Пользователь добавлен':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          break;\n        }\n      })\n  }\n\n\n  ngOnInit(): void {\n\n  }\n\n\n\n}\n","<div class=\"container mt-2 mb-3\">\n    <button mat-fab color=\"primary\" class=\"m-2\" (click)=\"openDialog()\">\n        <mat-icon>add</mat-icon>\n    </button>\n<div class=\"example-headers-align mt-2\">\n    <mat-accordion>\n        <mat-expansion-panel [hidden]=\"item.user_name==='admin'\" *ngFor=\"let item of users_array; let i = index \">\n            <mat-expansion-panel-header>\n                <mat-panel-title class=\"col\">\n                    <mat-icon class=\"mr-2\">account_circle</mat-icon> {{ item.first_name + \" \" + item.last_name }}\n                </mat-panel-title>\n                <mat-panel-description class=\"col\">Персональные данные</mat-panel-description>\n            </mat-expansion-panel-header>\n            <div class=\"row justify-content-center\">\n\n                <mat-form-field>\n                    <mat-label>Имя</mat-label>\n                    <input [(ngModel)]=\"item.first_name\" matInput />\n                    <mat-hint *ngIf=\"item.first_name==='' \" [ngStyle]=\"{ color: 'red' } \">Введите данные</mat-hint>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>Фамилия</mat-label>\n                    <input [(ngModel)]=\"item.last_name\" matInput />\n                    <mat-hint *ngIf=\"item.last_name==='' \" [ngStyle]=\"{ color: 'red' } \">Введите данные</mat-hint>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>Имя пользователя</mat-label>\n                    <input [(ngModel)]=\"item.user_name\" matInput />\n                    <mat-hint *ngIf=\"item.user_name==='' \" [ngStyle]=\"{ color: 'red' } \">Введите данные</mat-hint>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>Пароль</mat-label>\n                    <input matInput [(ngModel)]=\"item.password\" [type]=\"hide ? 'password' : 'text' \" />\n                    <button mat-icon-button matSuffix (click)=\"hide=! hide \" [attr.aria-label]=\" 'Hide password' \" [attr.aria-pressed]=\"hide \">\n                        <mat-icon>{{ hide ? \"visibility_off \" : \"visibility \" }}</mat-icon>\n                    </button>\n                    <mat-hint *ngIf=\"item.password==='' \" [ngStyle]=\"{ color: 'red' } \">Введите данные</mat-hint>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>Интерфейс</mat-label>\n                    <mat-select [(ngModel)]=\"item.user_role\">\n                        <mat-option *ngIf=\"item.user_name ===' admin'\" value=\"admin\">Admin</mat-option>\n                        <mat-option value=\"user_hr\">Human resources</mat-option>\n                        <mat-option value=\"user_pi\">Кадровый инспектор</mat-option>\n                        <mat-option value=\"user_mt\">Менеджер по обучению</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 class=\"text-center\">Доступ</h2>\n            <div class=\"row justify-content-center\">\n                    <mat-checkbox [(ngModel)]=\"item.access_tests\">Тесты</mat-checkbox>\n                    <mat-checkbox [(ngModel)]=\"item.access_list_tt\">Заведение</mat-checkbox>\n                    <mat-checkbox [(ngModel)]=\"item.access_distribution\">Рассылка в Telegram</mat-checkbox>\n                    <mat-checkbox [(ngModel)]=\"item.access_report\">Предложение и замечания</mat-checkbox>\n            </div>\n            <button mat-raised-button class=\"ml-auto \" color=\"primary\" (click)=\"update_user_settings(i) \">Обновить</button>\n        </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport Telegram from 'telegram-send-message';\nimport { TelegramSendService } from '../service/telegram-send.service';\nimport { LoginService } from '../service/login.service';\nimport { SettingsUsersService } from '../service/settings-users.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BreakpointObserver } from '@angular/cdk/layout';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-telegram-send',\n  templateUrl: './telegram-send.component.html',\n  styleUrls: ['./telegram-send.component.scss'],\n})\nexport class TelegramSendComponent implements OnInit {\n\n  type_department = 'all';\n  department = 'all';\n  array_city = ['all'];\n  position = 'all'\n  array_number_td = ['all']\n  textMessage: {}\n\n  list_type_department: String[];\n  list_people_connected: String[];\n  list_people_not_connected: String[];\n  list_department: String[];\n  list_cities: string[];\n  list_position: string[];\n  list_number_tt: any[];\n  list_select:any\n\n  dataSource_connected = new MatTableDataSource();\n  dataSource_not_connected = new MatTableDataSource();\n  dataSource_select = new MatTableDataSource();\n\n  selection = new SelectionModel(true, []);\n\n  all_cities = false;\n  booleanTypeOffice = false;\n  booleanTypeTradeDot = false;\n\n  @ViewChild('paginator_connected', { static: true }) paginator_connected: MatPaginator;\n  @ViewChild('paginator_not_connected', { static: true }) paginator_not_connected: MatPaginator;\n  @ViewChild('paginator_select', { static: true }) paginator_select: MatPaginator;\n\n  local = JSON.parse(localStorage.getItem('data_source'))\n\n  displayedColumns_connected: string[] = [\n    'select',\n    'id_person',\n    'fi',\n    'department',\n    'type_department',\n    'position',\n    'status'\n  ];\n\n  displayedColumns_not_connected: string[] = [\n    'id_person',\n    'fi',\n    'department',\n    'type_department',\n    'position',\n    'status'\n  ];\n\n  displayedColumns_select: string[] = [\n    'fi',\n    'department'\n  ];\n\n  TOKEN_id = '1337687879:AAGOM9TILMpbpGDxjlV_XzPfIDSGf57whfM';\n  TOKEN_id_test = '1202623405:AAHxtwkptrydHKcKxLRykD9IwF6DdhiKf6k';\n\n\n  constructor(\n    private telegramSendService: TelegramSendService,\n    private loginService: LoginService,\n    private settingsUserService: SettingsUsersService,\n    private _snackBar: MatSnackBar\n\n  ) {\n    this.telegramSendService.telegram_send_get_list_type_department().subscribe(res => {\n      this.list_type_department = JSON.parse(res);\n\n    })\n    this.telegramSendService.telegram_send_get_list_all_person(this.type_department).subscribe((res) => {\n      this.list_people_connected = JSON.parse(res).connected;\n      this.list_people_not_connected = JSON.parse(res).not_connected;\n      this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n      this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n      this.dataSource_connected.paginator = this.paginator_connected;\n      this.dataSource_not_connected.paginator = this.paginator_not_connected;\n      this.selection = new SelectionModel(true, []);\n      console.log(this.dataSource_connected);\n    });\n    this.selectPerson()\n  }\n\n\n  ngModalChangeTypeDepartmentList() {\n    this.telegramSendService.telegram_send_get_list_all_person(this.type_department).subscribe((res) => {\n      this.list_people_connected = JSON.parse(res).connected;\n      this.list_people_not_connected = JSON.parse(res).not_connected;\n      this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n      this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n      this.dataSource_connected.paginator = this.paginator_connected;\n      this.dataSource_not_connected.paginator = this.paginator_not_connected;\n      this.selection = new SelectionModel(true, []);\n      switch (this.type_department) {\n        case 'Торговая точка':\n          this.telegramSendService.telegram_send_get_list_cities().subscribe(res => {\n            this.list_cities = JSON.parse(res)\n            this.booleanTypeOffice = false\n            this.booleanTypeTradeDot = true\n            this.department = 'all';\n          });\n          break;\n        case 'Офис':\n          this.telegramSendService.telegram_send_get_department_list(this.type_department).subscribe((res) => {\n            this.list_department = JSON.parse(res);\n            this.booleanTypeTradeDot = false\n            this.booleanTypeOffice = true\n          })\n          break;\n        case 'all':\n          this.booleanTypeTradeDot = false\n          this.booleanTypeOffice = false\n          break\n      }\n    });\n  }\n\n  ngModalChangeDepartmentOffice() {\n    this.telegramSendService.telegram_send_get_department_list_person(this.type_department, this.department).subscribe(res => {\n      this.list_people_connected = JSON.parse(res).connected;\n      this.list_people_not_connected = JSON.parse(res).not_connected;\n      this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n      this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n      this.dataSource_connected.paginator = this.paginator_connected;\n      this.dataSource_not_connected.paginator = this.paginator_not_connected;\n      this.selection = new SelectionModel(true, []);\n    })\n  }\n\n  ngModelChangeAllCities() {\n    switch (this.all_cities) {\n      case true:\n        this.telegramSendService.telegram_send_get_position_td().subscribe(res => {\n          this.list_position = JSON.parse(res);\n          this.telegramSendService.telegram_send_get_list_all_person(this.type_department).subscribe((res) => {\n            this.list_people_connected = JSON.parse(res).connected;\n            this.list_people_not_connected = JSON.parse(res).not_connected;\n            this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n            this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n            this.dataSource_connected.paginator = this.paginator_connected;\n            this.dataSource_not_connected.paginator = this.paginator_not_connected;\n            this.selection = new SelectionModel(true, []);\n          })\n        })\n        break;\n      case false:\n        this.telegramSendService.telegram_send_get_list_cities().subscribe(res => {\n          this.list_cities = JSON.parse(res)\n          this.telegramSendService.telegram_send_get_list_all_person(this.type_department).subscribe((res) => {\n            this.list_people_connected = JSON.parse(res).connected;\n            this.list_people_not_connected = JSON.parse(res).not_connected;\n            this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n            this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n            this.dataSource_connected.paginator = this.paginator_connected;\n            this.dataSource_not_connected.paginator = this.paginator_not_connected;\n            this.selection = new SelectionModel(true, []);\n          })\n        })\n        break;\n    }\n  }\n\n  ngModelChangePosition() {\n    this.telegramSendService.telegram_send_get_all_person_position(this.type_department, this.position).subscribe(res => {\n      this.list_people_connected = JSON.parse(res).connected;\n      this.list_people_not_connected = JSON.parse(res).not_connected;\n      this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n      this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n      this.dataSource_connected.paginator = this.paginator_connected;\n      this.dataSource_not_connected.paginator = this.paginator_not_connected;\n      this.selection = new SelectionModel(true, []);\n    })\n  }\n\n  ngModelChangeCities() {\n    this.telegramSendService.telegram_send_get_list_person_by_cities(this.array_city).subscribe(res => {\n      this.list_people_connected = JSON.parse(res).connected === null ? [] : JSON.parse(res).connected\n      this.list_people_not_connected = JSON.parse(res).not_connected === null ? [] : JSON.parse(res).not_connected;\n      this.list_number_tt = JSON.parse(res).number_td = null ? [] : JSON.parse(res).number_td\n      this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n      this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n      this.dataSource_connected.paginator = this.paginator_connected;\n      this.dataSource_not_connected.paginator = this.paginator_not_connected;\n      this.selection = new SelectionModel(true, []);\n    })\n\n  }\n\n  ngModelChangeNumberTT() {\n    switch (this.array_number_td) {\n      case null:\n      this.ngModelChangeCities()\n        break;\n      default:\n        this.telegramSendService.telegram_send_get_person_by_number_tt(this.array_number_td).subscribe(res => {\n          this.list_people_connected = JSON.parse(res).connected === null ? [] : JSON.parse(res).connected\n          this.list_people_not_connected = JSON.parse(res).not_connected === null ? [] : JSON.parse(res).not_connected;;\n          this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n          this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n          this.dataSource_connected.paginator = this.paginator_connected;\n          this.dataSource_not_connected.paginator = this.paginator_not_connected;\n          this.selection = new SelectionModel(true, []);\n        })\n        break;\n    }\n\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource_connected.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource_connected.data.forEach(row => this.selection.select(row));\n\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n\n  }\n\n  buttonSendMessage() {\n    this.selection.selected.forEach(element => {\n      Telegram.setToken(this.TOKEN_id);\n      Telegram.setRecipient(element.id_telegram);\n      Telegram.setMessage(this.textMessage);\n      Telegram.send();\n      console.log(Telegram);\n    })\n    this._snackBar.open('Успешно отправлено!', '', {\n      duration: 2000,\n      horizontalPosition: 'center',\n      verticalPosition: 'top',\n      panelClass: 'alert-style-success'\n    });\n  }\n\n  selectPerson() {\n    this.telegramSendService.select_person(this.loginService.user_id, this.selection.selected).subscribe(res => {\n      console.log(this.selection.selected);\n      console.log(res);\n      this.dataSource_select.data = [];\n      this.list_select = JSON.parse(res) === null ? [] : JSON.parse(res);\n      console.log(this.dataSource_select);\n      console.log(this.list_select);\n      this.dataSource_select = new MatTableDataSource(this.list_select);\n      this.dataSource_select.paginator = this.paginator_select;\n    })\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource_connected.filter = filterValue;\n    console.log(filterValue);\n    console.log(this.dataSource_connected);\n    switch (filterValue) {\n      case `офис`:\n        this.telegramSendService.telegram_send_get_department_list(`офис`).subscribe((res) => {\n          this.list_department = JSON.parse(res);\n          this.booleanTypeTradeDot = false\n          this.booleanTypeOffice = true\n        })\n        break;\n        case 'торговая точка':\n              this.telegramSendService.telegram_send_get_list_cities().subscribe(res => {\n                    this.list_cities = JSON.parse(res)\n                    this.booleanTypeOffice = false\n                    this.booleanTypeTradeDot = true\n                    this.department = 'all';\n                  });\n                  break;\n      case '':\n        this.telegramSendService.telegram_send_get_department_list('').subscribe((res) => {\n          this.list_department = JSON.parse(res);\n          this.booleanTypeTradeDot = false\n          this.booleanTypeOffice = false\n        })\n        break;\n    }\n  }\n\n  ngOnInit(): void {\n\n  }\n\n\n\n}\n","<div class=\"container-fluid mt-2 mb-3\">\n  <div class=\"row\">\n    <div class=\"col-auto mt-2\">\n      <mat-form-field>\n        <mat-label>Выберете тип подразделения</mat-label>\n        <mat-select [(ngModel)]=\"type_department\" (selectionChange)=\"ngModalChangeTypeDepartmentList()\">\n          <mat-option value='all'>Все</mat-option>\n          <mat-option [value]=\"item_type_department\" *ngFor=\"let item_type_department of list_type_department\">\n            {{item_type_department}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <!-- Office -->\n      <mat-form-field *ngIf=\"booleanTypeOffice\">\n        <mat-label>Выберете подразделения</mat-label>\n        <mat-select [(ngModel)]=\"department\" (selectionChange)=\"ngModalChangeDepartmentOffice()\">\n          <mat-option value='all'>Все</mat-option>\n          <mat-option [value]=\"items_list_department\" *ngFor=\"let items_list_department of list_department\">\n            {{items_list_department}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <!-- Trade dot -->\n    <div *ngIf=\"booleanTypeTradeDot\" class=\"col-auto mt-2\">\n\n      <section class=\"example-section\">\n        <mat-checkbox class=\"example-margin\" [(ngModel)]=\"all_cities\" (ngModelChange)=\"ngModelChangeAllCities()\">Все города</mat-checkbox>\n      </section>\n\n      <mat-form-field *ngIf=\"all_cities\">\n        <mat-label>Выберете должность</mat-label>\n        <mat-select [(ngModel)]=\"position\" (selectionChange)=\"ngModelChangePosition()\">\n          <mat-option *ngFor=\"let items_list_position of list_position\" [value]=\"items_list_position\">\n            {{items_list_position}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field *ngIf=\"!all_cities\">\n        <mat-label>Выберете город</mat-label>\n        <mat-select [(ngModel)]=\"array_city\" (selectionChange)=\"ngModelChangeCities()\" multiple>\n          <mat-option *ngFor=\"let items_list_cities of list_cities\" [value]=\"items_list_cities\">{{items_list_cities}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field *ngIf=\"!all_cities\">\n        <mat-label>Выберете заведение</mat-label>\n        <mat-select [(ngModel)]=\"array_number_td\" (selectionChange)=\"ngModelChangeNumberTT()\" multiple>\n          <mat-option *ngFor=\"let items_list_number_tt of list_number_tt\" [value]=\"items_list_number_tt\">\n            TT-{{items_list_number_tt}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n    </div>\n    <!-- <div class=\"col-auto mt-2\">\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Текст сообщения</mat-label>\n        <textarea matInput cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"1\"\n          cdkAutosizeMaxRows=\"5\" [(ngModel)]='textMessage'></textarea>\n      </mat-form-field>\n    </div>\n    <div class=\"mt-2\">\n      <button mat-raised-button color=\"primary\" (click)=\"buttonSendMessage()\">Отправить</button>\n    </div> -->\n  </div>\n  <h2 class=\"m-2\">Подключенные</h2>\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource_connected\">\n\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null; selectPerson()\"\n            [checked]=\"selection.hasValue() && isAllSelected()\"\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\"\n            (change)=\"$event ? selection.toggle(row) : null; selectPerson()\" [checked]=\"selection.isSelected(row)\"\n            [aria-label]=\"checkboxLabel(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"id_person\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.id_person}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"fi\">\n        <th mat-header-cell *matHeaderCellDef> Фамилия, Имя </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.fi}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"type_department\">\n        <th mat-header-cell *matHeaderCellDef> Тип подразделения </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.type_department}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef> Подразделение </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.department}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef> Должность </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> Статус </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns_connected\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns_connected;\"></tr>\n    </table>\n    <mat-paginator #paginator_connected [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n  </div>\n\n  <h2 class=\"m-2\">Выбранные</h2>\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource_select\">\n\n      <ng-container matColumnDef=\"fi\">\n        <th mat-header-cell *matHeaderCellDef> Фамилия, Имя </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.fi}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef> Подразделение </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.department}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns_select\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns_select;\"></tr>\n    </table>\n    <mat-paginator #paginator_select [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n  </div>\n  <h2 class=\"m-2\">Не подключенные</h2>\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource_not_connected\">\n\n      <ng-container matColumnDef=\"id_person\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.id_person}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"fi\">\n        <th mat-header-cell *matHeaderCellDef> Фамилия, Имя </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.fi}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"type_department\">\n        <th mat-header-cell *matHeaderCellDef> Тип подразделения </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.type_department}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef> Подразделение </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.department}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef> Должность </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> Статус </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns_not_connected\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns_not_connected;\"></tr>\n    </table>\n    <mat-paginator #paginator_not_connected [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MainService } from '../service/main.service';\nimport { LoginService } from '../service/login.service';\nimport * as moment from 'moment';\nimport { ModalMtComponent } from '../modal-mt/modal-mt.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TestsService } from '../service/tests.service';\n\n\nexport interface DialogData {\n  user_name: string,\n  value: string,\n  row: any\n}\n\n@Component({\n  selector: 'app-tests',\n  templateUrl: './tests.component.html',\n  styleUrls: ['./tests.component.scss']\n})\nexport class TestsComponent implements OnInit {\n\n\n  id_tt: string[];\n  search: any\n  dataTable_user_mt = [];\n  displayedColumns: string[] = [\n    'fio',\n    'name_test',\n    'test_score',\n    'passing_date',\n    'type_department',\n    'department',\n    'position',\n    'internship_date'\n  ];\n  dataSource = new MatTableDataSource();\n\n  nameTestsList:string[];\n\n\n  modal_alert_message: any;\n  name_test = 'all'\n  passing_date = 'all'\n\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private mainService: MainService,\n    private formBuilder: FormBuilder,\n    public loginService: LoginService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n    private testsService: TestsService\n\n  ) {\n    this.mainService.user_mt_main_table_get(this.name_test, this.passing_date).subscribe((res) => {\n      this.dataTable_user_mt = JSON.parse(res);\n      this.dataSource = new MatTableDataSource(this.dataTable_user_mt);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n    });\n\n    this.testsService.tests_get_name_tests().subscribe(res => {\n      this.nameTestsList = JSON.parse(res)\n    })\n  }\n\n\n  ngOnInit(): void {\n\n  }\n\n  openDialog(row, value): void {\n    switch(value){\n      case 'new_testing_for_person':\n        const dialogRef_new_testing_for_person = this.dialog.open(ModalMtComponent, {\n          width: '900px',\n          maxHeight: '600px',\n          disableClose: true,\n          data: {\n            user_name: this.loginService.user_name,\n            value: value,\n            row: row\n          }\n        });\n\n        dialogRef_new_testing_for_person.afterClosed().subscribe(result => {\n          console.log(result);\n          switch (result) {\n            case 'Готово!':\n              this._snackBar.open(result, '', {\n                duration: 2000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-success'\n              });\n              this.get_table_personal();\n              break;\n          }\n        })\n        break;\n\n\n    case 'new_test':\n\n    const dialogRef = this.dialog.open(ModalMtComponent, {\n      maxWidth: '400px',\n      disableClose: true,\n      data: {\n        user_name: this.loginService.user_name,\n        value: value,\n        row: row\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      switch (result) {\n        case 'Новый тест добавлен':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          break;\n      }\n    })\n    break;\n  }\n  }\n\n  get_table_personal() {\n    this.mainService.user_mt_main_table_get(this.name_test, moment.parseZone(this.passing_date).format('YYYY-MM-DD')).subscribe((res) => {\n      console.log(this.name_test);\n      this.dataTable_user_mt = JSON.parse(res);\n      this.dataSource = new MatTableDataSource(this.dataTable_user_mt);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  saveChanges(row){\n    this.testsService.tests_save_changes_table(row.id_person,row.test_score,moment.parseZone(row.passing_date).format('YYYY-MM-DD'),row.name_test).subscribe(res => {\n      this.modal_alert_message = JSON.parse(res)\n    })\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n}\n","<div class=\"container-fluid mt-2\">\n  <div class=\"row\">\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Поиск</mat-label>\n      <input matInput [(ngModel)]=\"search\" (keyup)=\"applyFilter($event)\">\n    </mat-form-field>\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Выберете тест</mat-label>\n      <mat-select [(ngModel)]=\"name_test\" (ngModelChange)=\"get_table_personal()\">\n        <mat-option value=\"all\">Все</mat-option>\n        <mat-option *ngFor=\"let food of nameTestsList\" [value]=\"food\">\n          {{food}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Выберете дату</mat-label>\n      <input matInput [(ngModel)]=\"passing_date\" [matDatepicker]=\"picker_passing_date\" (ngModelChange)=\"get_table_personal()\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker_passing_date\"></mat-datepicker-toggle>\n      <mat-datepicker #picker_passing_date></mat-datepicker>\n    </mat-form-field>\n\n\n    <div class=\"ml-auto\">\n      <button mat-raised-button color=\"primary\" class=\"mr-2\" (click)=\"openDialog('','new_testing_for_person')\">Добавить сотрудников</button>\n      <button mat-raised-button color=\"primary\" (click)=\"openDialog('','new_test')\">Добавить тест</button>\n    </div>\n  </div>\n  <div class=\"mat-elevation-z8 mt-1\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <ng-container matColumnDef=\"fio\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"padding-left: 50px;\">Ф.И.О.</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.fio }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"type_department\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Тип подразделения</th>\n        <td mat-cell *matCellDef=\"let row\">\n          {{row.type_department}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>TT,подразделение</th>\n        <td mat-cell *matCellDef=\"let row\">\n          {{row.department}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Должность</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.position}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"internship_date\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата стажировки</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.internship_date}}</td>\n      </ng-container>\n      \n      <ng-container matColumnDef=\"name_test\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Название теста</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.name_test}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"test_score\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Оценка</th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-form-field style=\"width: 4rem;\">\n            <input matInput type=\"number\" max=\"200\" [(ngModel)]=\"row.test_score\" (ngModelChange)=\"saveChanges(row)\">\n          </mat-form-field>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"passing_date\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата тестирования</th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-form-field style=\"width: 11rem;\">\n            <input matInput [(ngModel)]=\"row.passing_date\" [matDatepicker]=\"picker_passing_date\" readonly (ngModelChange)=\"saveChanges(row)\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker_passing_date\"></mat-datepicker-toggle>\n            <mat-datepicker #picker_passing_date></mat-datepicker>\n          </mat-form-field>\n        </td>\n      </ng-container>\n\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n      <tr mat-row class=\"example-element-row col\" *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}