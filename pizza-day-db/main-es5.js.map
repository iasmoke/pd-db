{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///node_modules/moment/locale sync ^\\.\\/.*$","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/list-tt/list-tt.component.ts","webpack:///src/app/list-tt/list-tt.component.html","webpack:///src/app/login/login.component.ts","webpack:///src/app/login/login.component.html","webpack:///src/app/login/must-match.validator.ts","webpack:///src/app/main-user-hr/main-user-hr.component.ts","webpack:///src/app/main-user-hr/main-user-hr.component.html","webpack:///src/app/main-user-mt/main-user-mt.component.ts","webpack:///src/app/main-user-mt/main-user-mt.component.html","webpack:///src/app/main/main.component.ts","webpack:///src/app/main/main.component.html","webpack:///src/app/modal-admin/modal-admin.component.ts","webpack:///src/app/modal-admin/modal-admin.component.html","webpack:///src/app/modal-hr/modal-hr.component.ts","webpack:///src/app/modal-hr/modal-hr.component.html","webpack:///src/app/modal-list-tt/modal-list-tt.component.ts","webpack:///src/app/modal-list-tt/modal-list-tt.component.html","webpack:///src/app/modal-mt/modal-mt.component.ts","webpack:///src/app/modal-mt/modal-mt.component.html","webpack:///src/app/modal-users-settings/modal-users-settings.component.ts","webpack:///src/app/modal-users-settings/modal-users-settings.component.html","webpack:///src/app/report-page/report-page.component.ts","webpack:///src/app/report-page/report-page.component.html","webpack:///src/app/service/list-tt.service.ts","webpack:///src/app/service/login.service.ts","webpack:///src/app/service/main.service.ts","webpack:///src/app/service/report-page.service.ts","webpack:///src/app/service/settings-users.service.ts","webpack:///src/app/service/telegram-send.service.ts","webpack:///src/app/service/tests.service.ts","webpack:///src/app/settings-users/settings-users.component.ts","webpack:///src/app/settings-users/settings-users.component.html","webpack:///src/app/telegram-send/telegram-send.component.ts","webpack:///src/app/telegram-send/telegram-send.component.html","webpack:///src/app/tests/tests.component.ts","webpack:///src/app/tests/tests.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","map","webpackContext","webpackContextResolve","__webpack_require__","o","webpackContextKeys","Object","AppComponent","loginService","_snackBar","_focusMonitor","title","backgroundColorToggle","program_v","user_id","user_name","user_role","mode","main_page","login_page","settings_page","list_tt_page","distribution_page","report_page","tests_page","access_main","getUsersSettingsDistribution","subscribe","res","array_page","JSON","parse","access_settings","access_list_tt","access_distribution","access_report","access_tests","stopMonitoring","document","getElementById","items","access","toggleUsersSettingsDistribution","drawer","close","open","duration","horizontalPosition","verticalPosition","panelClass","localStorage","removeItem","location","reload","togglePage","selector","templateUrl","styleUrls","MY_FORMATS","dateInput","display","monthYearLabel","dateA11yLabel","monthYearA11yLabel","AppModule","provide","useValue","useClass","deps","declarations","imports","providers","entryComponents","bootstrap","ListTtComponent","listTT","dialog","dataSource","displayedColumns","get_all","list_tt","event","filterValue","target","value","filter","trim","toLowerCase","row","dialogRef","maxWidth","disableClose","data","afterClosed","result","console","log","getListTT","search","applyFilter","openDialog","LoginComponent","userName","password","getLogin","setItem","error","logIn","MustMatch","controlName","matchingControlName","formGroup","control","controls","matchingControl","errors","mustMatch","setErrors","MainUserHrComponent","mainService","dataTable_user_hr","displayedColumns_user_hr","user_hr_get_main_table","sort","paginator","get_id_tt","id_tt","get_table_personal","MainUserMtComponent","formBuilder","testsService","dataTable_user_mt","name_test","passing_date","user_mt_main_table_get","tests_get_name_tests","nameTestsList","dialogRef_new_testing_for_person","width","maxHeight","format","tests_save_changes_table","id_person","test_score","modal_alert_message","MainComponent","dataTable","array_data_employee","user_name_create_employee","admin_main_table_get","form","group","date","begin","end","$event","inlineRange","replacer","key","header","csv","fieldName","stringify","join","unshift","csvArray","a","createElement","blob","Blob","type","url","window","URL","createObjectURL","today","Date","day","getUTCDate","href","download","click","revokeObjectURL","remove","admin_get_attraction_channel","downloadFile","downloadFileCSV","ModalAdminComponent","office","trade_dot","formValueAdd","formValueEdit","valueDelete","newPerson","first_name","required","last_name","second_name","type_department","department","position","number_phone","pattern","status","employee_description","editPerson","array_row","fio","split","setValue","substr","onChangesPosition","invalid","dateTimeNow","admin_main_add_employee","reset","admin_main_update_employee","admin_main_delete_employee","get","valueChanges","selectType_department","ModalHrComponent","testService","candidate","internships","if_rejection_reasons","attraction_channel","attraction_channel_description","disable","interview_date","internship_date","internship_place","rejection_reason","color","enable","onChangesEditForm","user_hr_main_add_employee","user_hr_main_update_employee","tests_update_persons_data","selectAttraction_channel","ModalListTtComponent","ListTtService","new_outlet","number_td","address","city","date_open","manager","rm","edit_outlet","add_outlet","stopPropagation","selection","ModalMtComponent","boolean_list_person","list_persons","tests_get_list_persons","list_name_tests","tests_get_list_position","list_position","newTest","description_test","max_score","max","position_type","tests_check_persons_for_match","selected","tests_add_testing_for_person","tests_add_new_test","numSelected","length","numRows","isAllSelected","clear","forEach","select","isSelected","ModalUsersSettingsComponent","registerForm","minLength","confirmPassword","validator","registerUser","register","ReportPageComponent","reportPage","type_reports","report_get_table","report_list","report_get_type_reports_list","type_reports_list","ngModalChangeTypeReportList","autosize","http","post","responseType","providedIn","LoginService","getItem","user_form","MainService","new_form","time_create","form_edit_employee","time_last_change","date_now","ReportPageService","SettingsUsersService","backtest_id","user_server","users_array","TelegramSendService","array_city","array_number_td","TOKEN_id","TOKEN_name","TestsService","list_person","SettingsUsersComponent","settingsUsers","panelOpenState","hide","get_users","index","update_user_settings","accordion","TelegramSendComponent","telegramSendService","settingsUserService","dataSource_connected","dataSource_not_connected","dataSource_select","all_cities","booleanTypeOffice","booleanTypeTradeDot","local","displayedColumns_connected","displayedColumns_not_connected","displayedColumns_select","TOKEN_id_test","telegram_send_get_list_type_department","list_type_department","telegram_send_get_list_all_person","list_people_connected","connected","list_people_not_connected","not_connected","paginator_connected","paginator_not_connected","selectPerson","telegram_send_get_list_cities","list_cities","telegram_send_get_department_list","list_department","telegram_send_get_department_list_person","telegram_send_get_position_td","telegram_send_get_all_person_position","telegram_send_get_list_person_by_cities","list_number_tt","ngModelChangeCities","telegram_send_get_person_by_number_tt","element","setToken","setRecipient","id_telegram","setMessage","textMessage","send","select_person","list_select","paginator_select","ngModalChangeTypeDepartmentList","TestsComponent","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn-bd\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn-bd.js\": \"./node_modules/moment/locale/bn-bd.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-in\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-in.js\": \"./node_modules/moment/locale/en-in.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-sg\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./en-sg.js\": \"./node_modules/moment/locale/en-sg.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-mx\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-mx.js\": \"./node_modules/moment/locale/es-mx.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fil\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fil.js\": \"./node_modules/moment/locale/fil.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-deva\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-deva.js\": \"./node_modules/moment/locale/gom-deva.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./oc-lnc\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./oc-lnc.js\": \"./node_modules/moment/locale/oc-lnc.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tk\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tk.js\": \"./node_modules/moment/locale/tk.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-mo\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-mo.js\": \"./node_modules/moment/locale/zh-mo.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","import { FocusMonitor } from '@angular/cdk/a11y';\nimport { Component, ViewChild } from '@angular/core';\nimport { MatSidenav } from '@angular/material/sidenav';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { LoginService } from './service/login.service';\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n\n\n  @ViewChild('drawer') drawer: MatSidenav;\n\n\n\n  title = 'Pizza Day DB';\n  backgroundColorToggle = 'primary'\n  program_v = ''\n  user_id = this.loginService.user_id\n  user_name = this.loginService.user_name\n  user_role = this.loginService.user_role\n\n  mode = 'over'\n\n  array_page: any\n\n  main_page:boolean = false\n  login_page:boolean = this.user_id === null ? true : false\n  settings_page:boolean = false\n  list_tt_page:boolean = false\n  distribution_page:boolean = false\n  report_page:boolean = false\n  tests_page:boolean = false\n\n  access_main = true\n  access_settings:boolean\n  access_list_tt:boolean\n  access_distribution:boolean\n  access_report:boolean\n  access_tests:boolean\n\n  constructor(\n    private loginService: LoginService,\n    private _snackBar: MatSnackBar,\n    private _focusMonitor: FocusMonitor\n  ){\n\n    this.loginService.getUsersSettingsDistribution(this.user_id).subscribe(res => {\n      this.array_page = JSON.parse(res)\n      this.main_page = this.array_page[0].main_page\n      this.list_tt_page = this.array_page[0].list_tt_page\n      this.settings_page = this.array_page[0].settings_page\n      this.distribution_page = this.array_page[0].distribution_page\n      this.report_page = this.array_page[0].report_page\n      this.tests_page = this.array_page[0].tests_page\n      this.access_settings = this.array_page[0].access_settings\n      this.access_list_tt = this.array_page[0].access_list_tt\n      this.access_distribution = this.array_page[0].access_distribution\n      this.access_report = this.array_page[0].access_report\n      this.access_tests = this.array_page[0].access_tests\n    })\n  }\n\n  ngAfterViewInit() {\n    this._focusMonitor.stopMonitoring(document.getElementById('buttonNav_1'));\n}\n\n  togglePage(items,access) {\n    switch(this[access]){\n      case true:\n        this.main_page = false\n        this.settings_page = false\n        this.list_tt_page = false\n        this.distribution_page = false\n        this.report_page = false\n        this.tests_page = false\n        this[items] = true\n        this.loginService.toggleUsersSettingsDistribution(this.user_id,this.main_page,this.settings_page,this.list_tt_page,this.distribution_page,this.report_page, this.tests_page).subscribe(res =>{\n          this.drawer.close();\n        })\n        break;\n       case false:\n        this._snackBar.open('У Вас нету прав!', '', {\n          duration: 2000,\n          horizontalPosition: 'center',\n          verticalPosition: 'top',\n          panelClass: 'alert-style-error'\n        });\n         break;\n    }\n\n\n    // console.log(this[items])\n    // console.log(this.main_page,this.settings_page,this.list_tt_page,this.distribution_page);\n  }\n\n  logout() {\n      localStorage.removeItem('id_user_pd')\n      localStorage.removeItem('user_name_pd')\n      localStorage.removeItem('user_role_pd')\n      location.reload()\n  }\n\n  ngOnInit() {}\n}\n","<mat-toolbar *ngIf=\"user_id !== null\" color=\"primary\">\n    <mat-toolbar-row class=\"box-shadow\">\n        <button mat-icon-button (click)=\"drawer.toggle()\">\n    <mat-icon>menu</mat-icon>\n  </button>\n        <a class=\"navbar-brand text-white\">Pizza Day DB</a>\n        <div class=\"ml-auto row\">\n            <h3 class=\"mr-3\">{{user_name}}</h3>\n            <button mat-raised-button color=\"warn\" *ngIf=\"user_id !== null\" class=\"mr-3\" (click)=\"logout()\">Выйти</button>\n        </div>\n    </mat-toolbar-row>\n</mat-toolbar>\n\n<mat-drawer-container>\n    <mat-drawer #drawer [mode]=\"mode\">\n        <mat-list>\n            <mat-list-item>\n                <mat-icon>dns</mat-icon><button id='buttonNav_1' mat-flat-button (click)=\"togglePage('main_page','access_main')\">Главная</button></mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item *ngIf=\"user_role === 'admin'\">\n                <mat-icon>perm_contact_calendar</mat-icon><button mat-flat-button (click)=\"togglePage('settings_page','access_settings')\">Пользователи</button></mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item *ngIf=\"user_role !== 'user_mt'\">\n              <mat-icon>assignment</mat-icon><button mat-flat-button (click)=\"togglePage('tests_page','access_tests')\">Тесты</button></mat-list-item>\n          <mat-divider></mat-divider>\n            <mat-list-item>\n                <mat-icon>store</mat-icon><button mat-flat-button (click)=\"togglePage('list_tt_page','access_list_tt')\">Заведение</button></mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item>\n                <mat-icon>reply_all</mat-icon><button mat-flat-button (click)=\"togglePage('distribution_page','access_distribution')\">Рассылка в Telegram</button></mat-list-item>\n            <mat-divider></mat-divider>\n            <mat-list-item >\n              <mat-icon>report</mat-icon><button mat-flat-button (click)=\"togglePage('report_page','access_report')\">Отзывы и предложения</button></mat-list-item>\n          <mat-divider></mat-divider>\n        </mat-list>\n    </mat-drawer>\n    <app-main *ngIf=\"main_page && user_role === 'admin'\"></app-main>\n    <app-main-user-mt *ngIf=\"main_page && user_role === 'user_mt'\"></app-main-user-mt>\n    <app-main-user-hr *ngIf=\"main_page && user_role === 'user_hr'\"></app-main-user-hr>\n    <app-settings-users *ngIf=\"settings_page\"></app-settings-users>\n    <app-list-tt *ngIf=\"list_tt_page\"></app-list-tt>\n    <app-telegram-send *ngIf=\"distribution_page\"></app-telegram-send>\n    <app-report-page *ngIf=\"report_page\"></app-report-page>\n    <app-tests *ngIf=\"tests_page\"></app-tests>\n</mat-drawer-container>\n\n<app-login *ngIf=\"login_page\"></app-login>\n\n\n\n<!-- Copyright 2020 Google LLC. All Rights Reserved.\n      Use of this source code is governed by an MIT-style license that\n      can be found in the LICENSE file at http://angular.io/license -->\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatIconModule } from '@angular/material/icon';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { LoginComponent } from './login/login.component';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MainComponent } from './main/main.component';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { SettingsUsersComponent } from './settings-users/settings-users.component';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { TelegramSendComponent } from './telegram-send/telegram-send.component';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MainUserHrComponent } from './main-user-hr/main-user-hr.component';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { DateAdapter, MatNativeDateModule, MAT_DATE_FORMATS, MAT_DATE_LOCALE } from '@angular/material/core';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MainUserMtComponent } from './main-user-mt/main-user-mt.component';\nimport { ListTtComponent } from './list-tt/list-tt.component';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { DragDropModule } from '@angular/cdk/drag-drop';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { ScrollingModule } from '@angular/cdk/scrolling';\nimport { CdkStepperModule } from '@angular/cdk/stepper';\nimport { CdkTableModule } from '@angular/cdk/table';\nimport { CdkTreeModule } from '@angular/cdk/tree';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatBottomSheetModule } from '@angular/material/bottom-sheet';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatStepperModule } from '@angular/material/stepper';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatListModule } from '@angular/material/list';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatSliderModule } from '@angular/material/slider';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatSnackBarModule, MAT_SNACK_BAR_DEFAULT_OPTIONS } from '@angular/material/snack-bar';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTreeModule } from '@angular/material/tree';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { ModalAdminComponent } from './modal-admin/modal-admin.component';\nimport { ModalListTtComponent } from './modal-list-tt/modal-list-tt.component';\nimport { MAT_MOMENT_DATE_ADAPTER_OPTIONS, MAT_MOMENT_DATE_FORMATS, MomentDateAdapter } from '@angular/material-moment-adapter';\nimport { ModalUsersSettingsComponent } from './modal-users-settings/modal-users-settings.component';\nimport { ModalHrComponent } from './modal-hr/modal-hr.component';\nimport { ModalMtComponent } from './modal-mt/modal-mt.component';\nimport { ReportPageComponent } from './report-page/report-page.component';\nimport { TestsComponent } from './tests/tests.component';\nimport { SatDatepickerModule, SatNativeDateModule } from 'saturn-datepicker';\n\nexport const MY_FORMATS = {\n  parse: {\n    dateInput: 'DD.MM.YYYY',\n  },\n  display: {\n    dateInput: 'DD.MM.YYYY',\n    monthYearLabel: 'MMM YYYY',\n    dateA11yLabel: 'LL',\n    monthYearA11yLabel: 'MMMM YYYY',\n  },\n};\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    LoginComponent,\n    MainComponent,\n    SettingsUsersComponent,\n    TelegramSendComponent,\n    MainUserHrComponent,\n    MainUserMtComponent,\n    ListTtComponent,\n    ModalAdminComponent,\n    ModalListTtComponent,\n    ModalUsersSettingsComponent,\n    ModalHrComponent,\n    ModalMtComponent,\n    ReportPageComponent,\n    TestsComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    HttpClientModule,\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatIconModule,\n    NgbModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatSelectModule,\n    MatButtonModule,\n    MatTabsModule,\n    MatTableModule,\n    MatSortModule,\n    MatExpansionModule,\n    MatPaginatorModule,\n    MatCheckboxModule,\n    MatDatepickerModule,\n    MatNativeDateModule,\n    MatAutocompleteModule,\n    MatProgressSpinnerModule,\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatProgressBarModule,\n    MatRadioModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    OverlayModule,\n    PortalModule,\n    ScrollingModule,\n    SatDatepickerModule,\n    SatNativeDateModule\n  ],\n  providers: [\n    MatDatepickerModule,\n    MatNativeDateModule,\n\n    {\n      provide: MAT_DATE_LOCALE,\n      useValue: 'ru-RU'\n    },\n    {\n      provide: MomentDateAdapter,\n      useClass: MomentDateAdapter,\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\n    },\n    { provide: MAT_DATE_FORMATS, useValue: MY_FORMATS },\n  ],\n  entryComponents: [\n    ModalAdminComponent,\n    ModalListTtComponent,\n    ModalUsersSettingsComponent,\n    ModalHrComponent,\n    ModalMtComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ListTtService } from '../service/list-tt.service';\nimport { ModalListTtComponent } from '../modal-list-tt/modal-list-tt.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\ndeclare var $: any;\n\nexport interface DialogData {\n  value: string,\n  row: any\n\n}\n\n@Component({\n  selector: 'app-list-tt',\n  templateUrl: './list-tt.component.html',\n  styleUrls: ['./list-tt.component.scss'],\n})\nexport class ListTtComponent implements OnInit {\n\n\n  list_tt: any;\n  value: any;\n  search:any\n\n  dataSource = new MatTableDataSource();\n\n  displayedColumns: string[] = [\n    'number_td',\n    'address',\n    'city',\n    'date_open',\n    'manager',\n    'rm',\n    'button'\n  ];\n\n  constructor(\n    private listTT: ListTtService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar\n  ) {\n    this.listTT.get_all().subscribe(res => {\n      this.list_tt = JSON.parse(res)\n      this.dataSource = new MatTableDataSource(this.list_tt);\n    })\n  }\n\n  getListTT(){\n    this.listTT.get_all().subscribe(res => {\n      this.list_tt = JSON.parse(res)\n      this.dataSource = new MatTableDataSource(this.list_tt);\n    })\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n \n\n  openDialog(row, value): void {\n    const dialogRef = this.dialog.open(ModalListTtComponent, {\n      maxWidth: '500px',\n      disableClose: true,\n      data: {\n        value: value,\n        row: row\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      switch (result) {\n        case 'Торговая точка добавлена':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.getListTT();\n          this.search = ''\n          break;\n        case 'Данные обновлены':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.getListTT();\n          this.search = ''\n          break;\n      }\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n\n\n}\n","<div class=\"container mb-3 mt-2\">\n    <div class=\"row mt-3\">\n        <div class=\"col-3\">\n            <mat-form-field>\n                <mat-label>Поиск</mat-label>\n                <input matInput [(ngModel)]=\"search\" (keyup)=\"applyFilter($event)\">\n            </mat-form-field>\n        </div>\n        <div class=\"ml-auto\">\n            <button mat-raised-button color=\"primary\" (click)=\"openDialog('','new')\"> Добавить\n      </button>\n        </div>\n    </div>\n    <div class=\"mat-elevation-z8\">\n        <table mat-table [dataSource]=\"dataSource\">\n\n            <ng-container matColumnDef=\"number_td\">\n                <th mat-header-cell *matHeaderCellDef> # </th>\n                <td mat-cell *matCellDef=\"let element\"> TT-{{element.number_td}}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"city\">\n                <th mat-header-cell *matHeaderCellDef> Город </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.city}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"address\">\n                <th mat-header-cell *matHeaderCellDef> Адрес </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.address}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"date_open\">\n                <th mat-header-cell *matHeaderCellDef> Дата открытия </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.date_open}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"manager\">\n                <th mat-header-cell *matHeaderCellDef> Менеджер ТТ </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.manager}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"rm\">\n                <th mat-header-cell *matHeaderCellDef> Региональный менеджер </th>\n                <td mat-cell *matCellDef=\"let element\"> {{element.rm}} </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"button\">\n                <th mat-header-cell *matHeaderCellDef></th>\n                <td mat-cell *matCellDef=\"let element\">\n                    <button mat-icon-button (click)=\"openDialog(element,'edit')\">\n            <mat-icon>more_vert</mat-icon>\n          </button>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { LoginService } from '../service/login.service';\nimport { HttpClient } from '@angular/common/http';\nimport { FormGroup, Validators, FormBuilder } from '@angular/forms';\nimport { MustMatch } from './must-match.validator';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  error: any;\n  userName = \"\";\n  password = \"\";\n  user_name_title: any;\n  user_role:any\n\n  constructor(\n    private loginService: LoginService,\n  ) {\n\n  }\n\n  logIn() {\n    localStorage.removeItem('user_id')\n    this.loginService.getLogin(this.userName, this.password).subscribe(res => {\n      console.log(res)\n      this.loginService.user_id = JSON.parse(res)['user_id']\n      localStorage.setItem('id_user_pd', this.loginService.user_id);\n      this.error = JSON.parse(res)['error']\n      this.loginService.user_name = JSON.parse(res)['user_name'];\n      this.loginService.user_role = JSON.parse(res)['user_role'];\n      localStorage.setItem('user_name_pd', this.loginService.user_name);\n      localStorage.setItem('user_role_pd', this.loginService.user_role);\n      if (this.loginService.user_id !== null) {\n        location.reload();\n      }\n    });\n  }\n\n\n\n  ngOnInit(): void {\n\n  }\n}\n","<div class=\"container box\">\n  <div class=\"align-items-center\">\n    <h1 class=\"text-center mb-5\">Pizza Day</h1>\n    <div class=\"mb-3\" [hidden]=\"(error === undefined) || (error === 'Successful')\" class=\"alert alert-danger\">\n      {{error}}\n    </div>\n    <mat-form-field class=\"col\">\n      <mat-label>User name</mat-label>\n      <input matInput type=\"text\" (keydown.enter)=\"logIn()\" [(ngModel)]=\"userName\"\n        [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n\n    <mat-form-field class=\"col\">\n      <mat-label>Password</mat-label>\n      <input matInput type=\"password\" (keydown.enter)=\"logIn()\" [(ngModel)]=\"password\"\n        [ngModelOptions]=\"{standalone: true}\">\n    </mat-form-field>\n    <button mat-raised-button class=\"btn-block\" (keydown.enter)=\"logIn()\" color=\"primary\"\n      (click)=\"logIn()\">Войти</button>\n  </div>\n</div>\n","import { FormGroup } from '@angular/forms';\n\n// custom validator to check that two fields match\nexport function MustMatch(controlName: string, matchingControlName: string) {\n    return (formGroup: FormGroup) => {\n        const control = formGroup.controls[controlName];\n        const matchingControl = formGroup.controls[matchingControlName];\n\n        if (matchingControl.errors && !matchingControl.errors.mustMatch) {\n            // return if another validator has already found an error on the matchingControl\n            return;\n        }\n\n        // set error on matchingControl if validation fails\n        if (control.value !== matchingControl.value) {\n            matchingControl.setErrors({ mustMatch: true });\n        } else {\n            matchingControl.setErrors(null);\n        }\n    }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { FormGroup, FormBuilder, Validators, FormControl, } from '@angular/forms';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MainService } from '../service/main.service';\nimport { LoginService } from '../service/login.service';\nimport * as moment from 'moment';\nimport { ModalHrComponent } from '../modal-hr/modal-hr.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\ndeclare var $: any;\n\nexport interface DialogData {\n  user_name: string,\n  value: string,\n  row: any\n\n}\n\nexport interface PeriodicElement {\n  name: string;\n  position: number;\n  weight: number;\n  symbol: string;\n}\n\n\n\n@Component({\n  selector: 'app-main-user-hr',\n  templateUrl: './main-user-hr.component.html',\n  styleUrls: ['./main-user-hr.component.scss'],\n})\n\nexport class MainUserHrComponent implements OnInit {\n\n  id_tt: string[];\n  dataTable_user_hr = [];\n\n  displayedColumns_user_hr: string[] = [\n    'color',\n    'fio',\n    'position',\n    'interview_date',\n    'department',\n    'number_phone',\n    'internship_date',\n    'internship_place',\n    'rejection_reason',\n    'status'\n\n  ];\n\n  dataSource = new MatTableDataSource();\n  modal_alert_message: any;\n  search:any\n\n  id_person: any;\n\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private mainService: MainService,\n    public loginService: LoginService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar\n  ) {\n\n    this.mainService.user_hr_get_main_table(this.loginService.user_name).subscribe((res) => {\n      this.dataTable_user_hr = JSON.parse(res);\n      this.dataSource = new MatTableDataSource(this.dataTable_user_hr);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n    })\n  }\n\n  get_table_personal() {\n    this.mainService.user_hr_get_main_table(this.loginService.user_name).subscribe((res) => {\n      this.dataTable_user_hr = JSON.parse(res);\n      this.dataSource = new MatTableDataSource(this.dataTable_user_hr);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  get_id_tt() {\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n    })\n  }\n\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n  // private _filter(value: string): string[] {\n  //   const filterValue = value.toLowerCase();\n  //   return this.id_tt.filter(option => option.toLowerCase().indexOf(filterValue) === 0);\n  // }\n\n  openDialog(row, value): void {\n    const dialogRef = this.dialog.open(ModalHrComponent, {\n      maxWidth: '500px',\n      disableClose: true,\n      data: {\n        user_name: this.loginService.user_name,\n        value: value,\n        row: row\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      switch (result) {\n        case 'Пользователь добавлен':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          break;\n        case 'Данные обновлены':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          this.search = ''\n          break;\n      }\n    })\n  }\n\n  ngOnInit(): void {\n\n  }\n\n\n}\n","<div class=\"container-fluid mt-2 mb-3\">\n  <div class=\"col\">\n    <div class=\"row\">\n      <div class=\"col-2\">\n        <mat-form-field>\n          <mat-label>Поиск</mat-label>\n          <input matInput (keyup)=\"applyFilter($event)\">\n        </mat-form-field>\n      </div>\n      <div class=\"ml-auto\">\n        <button mat-fab color=\"primary\" (click)=\"openDialog('','new')\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n    </div>\n    <div class=\"mat-elevation-z8 mt-1\">\n      <table mat-table [dataSource]=\"dataSource\" matSort>\n\n        <ng-container matColumnDef=\"color\">\n          <th mat-header-cell *matHeaderCellDef></th>\n          <td mat-cell *matCellDef=\"let row\" style=\"padding-right: 15px;\"><button mat-flat-button\n              [ngStyle]=\"{'background-color': row.color, 'color': row.color }\">{{row.color === '' ? '' : row.color.substr(0, 1)}}</button>\n          </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"fio\" class=\"col-2\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Ф.И.О.</th>\n          <td mat-cell *matCellDef=\"let row\" style=\"text-align: left\">{{ row.fio }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"position\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header >Должность</th>\n          <td mat-cell *matCellDef=\"let row\" >{{row.position}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"interview_date\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата собеседования</th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.interview_date }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"department\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>TT (Подразделение)</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.department}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"number_phone\">\n          <th mat-header-cell *matHeaderCellDef>Номер телефона</th>\n          <td mat-cell *matCellDef=\"let row\">{{row.number_phone}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"internship_date\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата стажировки</th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.internship_date }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"internship_place\">\n          <th mat-header-cell *matHeaderCellDef>ТТ (Стажировки)</th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.internship_place }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"rejection_reason\">\n          <th mat-header-cell *matHeaderCellDef>Причина отказа</th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.rejection_reason }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"status\">\n          <th mat-header-cell *matHeaderCellDef mat-sort-header>Статус</th>\n          <td mat-cell *matCellDef=\"let row\">{{ row.status }}</td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns_user_hr;\"></tr>\n        <tr mat-row class=\"example-element-row\" *matRowDef=\"let row; columns: displayedColumns_user_hr\"\n          (dblclick)=\"openDialog(row, 'edit')\"></tr>\n      </table>\n      <mat-paginator [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n    </div>\n  </div>\n</div>\n\n\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MainService } from '../service/main.service';\nimport { LoginService } from '../service/login.service';\nimport * as moment from 'moment';\nimport { ModalMtComponent } from '../modal-mt/modal-mt.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TestsService } from '../service/tests.service';\n\n\nexport interface DialogData {\n  user_name: string,\n  value: string,\n  row: any\n}\n\n@Component({\n  selector: 'app-main-user-mt',\n  templateUrl: './main-user-mt.component.html',\n  styleUrls: ['./main-user-mt.component.scss']\n})\nexport class MainUserMtComponent implements OnInit {\n\n  id_tt: string[];\n  search: any\n  dataTable_user_mt = [];\n  displayedColumns: string[] = [\n    'fio',\n    'name_test',\n    'internship_date',\n    'test_score',\n    'passing_date',\n    'type_department',\n    'department',\n    'position'\n  ];\n  dataSource = new MatTableDataSource();\n\n  nameTestsList:string[];\n\n\n  modal_alert_message: any;\n  name_test = 'all'\n  passing_date = 'all'\n\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private mainService: MainService,\n    private formBuilder: FormBuilder,\n    public loginService: LoginService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n    private testsService: TestsService\n\n  ) {\n    this.mainService.user_mt_main_table_get(this.name_test, this.passing_date).subscribe((res) => {\n      this.dataTable_user_mt = JSON.parse(res);\n      this.dataSource = new MatTableDataSource(this.dataTable_user_mt);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n    });\n\n    this.testsService.tests_get_name_tests().subscribe(res => {\n      this.nameTestsList = JSON.parse(res)\n    })\n  }\n\n\n  ngOnInit(): void {\n\n  }\n\n  openDialog(row, value): void {\n    switch(value){\n      case 'new_testing_for_person':\n        const dialogRef_new_testing_for_person = this.dialog.open(ModalMtComponent, {\n          width: '900px',\n          maxHeight: '600px',\n          disableClose: true,\n          data: {\n            user_name: this.loginService.user_name,\n            value: value,\n            row: row\n          }\n        });\n\n        dialogRef_new_testing_for_person.afterClosed().subscribe(result => {\n          console.log(result);\n          switch (result) {\n            case 'Готово!':\n              this._snackBar.open(result, '', {\n                duration: 2000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-success'\n              });\n              this.get_table_personal();\n              break;\n          }\n        })\n        break;\n\n\n    case 'new_test':\n\n    const dialogRef = this.dialog.open(ModalMtComponent, {\n      maxWidth: '400px',\n      disableClose: true,\n      data: {\n        user_name: this.loginService.user_name,\n        value: value,\n        row: row\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      switch (result) {\n        case 'Новый тест добавлен':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          break;\n      }\n    })\n    break;\n  }\n  }\n\n  get_table_personal() {\n    this.mainService.user_mt_main_table_get(this.name_test, moment.parseZone(this.passing_date).format('YYYY-MM-DD')).subscribe((res) => {\n      console.log(this.name_test);\n      this.dataTable_user_mt = JSON.parse(res);\n      this.dataSource = new MatTableDataSource(this.dataTable_user_mt);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  saveChanges(row){\n    this.testsService.tests_save_changes_table(row.id_person,row.test_score,moment.parseZone(row.passing_date).format('YYYY-MM-DD'),row.name_test).subscribe(res => {\n      this.modal_alert_message = JSON.parse(res)\n    })\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n}\n","<div class=\"container-fluid mt-2 mb-3\">\n  <div class=\"row\">\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Поиск</mat-label>\n      <input matInput [(ngModel)]=\"search\" (keyup)=\"applyFilter($event)\">\n    </mat-form-field>\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Выберете тест</mat-label>\n      <mat-select [(ngModel)]=\"name_test\" (ngModelChange)=\"get_table_personal()\">\n        <mat-option value=\"all\">Все</mat-option>\n        <mat-option *ngFor=\"let food of nameTestsList\" [value]=\"food\">\n          {{food}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Выберете дату</mat-label>\n      <input matInput [(ngModel)]=\"passing_date\" [matDatepicker]=\"picker_passing_date\" (ngModelChange)=\"get_table_personal()\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker_passing_date\"></mat-datepicker-toggle>\n      <mat-datepicker #picker_passing_date></mat-datepicker>\n    </mat-form-field>\n\n\n    <div class=\"ml-auto\">\n      <button mat-raised-button color=\"primary\" class=\"mr-2\" (click)=\"openDialog('','new_testing_for_person')\">Добавить сотрудников</button>\n      <button mat-raised-button color=\"primary\" (click)=\"openDialog('','new_test')\">Добавить тест</button>\n    </div>\n  </div>\n  <div class=\"mat-elevation-z8 mt-1\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <ng-container matColumnDef=\"fio\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"padding-left: 50px;\">Ф.И.О.</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.fio }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"type_department\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Тип подразделения</th>\n        <td mat-cell *matCellDef=\"let row\">\n          {{row.type_department}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>TT,подразделение</th>\n        <td mat-cell *matCellDef=\"let row\">\n          {{row.department}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Должность</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.position}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"name_test\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Название теста</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.name_test}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"test_score\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Оценка</th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-form-field style=\"width: 4rem;\">\n            <input matInput type=\"number\" max=\"200\" [(ngModel)]=\"row.test_score\" (ngModelChange)=\"saveChanges(row)\">\n          </mat-form-field>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"internship_date\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата стажировки</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.internship_date}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"passing_date\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата тестирования</th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-form-field style=\"width: 11rem;\">\n            <input matInput [(ngModel)]=\"row.passing_date\" [matDatepicker]=\"picker_passing_date\" readonly (ngModelChange)=\"saveChanges(row)\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker_passing_date\"></mat-datepicker-toggle>\n            <mat-datepicker #picker_passing_date></mat-datepicker>\n          </mat-form-field>\n        </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n      <tr mat-row class=\"example-element-row col\" *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MainService } from '../service/main.service';\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { LoginService } from '../service/login.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { ModalAdminComponent } from '../modal-admin/modal-admin.component';\nimport * as moment from 'moment';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { saveAs } from 'file-saver';\n\n\nmoment.locale('ru')\ndeclare var $: any;\n\nexport interface DialogData {\n  user_name: string,\n  value: string,\n  row: any\n\n}\n\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.scss']\n})\n\nexport class MainComponent implements OnInit {\n\n  form: FormGroup;\n\n  inlineRange;\n\n  dataTable = [];\n  displayedColumns: string[] = [\n    'id_person',\n    'fio',\n    'department',\n    'position',\n    'number_phone',\n    'interview_date',\n    'status',\n    'employee_description',\n    'delete'\n  ];\n  dataSource = new MatTableDataSource(this.dataTable);\n\n  value: any;\n  search: any\n  id_tt: string[];\n\n  row_first_name: any\n  row_last_name: any\n  row_personal_id: any\n\n\n  array_data_employee = null\n  modal_alert_message: any\n  user_name_create_employee = this.loginService.user_name\n\n  id_person: any\n\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private mainService: MainService,\n    private formBuilder: FormBuilder,\n    public loginService: LoginService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar\n  ) {\n    this.mainService.admin_main_table_get().subscribe(res => {\n      this.dataTable = JSON.parse(res)\n      this.dataSource = new MatTableDataSource(this.dataTable);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    })\n\n    this.form = this.formBuilder.group({\n      date: new FormControl ({begin:'', end:''}),\n    });\n\n  }\n\n  get_id_tt() {\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n      console.log(this.id_tt);\n    })\n  }\n\n  get_table_personal() {\n    this.mainService.admin_main_table_get().subscribe(res => {\n      this.dataTable = JSON.parse(res)\n      this.dataSource = new MatTableDataSource(this.dataTable);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    })\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  inlineRangeChange($event) {\n    this.inlineRange = $event;\n  }\n\n  downloadFile(data: any) {\n    const replacer = (key, value) => (value === null ? '' : value); // specify how you want to handle null values here\n    const header = Object.keys(data[0]);\n    const csv = data.map((row) =>\n      header\n        .map((fieldName) => JSON.stringify(row[fieldName], replacer))\n        .join(',')\n    );\n    csv.unshift(header.join(','));\n    const csvArray = csv.join('\\r\\n');\n\n    const a = document.createElement('a');\n    const blob = new Blob([csvArray], { type: 'text/csv' });\n    const url = window.URL.createObjectURL(blob);\n\n    let today = new Date();\n    let day = today.getUTCDate();\n    a.href = url;\n    a.download = day + '.csv';\n    a.click();\n    window.URL.revokeObjectURL(url);\n    a.remove();\n  }\n\n  downloadFileCSV(){\n    switch(this.form.value.date.end){\n      case null:\n        this._snackBar.open('Укажите дату', '', {\n          duration: 2000,\n          horizontalPosition: 'center',\n          verticalPosition: 'top',\n          panelClass: 'alert-style-error'\n        });\n        break;\n        default:\n        this.mainService.admin_get_attraction_channel(this.form.value).subscribe(res => {\n          console.log(res);\n          this.downloadFile(JSON.parse(res))\n          this._snackBar.open('Файл загружен', '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n        })\n      break;\n\n    }\n\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  openDialog(row, value): void {\n    const dialogRef = this.dialog.open(ModalAdminComponent, {\n      maxWidth: '500px',\n      disableClose: true,\n      data: {\n        user_name: this.loginService.user_name,\n        value: value,\n        row: row\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      switch (result) {\n        case 'Пользователь добавлен':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          break;\n        case 'Данные обновлены':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          this.search = ''\n          break;\n        case 'Пользователь удален':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          this.search = ''\n          break;\n      }\n    })\n  }\n}\n","<div class=\"container-fluid row mt-2 mb-3\">\n  <div class=\"col\">\n    <div class=\"row\">\n      <div class=\"col-2\">\n        <mat-form-field>\n          <mat-label>Поиск</mat-label>\n          <input matInput [(ngModel)]=\"search\" (keyup)=\"applyFilter($event)\">\n        </mat-form-field>\n      </div>\n\n      <div [formGroup]=\"form\" class=\"ml-auto\">\n        <mat-form-field>\n          <input matInput [satDatepicker]=\"picker\" formControlName=\"date\">\n          <sat-datepicker #picker [rangeMode]=\"true\"></sat-datepicker>\n          <sat-datepicker-toggle matSuffix [for]=\"picker\"></sat-datepicker-toggle>\n        </mat-form-field>\n      </div>\n      <div class=\"ml-1\">\n        <button mat-mini-fab color=\"primary\" (click)=\"downloadFileCSV()\"><span class=\"material-icons\">\n          save_alt\n          </span></button>\n      </div>\n      <div class=\"ml-3\">\n        <button mat-fab color=\"primary\" (click)=\"openDialog(this.id_person ,'new')\">\n          <mat-icon>add</mat-icon>\n        </button>\n      </div>\n    </div>\n  <div class=\"mat-elevation-z8 mt-1 mb-2\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <ng-container matColumnDef=\"id_person\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let row\"> {{row.id_person}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"fio\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Ф.И.О.</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.fio }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Подразделение</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.department}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Позиция</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.position }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"number_phone\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Номер телефона</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.number_phone }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"interview_date\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата обучения</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.interview_date }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Статус</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.status }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"employee_description\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Комментарий к сотруднику</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.employee_description }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"delete\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header></th>\n        <td mat-cell *matCellDef=\"let row\"><button mat-icon-button (click)=\"openDialog(row,'delete')\">\n            <mat-icon>delete</mat-icon>\n          </button></td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n      <tr mat-row class=\"example-element-row\" *matRowDef=\"let row; columns: displayedColumns\"\n        (dblclick)=\"openDialog(row,'edit')\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[20,30,50]\" showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n</div>\n\n<!-- Модал alert edit success -->\n<!-- <div #modal_alert_success id=\"modal_alert_success\" class=\"modal fade\">\n  <div class=\"modal-dialog\">\n    <div class=\"alert alert-success text-center\" role=\"alert\">{{modal_alert_message}}</div>\n  </div>\n</div> -->\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { DialogData } from '../main/main.component';\nimport * as moment from 'moment';\nimport { MainService } from '../service/main.service';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  templateUrl: './modal-admin.component.html',\n  styleUrls: ['./modal-admin.component.scss']\n})\nexport class ModalAdminComponent implements OnInit {\n\n  newPerson: FormGroup;\n  editPerson: FormGroup;\n\n  user_name = this.data.user_name\n  modal_alert_message: any\n  office = true;\n  trade_dot = false\n  formValueAdd = this.data.value === 'new' ? true : false;\n  formValueEdit = this.data.value === 'edit' ? true : false;\n  valueDelete = this.data.value === 'delete' ? true : false;\n  id_tt: any\n\n  first_name:any\n  last_name:any\n\n\n\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalAdminComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public formBuilder: FormBuilder,\n    private mainService: MainService,\n    private _snackBar: MatSnackBar\n  ) {\n\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n      console.log(this.id_tt);\n    })\n  }\n\n\n\n  get fn() {\n    switch (this.data.value) {\n      case 'new':\n        return this.newPerson.controls;\n      case 'edit':\n        return this.editPerson.controls;\n    }\n  }\n\n\n\n  ngOnInit(): void {\n    switch (this.data.value) {\n      case 'new':\n        this.newPerson = this.formBuilder.group({\n          first_name: new FormControl('', Validators.required),\n          last_name: new FormControl('', Validators.required),\n          second_name: new FormControl(''),\n          type_department: new FormControl('', Validators.required),\n          department: new FormControl('', Validators.required),\n          position: new FormControl('', Validators.required),\n          number_phone: new FormControl('', [Validators.required, Validators.pattern(\"[0-9]{10}\")]),\n          status: new FormControl('', Validators.required),\n          employee_description: [''],\n        });\n        break;\n      case 'edit':\n        this.editPerson = this.formBuilder.group({\n          first_name: new FormControl('', Validators.required),\n          last_name: new FormControl('', Validators.required),\n          second_name: new FormControl(''),\n          department: new FormControl('', Validators.required),\n          position: new FormControl('', Validators.required),\n          type_department: new FormControl('', Validators.required),\n          number_phone: new FormControl('', [Validators.required, Validators.pattern(\"[0-9]{10}\")]),\n          status: new FormControl('', Validators.required),\n          employee_description: new FormControl(''),\n        });\n        let array_row = this.data.row.fio.split(' ')\n        this.editPerson.controls['first_name'].setValue(array_row[1]);\n        this.editPerson.controls['last_name'].setValue(array_row[0]);\n        this.editPerson.controls['second_name'].setValue(array_row[2]);\n        this.editPerson.controls['type_department'].setValue(this.data.row.type_department);\n        this.editPerson.controls['department'].setValue(this.data.row.department);\n        this.editPerson.controls['position'].setValue(this.data.row.position);\n        this.editPerson.controls['number_phone'].setValue(this.data.row.number_phone.substr(3));\n        this.editPerson.controls['status'].setValue(this.data.row.status);\n        this.editPerson.controls['employee_description'].setValue(this.data.row.employee_description);\n\n        this.editPerson.value.type_department === 'Офис' ? this.office = true : false\n        this.editPerson.value.type_department === 'Торговая точка' ? this.trade_dot = true : false\n        break;\n        case 'delete':\n          let fio = this.data.row.fio.split(' ')\n          this.first_name = fio[1]\n          this.last_name = fio[0]\n        break;\n    }\n\n    this.onChangesPosition()\n  }\n\n  add_employee() {\n    switch (this.newPerson.invalid) {\n      case true:\n        console.log(this.newPerson.value);\n        break;\n      default:\n        let dateTimeNow = moment.parseZone(new Date()).format('YYYY-MM-DD HH:mm:ss')\n        this.mainService.admin_main_add_employee(this.newPerson.value, dateTimeNow, this.user_name).subscribe((res) => {\n          this.modal_alert_message = JSON.parse(res);\n          switch (this.modal_alert_message) {\n            case 'Пользователь добавлен':\n              this.newPerson.reset()\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        });\n    }\n  }\n\n\n  update_employee() {\n    switch (this.editPerson.invalid) {\n      case true:\n        console.log(this.editPerson.value);\n        break;\n      default:\n        let dateTimeNow = moment.parseZone(new Date()).format('YYYY-MM-DD HH:mm:ss')\n        this.mainService.admin_main_update_employee(this.user_name, this.editPerson.value, dateTimeNow).subscribe((res) => {\n          this.modal_alert_message = JSON.parse(res);\n          console.log(this.modal_alert_message)\n          switch (this.modal_alert_message) {\n            case 'Данные обновлены':\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        })\n    }\n  }\n\n  delete_employee() {\n    this.mainService.admin_main_delete_employee(this.data.row.id_person).subscribe(res => {\n      this.modal_alert_message = JSON.parse(res);\n      console.log(this.modal_alert_message);\n      switch (this.modal_alert_message) {\n        case 'Пользователь удален':\n          this.dialogRef.close(this.modal_alert_message)\n          break;\n        default:\n          this._snackBar.open(this.modal_alert_message, '', {\n            duration: 7000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-error'\n          });\n          break;\n      }\n    })\n  }\n\n\n  onChangesPosition() {\n    switch (this.data.value) {\n      case 'new':\n        this.newPerson.get('type_department').valueChanges.subscribe((selectType_department) => {\n          if (selectType_department === 'Офис') {\n            this.office = true;\n            this.trade_dot = false\n          } else {\n            this.office = false;\n            this.trade_dot = true\n          }\n        });\n        break;\n      case 'edit':\n        this.editPerson.get('type_department').valueChanges.subscribe((selectType_department) => {\n          if (selectType_department === 'Офис') {\n            this.office = true;\n            this.trade_dot = false\n          } else {\n            this.office = false;\n            this.trade_dot = true\n          }\n        });\n        break;\n    }\n  }\n\n\n\n}\n","<h1 *ngIf=\"formValueAdd\" mat-dialog-title>Новый сотрудник</h1>\n<h1 *ngIf=\"formValueEdit\" mat-dialog-title>Данные сотрудника</h1>\n<h2 *ngIf=\"valueDelete\">Вы хотите удалить сотрудник?</h2>\n<div mat-dialog-content>\n  <div *ngIf=\"valueDelete\">\n    <h3>{{last_name}} {{first_name}}</h3>\n  </div>\n  <form *ngIf=\"formValueAdd\" [formGroup]=\"newPerson\">\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Фамилия</mat-label>\n      <input matInput formControlName=\"last_name\">\n      <mat-error *ngIf=\"!!fn.last_name.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n    <div class=\"container row\">\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Имя</mat-label>\n        <input matInput formControlName=\"first_name\">\n        <mat-error *ngIf=\"!!fn.first_name.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Отчество</mat-label>\n        <input matInput formControlName=\"second_name\">\n        <mat-error *ngIf=\"!!fn.second_name.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n    </div>\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <input type=\"tel\" matInput formControlName=\"number_phone\" placeholder=\"0988788181\">\n      <mat-icon matSuffix>stay_current_portrait</mat-icon>\n      <mat-error *ngIf=\"!!fn.number_phone.errors?.required\">Поле не заполнено</mat-error>\n      <mat-error *ngIf=\"!!fn.number_phone.errors?.pattern\">Неверный формат номера телефона</mat-error>\n    </mat-form-field>\n\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Тип подразделения</mat-label>\n      <mat-select formControlName=\"type_department\">\n        <mat-option value=\"Торговая точка\">Торговая точка</mat-option>\n        <mat-option value=\"Офис\">Офис</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.type_department.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n\n    <div class=\"container row\" *ngIf=\"office\">\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Должность</mat-label>\n        <input matInput formControlName=\"position\">\n        <mat-error *ngIf=\"!!fn.position.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Подразделение</mat-label>\n        <input matInput formControlName=\"department\">\n        <mat-error *ngIf=\"!!fn.department.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"container row\" *ngIf=\"trade_dot\">\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Должность</mat-label>\n        <mat-select matInput formControlName=\"position\">\n          <mat-option value=\"Продавец\">Продавец</mat-option>\n          <mat-option value=\"Повар\">Повар</mat-option>\n          <mat-option value=\"Продавец(0.5)\">Продавец 0.5</mat-option>\n          <mat-option value=\"Повар(0.5)\">Повар 0.5</mat-option>\n          <mat-option value=\"Продавец(У)\">Продавец(У)</mat-option>\n          <mat-option value=\"Повар(У)\">Повар(У)</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.position.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Место работы (ТТ)</mat-label>\n        <mat-select formControlName=\"department\">\n          <mat-option [value]=\"option.substring(0, 2)\" *ngFor=\"let option of id_tt\">\n            {{option}}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.department.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n    </div>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Статус</mat-label>\n      <mat-select matInput formControlName=\"status\">\n        <mat-option value=\"Кандидат\">Кандидат</mat-option>\n        <mat-option value=\"Резерв\">Резерв</mat-option>\n        <mat-option value=\"Отказали\">Отказали</mat-option>\n        <mat-option value=\"Стажёр\">Стажёр</mat-option>\n        <mat-option value=\"Работает\">Работает</mat-option>\n        <mat-option value=\"Уволенный\">Уволенный</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.status.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Комментарий</mat-label>\n      <input matInput formControlName=\"employee_description\">\n      <mat-error *ngIf=\"!!fn.employee_description.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n  </form>\n\n  <form *ngIf=\"formValueEdit\" [formGroup]=\"editPerson\">\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Фамилия</mat-label>\n      <input matInput formControlName=\"last_name\">\n      <mat-error *ngIf=\"!!fn.last_name.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n    <div class=\"container row\">\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Имя</mat-label>\n        <input matInput formControlName=\"first_name\">\n        <mat-error *ngIf=\"!!fn.first_name.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Отчество</mat-label>\n        <input matInput formControlName=\"second_name\">\n        <mat-error *ngIf=\"!!fn.second_name.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n    </div>\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <input type=\"tel\" matInput formControlName=\"number_phone\" placeholder=\"0988788181\">\n      <mat-icon matSuffix>stay_current_portrait</mat-icon>\n      <mat-error *ngIf=\"!!fn.number_phone.errors?.required\">Поле не заполнено</mat-error>\n      <mat-error *ngIf=\"!!fn.number_phone.errors?.pattern\">Неверный формат номера телефона</mat-error>\n    </mat-form-field>\n\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Тип подразделения</mat-label>\n      <mat-select formControlName=\"type_department\">\n        <mat-option value=\"Торговая точка\">Торговая точка</mat-option>\n        <mat-option value=\"Офис\">Офис</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.type_department.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n\n    <div class=\"container row\">\n      <mat-form-field class=\"col\" *ngIf=\"office\" appearance=\"standard\">\n        <mat-label>Должность</mat-label>\n        <input matInput formControlName=\"position\">\n        <mat-error *ngIf=\"!!fn.position.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" *ngIf=\"office\" appearance=\"standard\">\n        <mat-label>Подразделение</mat-label>\n        <input matInput formControlName=\"department\">\n        <mat-error *ngIf=\"!!fn.department.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"container row\">\n      <mat-form-field class=\"col\" *ngIf=\"trade_dot\" appearance=\"standard\">\n        <mat-label>Должность</mat-label>\n        <mat-select matInput formControlName=\"position\">\n          <mat-option value=\"Продавец\">Продавец</mat-option>\n          <mat-option value=\"Повар\">Повар</mat-option>\n          <mat-option value=\"Продавец(0.5)\">Продавец 0.5</mat-option>\n          <mat-option value=\"Повар(0.5)\">Повар 0.5</mat-option>\n          <mat-option value=\"Продавец(У)\">Продавец(У)</mat-option>\n          <mat-option value=\"Повар(У)\">Повар(У)</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.position.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" *ngIf=\"trade_dot\" appearance=\"standard\">\n        <mat-label>Место работы (ТТ)</mat-label>\n        <mat-select formControlName=\"department\">\n          <mat-option [value]=\"option.substring(0, 2)\" *ngFor=\"let option of id_tt\">\n            {{option}}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.department.errors?.required\">Поле не заполнено</mat-error>\n      </mat-form-field>\n\n    </div>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Статус</mat-label>\n      <mat-select matInput formControlName=\"status\">\n        <mat-option value=\"Кандидат\">Кандидат</mat-option>\n        <mat-option value=\"Резерв\">Резерв</mat-option>\n        <mat-option value=\"Отказали\">Отказали</mat-option>\n        <mat-option value=\"Стажёр\">Стажёр</mat-option>\n        <mat-option value=\"Работает\">Работает</mat-option>\n        <mat-option value=\"Уволенный\">Уволенный</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.status.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Комментарий</mat-label>\n      <input matInput formControlName=\"employee_description\">\n      <mat-error *ngIf=\"!!fn.employee_description.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n\n  </form>\n</div>\n<div mat-dialog-actions *ngIf=\"formValueAdd\">\n  <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"add_employee()\">Отправить</button>\n  <button mat-raised-button color=\"primary\" mat-dialog-close style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n<div mat-dialog-actions *ngIf=\"formValueEdit\">\n  <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"update_employee()\">Обновить</button>\n  <button mat-raised-button color=\"primary\" mat-dialog-close style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n<div mat-dialog-actions *ngIf=\"valueDelete\">\n  <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"delete_employee()\">Да</button>\n  <button mat-raised-button color=\"primary\" mat-dialog-close style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DialogData } from '../main/main.component';\nimport { MainService } from '../service/main.service';\nimport * as moment from 'moment';\nimport { TestsService } from '../service/tests.service';\n\n@Component({\n  templateUrl: './modal-hr.component.html',\n  styleUrls: ['./modal-hr.component.scss']\n})\nexport class ModalHrComponent implements OnInit {\n\n  newPerson: FormGroup;\n  editPerson: FormGroup;\n\n  user_name = this.data.user_name\n  modal_alert_message: any\n  office = false;\n  trade_dot = false\n  formValueAdd = this.data.value === 'new' ? true : false;\n  formValueEdit = this.data.value === 'edit' ? true : false;\n  id_tt: any\n  candidate = false\n  internships = false\n  if_rejection_reasons = false\n\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalHrComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public formBuilder: FormBuilder,\n    private mainService: MainService,\n    private _snackBar: MatSnackBar,\n    private testService:TestsService\n  ) {\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n    })\n  }\n  get fn() {\n    switch (this.data.value) {\n      case 'new':\n        return this.newPerson.controls;\n      case 'edit':\n        return this.editPerson.controls;\n    }\n  }\n\n  ngOnInit(): void {\n    switch (this.data.value) {\n      case 'new':\n        this.newPerson = this.formBuilder.group({\n          first_name: new FormControl('', Validators.required),\n          last_name: new FormControl('', Validators.required),\n          second_name: new FormControl(''),\n          position: new FormControl('', Validators.required),\n          department: new FormControl('', Validators.required),\n          number_phone: new FormControl('', [Validators.required, Validators.pattern('[0-9]{10}')]),\n          attraction_channel: new FormControl(''),\n          type_department: new FormControl('', Validators.required),\n          attraction_channel_description: new FormControl('').disable(),\n          interview_date: new FormControl(),\n          internship_date: new FormControl(),\n          internship_place: new FormControl(''),\n          rejection_reason: new FormControl(''),\n          status: new FormControl('', Validators.required),\n          employee_description: new FormControl(''),\n          color: new FormControl('')\n        });\n        break;\n      case 'edit':\n        this.editPerson = this.formBuilder.group({\n          first_name: new FormControl('', Validators.required),\n          last_name: new FormControl('', Validators.required),\n          second_name: new FormControl(''),\n          position: new FormControl('', Validators.required),\n          department: new FormControl('', Validators.required),\n          number_phone: new FormControl('', [Validators.required, Validators.pattern('[0-9]{10}')]),\n          attraction_channel: new FormControl(''),\n          type_department: new FormControl('', Validators.required),\n          attraction_channel_description: new FormControl(''),\n          interview_date: new FormControl(''),\n          internship_date: new FormControl(''),\n          internship_place: new FormControl(''),\n          rejection_reason: new FormControl(''),\n          status: new FormControl('', Validators.required),\n          employee_description: new FormControl(''),\n          color: new FormControl('')\n        });\n        \n        let array_row = this.data.row.fio.split(' ')\n        this.editPerson.controls['first_name'].setValue(array_row[1]);\n        this.editPerson.controls['last_name'].setValue(array_row[0]);\n        this.editPerson.controls['second_name'].setValue(array_row[2]);\n        this.editPerson.controls['position'].setValue(this.data.row.position);\n        this.editPerson.controls['department'].setValue(this.data.row.department);\n        this.editPerson.controls['number_phone'].setValue(this.data.row.number_phone.substr(3));\n        this.editPerson.controls['attraction_channel'].setValue(this.data.row.attraction_channel);\n        this.editPerson.controls['type_department'].setValue(this.data.row.type_department);\n        this.editPerson.controls['attraction_channel_description'].setValue(this.data.row.attraction_channel_description);\n        this.editPerson.controls['interview_date'].setValue(this.data.row.interview_date === '' ? null : moment.parseZone(this.data.row.interview_date,\"DD.MM.YYYY\").format('YYYY-MM-DD'));\n        this.editPerson.controls['internship_date'].setValue(this.data.row.internship_date === '' ? null : moment.parseZone(this.data.row.internship_date, \"DD.MM.YYYY\").format('YYYY-MM-DD'));\n        this.editPerson.controls['internship_place'].setValue(this.data.row.internship_place);\n        this.editPerson.controls['rejection_reason'].setValue(this.data.row.rejection_reason);\n        this.editPerson.controls['status'].setValue(this.data.row.status);\n        this.editPerson.controls['employee_description'].setValue(this.data.row.employee_description);\n        this.editPerson.controls['color'].setValue(this.data.row.color);\n        this.editPerson.value.status === \"Кандидат\" ? this.candidate = true : false\n        this.editPerson.value.status === \"Стажёр\" ? this.internships = true : false\n        this.editPerson.value.status === \"Отказали\" ? this.if_rejection_reasons = true : false\n        this.editPerson.value.type_department === 'Офис' ? this.office = true : false\n        this.editPerson.value.type_department === 'Торговая точка' ? this.trade_dot = true : false\n\n\n        switch (this.editPerson.value.status) {\n          case `Кандидат`:\n            this.editPerson.value.attraction_channel === 'Рекомендация от третьих лиц' ? this.editPerson.get('attraction_channel_description').enable() : this.editPerson.get('attraction_channel_description').disable();\n            break;\n        }\n        break;\n    }\n    this.onChangesEditForm();\n    this.onChangesPosition();\n  }\n\n  addEmployee() {\n    switch (this.newPerson.invalid) {\n      case true:\n        console.log(this.newPerson);\n        break;\n      default:\n        let dateTimeNow = moment.parseZone(new Date()).format('YYYY-MM-DD HH:mm:ss')\n        this.newPerson.value.interview_date === null ? null : this.newPerson.controls['interview_date'].setValue(moment.parseZone(this.newPerson.value.interview_date).format('YYYY-MM-DD'));\n        this.newPerson.value.internship_date === null ? null : this.newPerson.controls['internship_date'].setValue(moment.parseZone(this.newPerson.value.internship_date).format('YYYY-MM-DD'));\n        this.mainService.user_hr_main_add_employee(this.newPerson.value, dateTimeNow, this.user_name).subscribe((res) => {\n          this.modal_alert_message = JSON.parse(res);\n          console.log(this.modal_alert_message);\n          switch (this.modal_alert_message) {\n            case 'Пользователь добавлен':\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        })\n    }\n  }\n\n  updateEmployee() {\n    switch (this.editPerson.invalid) {\n      case true:\n        console.log(this.editPerson)\n        break;\n      default:\n        let dateTimeNow = moment.parseZone(new Date()).format('YYYY-MM-DD HH:mm:ss')\n        this.editPerson.value.interview_date === null ? null : this.editPerson.controls['interview_date'].setValue(moment.parseZone(this.editPerson.value.interview_date).format('YYYY-MM-DD'));\n        this.editPerson.value.internship_date === null ? null : this.editPerson.controls['internship_date'].setValue(moment.parseZone(this.editPerson.value.internship_date).format('YYYY-MM-DD'));\n        this.mainService.user_hr_main_update_employee(this.user_name, this.editPerson.value, dateTimeNow, this.data.row.id_person).subscribe((res) => {\n          this.modal_alert_message = JSON.parse(res);\n          console.log(this.modal_alert_message = JSON.parse(res))\n          switch (this.modal_alert_message) {\n            case 'Данные обновлены':\n              this.testService.tests_update_persons_data(this.editPerson.value,this.data.row.id_person).subscribe(res => {\n              this.dialogRef.close(this.modal_alert_message)\n            })\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        });\n        break;\n    }\n  }\n\n\n\n  onChangesPosition() {\n    switch (this.data.value) {\n      case 'new':\n        this.newPerson.get('type_department').valueChanges.subscribe((selectType_department) => {\n          if (selectType_department === 'Офис') {\n            this.office = true;\n            this.trade_dot = false\n          } else {\n            this.office = false;\n            this.trade_dot = true\n          }\n        });\n        break;\n      case 'edit':\n        this.editPerson.get('type_department').valueChanges.subscribe((selectType_department) => {\n          if (selectType_department === 'Офис') {\n            this.office = true;\n            this.trade_dot = false\n          } else {\n            this.office = false;\n            this.trade_dot = true\n          }\n        });\n        break;\n    }\n  }\n\n\n  onChangesEditForm() {\n    switch (this.data.value) {\n      case 'edit':\n        this.editPerson.get('attraction_channel').valueChanges.subscribe((selectAttraction_channel) => {\n          if (selectAttraction_channel === 'Рекомендация от третьих лиц') {\n            this.editPerson.get('attraction_channel_description').enable();\n          } else {\n            this.editPerson.get('attraction_channel_description').reset();\n            this.editPerson.get('attraction_channel_description').disable();\n          }\n        });\n        break;\n      case 'new':\n        this.newPerson.get('attraction_channel').valueChanges.subscribe((selectAttraction_channel) => {\n          if (selectAttraction_channel === 'Рекомендация от третьих лиц') {\n            this.newPerson.get('attraction_channel_description').enable();\n          } else {\n            this.newPerson.get('attraction_channel_description').reset();\n            this.newPerson.get('attraction_channel_description').disable();\n          }\n        });\n        break;\n    }\n  }\n\n}\n","<h1 *ngIf=\"formValueAdd\" mat-dialog-title>Новый сотрудник</h1>\n<h1 *ngIf=\"formValueEdit\" mat-dialog-title>Данные сотрудника</h1>\n<div mat-dialog-content>\n\n  <!-- New person -->\n  <div *ngIf=\"formValueAdd\" [formGroup]=\"newPerson\">\n    <mat-card class=\"mt-2\">\n      <div class=\"row\">\n        <mat-form-field>\n          <mat-label>Фамилия</mat-label>\n          <input matInput formControlName=\"last_name\">\n          <mat-error *ngIf=\"!!fn.last_name.errors?.required\">Введите фамилию</mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>Имя</mat-label>\n          <input matInput formControlName=\"first_name\">\n          <mat-error *ngIf=\"!!fn.first_name.errors?.required\">Введите имя</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <mat-form-field class=\"col-8\">\n          <mat-label>Отчество</mat-label>\n          <input matInput formControlName=\"second_name\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"row\">\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Статус</mat-label>\n          <mat-select matInput formControlName=\"status\">\n            <mat-option value=\"Кандидат\">Кандидат</mat-option>\n            <mat-option value=\"Резерв\">Резерв</mat-option>\n            <mat-option value=\"Отказали\">Отказали</mat-option>\n            <mat-option value=\"Стажёр\">Стажёр</mat-option>\n            <mat-option value=\"Работает\">Работает</mat-option>\n            <mat-option value=\"Уволенный\">Уволенный</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"!!fn.status.errors?.required\">Выберет статус</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Маркер</mat-label>\n          <mat-select formControlName=\"color\">\n            <mat-option value=\"#f44336\">Красный</mat-option>\n            <mat-option value=\"#ffff00\">Желтый</mat-option>\n            <mat-option value=\"#76ff03\">Зелёный</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <mat-form-field class=\"col-8\">\n          <mat-label>Номер телефона</mat-label>\n          <input type=\"tel\" matInput formControlName=\"number_phone\" placeholder=\"0988788181\">\n          <mat-icon matSuffix>phone</mat-icon>\n          <mat-error *ngIf=\"!!fn.number_phone.errors?.required\">Введите телефон</mat-error>\n          <mat-error *ngIf=\"!!fn.number_phone.errors?.pattern\">Неверный формат номера телефона</mat-error>\n        </mat-form-field>\n      </div>\n    </mat-card>\n\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Тип подразделения</mat-label>\n      <mat-select formControlName=\"type_department\">\n        <mat-option value=\"Торговая точка\">Торговая точка</mat-option>\n        <mat-option value=\"Офис\">Офис</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.type_department.errors?.required\">Выберете подразделения</mat-error>\n    </mat-form-field>\n\n\n    <mat-form-field class=\"col\" *ngIf=\"office\">\n      <mat-label>Должность</mat-label>\n      <input matInput formControlName=\"position\">\n      <mat-error *ngIf=\"!!fn.position.errors?.required\">Выберете должность</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" *ngIf=\"office\">\n      <mat-label>Подразделение</mat-label>\n      <input matInput formControlName=\"department\">\n      <mat-error *ngIf=\"!!fn.department.errors?.required\">Выберете подразделение</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" *ngIf=\"trade_dot\">\n      <mat-label>Должность</mat-label>\n      <mat-select matInput formControlName=\"position\">\n        <mat-option value=\"Продавец\">Продавец</mat-option>\n        <mat-option value=\"Повар\">Повар</mat-option>\n        <mat-option value=\"Продавец(0.5)\">Продавец 0.5</mat-option>\n        <mat-option value=\"Повар(0.5)\">Повар 0.5</mat-option>\n        <mat-option value=\"Продавец(У)\">Продавец(У)</mat-option>\n        <mat-option value=\"Повар(У)\">Повар(У)</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.position.errors?.required\">Выберете должность</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" *ngIf=\"trade_dot\">\n      <mat-label>Место работы (ТТ)</mat-label>\n      <mat-select formControlName=\"department\">\n        <mat-option [value]=\"option.substring(0, 2)\" *ngFor=\"let option of id_tt\">\n          {{option}}\n        </mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.department.errors?.required\">Выберете ТТ</mat-error>\n    </mat-form-field>\n\n    <div>\n      <div class=\"row\">\n        <mat-form-field class=\"col\">\n          <mat-label>Место стажировки</mat-label>\n          <mat-select formControlName=\"internship_place\">\n            <mat-option [value]=\"option.substring(0, 2)\" *ngFor=\"let option of id_tt\">\n              {{option}}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"!!fn.internship_place.errors?.required\">Выберете место стажировки</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n          <mat-label>Дата стажировки</mat-label>\n          <input matInput [matDatepicker]=\"picker_internship_date\" formControlName=\"internship_date\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker_internship_date\"></mat-datepicker-toggle>\n          <mat-datepicker #picker_internship_date></mat-datepicker>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <mat-form-field class=\"col-8\">\n          <mat-label>Дата собеседования</mat-label>\n          <input matInput formControlName=\"interview_date\" [matDatepicker]=\"picker_interview_date\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker_interview_date\"></mat-datepicker-toggle>\n          <mat-datepicker #picker_interview_date></mat-datepicker>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <div class=\"container\">\n      <div class=\"row\">\n        <mat-form-field class=\"col\" appearance=\"standard\">\n          <mat-label>Откуда узнал о вакансии</mat-label>\n          <mat-select formControlName=\"attraction_channel\">\n            <mat-option value=\"Work.ua\">Work.ua</mat-option>\n            <mat-option value=\"Rabota.ua\">Rabota.ua</mat-option>\n            <mat-option value=\"Instagram\">Instagram</mat-option>\n            <mat-option value=\"Facebook\">Facebook</mat-option>\n            <mat-option value=\"Telegram\">Telegram</mat-option>\n            <mat-option value=\"Реклама на магазине\">Реклама на магазине</mat-option>\n            <mat-option value=\"OLX\">OLX</mat-option>\n            <mat-option value=\"Рекомендация от третьих лиц\">Рекомендация от третьих лиц</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"!!fn.attraction_channel.errors?.required\">Выберет значение</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\" appearance=\"standard\">\n          <mat-label>Комментарий</mat-label>\n          <input matInput formControlName=\"attraction_channel_description\">\n        </mat-form-field>\n      </div>\n\n    <div class=\"container\">\n      <mat-form-field class=\"col\" appearance=\"standard\">\n        <mat-label>Причина отказа</mat-label>\n        <mat-select matInput formControlName=\"rejection_reason\">\n          <mat-option value=\"Отказ рекрутера\">Отказ рекрутера</mat-option>\n          <mat-option value=\"Переоценка собственных сил\">Переоценка собственных сил</mat-option>\n          <mat-option value=\"Не выход на стажировку\">Невыход на стажировку</mat-option>\n          <mat-option value=\"Отказ менеджера\">Отказ менеджера</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.rejection_reason.errors?.required\">Введите значение</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"row justify-content-center\">\n      <mat-form-field class=\"col-8\">\n        <mat-label>Комментарий к сотруднику</mat-label>\n        <textarea matInput formControlName=\"employee_description\"></textarea>\n      </mat-form-field>\n    </div>\n  </div>\n</div>\n\n  <!-- Edit person -->\n  <div *ngIf=\"formValueEdit\" [formGroup]=\"editPerson\">\n\n\n    <mat-card class=\"mt-2\">\n      <div class=\"row\">\n        <mat-form-field>\n          <mat-label>Фамилия</mat-label>\n          <input matInput formControlName=\"last_name\">\n          <mat-error *ngIf=\"!!fn.last_name.errors?.required\">Введите фамилию</mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <mat-label>Имя</mat-label>\n          <input matInput formControlName=\"first_name\">\n          <mat-error *ngIf=\"!!fn.first_name.errors?.required\">Введите имя</mat-error>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <mat-form-field class=\"col-8\">\n          <mat-label>Отчество</mat-label>\n          <input matInput formControlName=\"second_name\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"row\">\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Статус</mat-label>\n          <mat-select matInput formControlName=\"status\">\n            <mat-option value=\"Кандидат\">Кандидат</mat-option>\n            <mat-option value=\"Резерв\">Резерв</mat-option>\n            <mat-option value=\"Отказали\">Отказали</mat-option>\n            <mat-option value=\"Стажёр\">Стажёр</mat-option>\n            <mat-option value=\"Работает\">Работает</mat-option>\n            <mat-option value=\"Уволенный\">Уволенный</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"!!fn.status.errors?.required\">Выберет статус</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"standard\">\n          <mat-label>Маркер</mat-label>\n          <mat-select formControlName=\"color\">\n            <mat-option value=\"#f44336\">Красный</mat-option>\n            <mat-option value=\"#ffff00\">Желтый</mat-option>\n            <mat-option value=\"#76ff03\">Зелёный</mat-option>\n          </mat-select>\n        </mat-form-field>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <mat-form-field class=\"col-8\">\n          <mat-label>Номер телефона</mat-label>\n          <input type=\"tel\" matInput formControlName=\"number_phone\" placeholder=\"0988788181\">\n          <mat-icon matSuffix>phone</mat-icon>\n          <mat-error *ngIf=\"!!fn.number_phone.errors?.required\">Введите телефон</mat-error>\n          <mat-error *ngIf=\"!!fn.number_phone.errors?.pattern\">Неверный формат номера телефона</mat-error>\n        </mat-form-field>\n      </div>\n    </mat-card>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Тип подразделения</mat-label>\n      <mat-select formControlName=\"type_department\">\n        <mat-option value=\"Торговая точка\">Торговая точка</mat-option>\n        <mat-option value=\"Офис\">Офис</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.type_department.errors?.required\">Выберете подразделения</mat-error>\n    </mat-form-field>\n\n    <div class=\"row\">\n      <mat-form-field class=\"col\" *ngIf=\"office\">\n        <mat-label>Должность</mat-label>\n        <input matInput formControlName=\"position\">\n        <mat-error *ngIf=\"!!fn.position.errors?.required\">Выберете должность</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" *ngIf=\"office\">\n        <mat-label>Подразделение</mat-label>\n        <input matInput formControlName=\"department\">\n        <mat-error *ngIf=\"!!fn.department.errors?.required\">Выберете подразделение</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" *ngIf=\"trade_dot\">\n        <mat-label>Должность</mat-label>\n        <mat-select matInput formControlName=\"position\">\n          <mat-option value=\"Продавец\">Продавец</mat-option>\n          <mat-option value=\"Повар\">Повар</mat-option>\n          <mat-option value=\"Продавец(0.5)\">Продавец 0.5</mat-option>\n          <mat-option value=\"Повар(0.5)\">Повар 0.5</mat-option>\n          <mat-option value=\"Продавец(У)\">Продавец(У)</mat-option>\n          <mat-option value=\"Повар(У)\">Повар(У)</mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.position.errors?.required\">Выберете должность</mat-error>\n      </mat-form-field>\n\n      <mat-form-field class=\"col\" *ngIf=\"trade_dot\">\n        <mat-label>Место работы (ТТ)</mat-label>\n        <mat-select formControlName=\"department\">\n          <mat-option [value]=\"option.substring(0, 2)\" *ngFor=\"let option of id_tt\">\n            {{option}}\n          </mat-option>\n        </mat-select>\n        <mat-error *ngIf=\"!!fn.department.errors?.required\">Выберете ТТ</mat-error>\n      </mat-form-field>\n    </div>\n\n    <div class=\"container\">\n      <div class=\"row\">\n        <mat-form-field class=\"col\" appearance=\"standard\">\n          <mat-label>Откуда узнал о вакансии</mat-label>\n          <mat-select formControlName=\"attraction_channel\">\n            <mat-option value=\"Work.ua\">Work.ua</mat-option>\n            <mat-option value=\"Rabota.ua\">Rabota.ua</mat-option>\n            <mat-option value=\"Instagram\">Instagram</mat-option>\n            <mat-option value=\"Facebook\">Facebook</mat-option>\n            <mat-option value=\"Telegram\">Telegram</mat-option>\n            <mat-option value=\"Реклама на магазине\">Реклама на магазине</mat-option>\n            <mat-option value=\"OLX\">OLX</mat-option>\n            <mat-option value=\"Рекомендация от третьих лиц\">Рекомендация от третьих лиц</mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"!!fn.attraction_channel.errors?.required\">Выберет значение</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\" appearance=\"standard\">\n          <mat-label>Комментарий</mat-label>\n          <input matInput formControlName=\"attraction_channel_description\">\n        </mat-form-field>\n      </div>\n\n      <div class=\"row justify-content-center\">\n        <mat-form-field class=\"col-8\">\n          <mat-label>Дата собеседования</mat-label>\n          <input matInput formControlName=\"interview_date\" [matDatepicker]=\"picker_interview_date\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker_interview_date\"></mat-datepicker-toggle>\n          <mat-datepicker #picker_interview_date></mat-datepicker>\n        </mat-form-field>\n\n      </div>\n    </div>\n\n    <div class=\"container\">\n      <div class=\"row\">\n        <mat-form-field class=\"col\">\n          <mat-label>Место стажировки</mat-label>\n          <mat-select formControlName=\"internship_place\">\n            <mat-option [value]=\"option.substring(0, 2)\" *ngFor=\"let option of id_tt\">\n              {{option}}\n            </mat-option>\n          </mat-select>\n          <mat-error *ngIf=\"!!fn.internship_place.errors?.required\">Выберете место стажировки</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n          <mat-label>Дата стажировки</mat-label>\n          <input matInput [matDatepicker]=\"picker_internship_date\" formControlName=\"internship_date\">\n          <mat-datepicker-toggle matSuffix [for]=\"picker_internship_date\"></mat-datepicker-toggle>\n          <mat-datepicker #picker_internship_date></mat-datepicker>\n        </mat-form-field>\n      </div>\n    </div>\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <mat-label>Причина отказа</mat-label>\n      <mat-select matInput formControlName=\"rejection_reason\">\n        <mat-option value=\"Отказ рекрутера\">Отказ рекрутера</mat-option>\n        <mat-option value=\"Переоценка собственных сил\">Переоценка собственных сил</mat-option>\n        <mat-option value=\"Не выход на стажировку\">Невыход на стажировку</mat-option>\n        <mat-option value=\"Отказ менеджера\">Отказ менеджера</mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.rejection_reason.errors?.required\">Введите значение</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\">\n      <mat-label>Комментарий к сотруднику</mat-label>\n      <textarea matInput cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"1\"\n        cdkAutosizeMaxRows=\"5\" formControlName=\"employee_description\"></textarea>\n    </mat-form-field>\n  </div>\n</div>\n\n<div mat-dialog-actions *ngIf=\"formValueAdd\">\n  <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"addEmployee()\">Отправить</button>\n  <button mat-raised-button color=\"primary\" mat-dialog-close\n    style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n<div mat-dialog-actions *ngIf=\"formValueEdit\">\n  <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"updateEmployee()\">Обновить</button>\n  <button mat-raised-button color=\"primary\" mat-dialog-close\n    style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DialogData } from '../main/main.component';\nimport { ListTtService } from '../service/list-tt.service';\nimport * as moment from 'moment';\n\n\n@Component({\n  templateUrl: './modal-list-tt.component.html',\n  styleUrls: ['./modal-list-tt.component.scss']\n})\nexport class ModalListTtComponent implements OnInit {\n\n  new_outlet: FormGroup;\n  edit_outlet: FormGroup;\n\n  modal_alert_message: any;\n\n  formValueAdd = this.data.value === 'new' ? true : false;\n  formValueEdit = this.data.value === 'edit' ? true : false;\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalListTtComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public formBuilder: FormBuilder,\n    private ListTtService: ListTtService,\n    private _snackBar: MatSnackBar\n      ) {\n\n  }\n\n  ngOnInit(): void {\n    switch (this.data.value) {\n      case 'new':\n    this.new_outlet = this.formBuilder.group({\n      number_td: new FormControl(),\n      address: new FormControl(),\n      city: new FormControl(),\n      date_open: new FormControl(),\n      manager: new FormControl(),\n      rm: new FormControl(),\n    });\n      break;\n      case 'edit':\n    this.edit_outlet = this.formBuilder.group({\n      id_tt: new FormControl(),\n      number_td: new FormControl(),\n      address: new FormControl(),\n      city: new FormControl(),\n      date_open: new FormControl(),\n      manager: new FormControl(),\n      rm: new FormControl()\n    });\n        this.edit_outlet.controls['id_tt'].setValue(this.data.row.id_tt)\n        this.edit_outlet.controls['number_td'].setValue(this.data.row.number_td);\n        this.edit_outlet.controls['address'].setValue(this.data.row.address);\n        this.edit_outlet.controls['date_open'].setValue(this.data.row.date_open === '' ? null : moment.parseZone(this.data.row.date_open,\"DD.MM.YYYY\").format('YYYY-MM-DD'));\n        this.edit_outlet.controls['city'].setValue(this.data.row.city);\n        this.edit_outlet.controls['manager'].setValue(this.data.row.manager);\n        this.edit_outlet.controls['rm'].setValue(this.data.row.rm);\n        console.log(this.edit_outlet);\n\n    break;\n  }\n  }\n\n  addOutlet() {\n    switch (this.new_outlet.invalid) {\n      case true:\n        console.log(this.new_outlet.value);\n        break;\n      default:\n        this.ListTtService.add_outlet(this.new_outlet.value).subscribe((res) => {\n          console.log(this.new_outlet.value);\n          this.modal_alert_message = JSON.parse(res);\n          switch (this.modal_alert_message) {\n            case 'Торговая точка добавлена':\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        });\n    }\n  }\n\n  editOutlet() {\n    switch (this.edit_outlet.invalid) {\n      case true:\n        console.log(this.edit_outlet.value);\n        break;\n      default:\n        this.edit_outlet.value.date_open === null ? null : this.edit_outlet.controls['date_open'].setValue(moment.parseZone(this.edit_outlet.value.date_open).format('DD.MM.YYYY'));\n        this.ListTtService.edit_outlet(this.edit_outlet.value).subscribe((res) => {\n          this.modal_alert_message = JSON.parse(res);\n          console.log(this.modal_alert_message)\n          switch (this.modal_alert_message) {\n            case 'Данные обновлены':\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        })\n    }\n  }\n}\n","<h1 *ngIf=\"formValueAdd\" mat-dialog-title>Новая торговая точка</h1>\n<div mat-dialog-content>\n    <form *ngIf=\"formValueAdd\" [formGroup]=\"new_outlet\">\n        <mat-form-field class=\"col\">\n            <mat-label>Номер торговой точки</mat-label>\n            <input matInput formControlName=\"number_td\">\n            <mat-error>Поле не заполнено</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Город</mat-label>\n            <input matInput formControlName=\"city\">\n            <mat-error>Поле не заполнено</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Адрес</mat-label>\n            <input matInput formControlName=\"address\">\n            <mat-error>Поле не заполнено</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Дата открытия</mat-label>\n            <input matInput formControlName=\"date_open\" [matDatepicker]=\"picker_new_outlet\"\n                (focus)=\"picker_new_outlet.open()\" readonly>\n        </mat-form-field>\n        <mat-datepicker #picker_new_outlet></mat-datepicker>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Менеджер ТТ</mat-label>\n            <input matInput formControlName=\"manager\">\n            <mat-error>Поле не заполнено</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Региональный менеджер</mat-label>\n            <input matInput formControlName=\"rm\">\n            <mat-error>Поле не заполнено</mat-error>\n        </mat-form-field>\n    </form>\n\n    <form *ngIf=\"formValueEdit\" [formGroup]=\"edit_outlet\">\n\n        <mat-form-field class=\"col\">\n            <mat-label>Номер торговой точки</mat-label>\n            <input matInput formControlName=\"number_td\">\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Дата открытия</mat-label>\n            <input matInput formControlName='date_open' [matDatepicker]=\"picker_edit_outlet\"\n                (focus)=\"picker_edit_outlet.open()\" readonly>\n            <mat-datepicker-toggle matSuffix [for]=\"picker_edit_outlet\"></mat-datepicker-toggle>\n            <mat-datepicker #picker_edit_outlet></mat-datepicker>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Город</mat-label>\n            <input matInput formControlName=\"city\">\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Адрес</mat-label>\n            <input matInput formControlName=\"address\">\n        </mat-form-field>\n\n\n        <mat-form-field class=\"col\">\n            <mat-label>Менеджер ТТ</mat-label>\n            <input matInput formControlName=\"manager\">\n\n        </mat-form-field>\n\n        <mat-form-field class=\"col\">\n            <mat-label>Региональный менеджер</mat-label>\n            <input matInput formControlName=\"rm\">\n        </mat-form-field>\n    </form>\n</div>\n\n<div mat-dialog-actions *ngIf=\"formValueAdd\">\n    <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"addOutlet()\">Добавить</button>\n    <button mat-raised-button color=\"primary\" mat-dialog-close\n        style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n\n<div mat-dialog-actions *ngIf=\"formValueEdit\">\n    <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"editOutlet()\">Изменить</button>\n    <button mat-raised-button color=\"primary\" mat-dialog-close\n        style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>\n","import { SelectionModel } from '@angular/cdk/collections';\nimport { Component, Inject, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { MatSort } from '@angular/material/sort';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { DialogData } from '../main/main.component';\nimport { MainService } from '../service/main.service';\nimport { TestsService } from '../service/tests.service';\n\n@Component({\n  selector: 'app-modal-mt',\n  templateUrl: './modal-mt.component.html',\n  styleUrls: ['./modal-mt.component.scss']\n})\nexport class ModalMtComponent implements OnInit {\n\n  formValueAdd = this.data.value === 'new_test' ? true : false;\n  boolean_list_person = this.data.value === 'new_testing_for_person' ? true : false;\n\n\n\n  newTest: FormGroup;\n  modal_alert_message: any\n  list_position: any\n\n\n  search = ''\n  list_persons = [];\n\n  list_name_tests: string[];\n\n  name_test = '';\n\n\n  displayedColumns: string[] = [\n    'select',\n    'fi',\n    'department',\n    'position'\n  ];\n\n  selection = new SelectionModel(true, []);\n  dataSource = new MatTableDataSource();\n\n  @ViewChild(MatSort) sort: MatSort;\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalMtComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public formBuilder: FormBuilder,\n    private mainService: MainService,\n    private _snackBar: MatSnackBar,\n    private testsService: TestsService\n  ) {\n    switch (this.data.value) {\n      case 'new_testing_for_person':\n        this.testsService.tests_get_list_persons().subscribe(res => {\n          this.list_persons = JSON.parse(res);\n          this.dataSource = new MatTableDataSource(this.list_persons);\n          this.dataSource.sort = this.sort;\n          this.dataSource.paginator = this.paginator;\n          this.selection = new SelectionModel(true, []);\n        })\n\n        this.testsService.tests_get_name_tests().subscribe(res => {\n          this.list_name_tests = JSON.parse(res)\n        })\n        break;\n      case 'new_test':\n        this.testsService.tests_get_list_position().subscribe(res => {\n          this.list_position = JSON.parse(res);\n        })\n        break;\n    }\n  }\n\n  get fn() {\n    switch (this.data.value) {\n      case 'new_test':\n        return this.newTest.controls;\n\n      case 'new_testing_for_person':\n        console.log('new_testing_for_person');\n        break;\n    }\n  }\n\n\n  ngOnInit(): void {\n    switch (this.data.value) {\n      case 'new_test':\n        this.newTest = this.formBuilder.group({\n          name_test: new FormControl('', Validators.required),\n          description_test: new FormControl(''),\n          max_score: new FormControl('',[Validators.max(200), Validators.required]),\n          position_type: new FormControl('', Validators.required),\n        });\n        break;\n    }\n  }\n\n  addPersons() {\n    switch (this.name_test) {\n      case '':\n        this._snackBar.open(\"Выберете для начала тест\", 'Закрыть', {\n          duration: 5000,\n          horizontalPosition: 'center',\n          verticalPosition: 'top',\n          panelClass: 'alert-style-error'\n        });\n        break;\n      default:\n        this.testsService.tests_check_persons_for_match(this.selection.selected, this.name_test).subscribe(res => {\n          this.modal_alert_message = JSON.parse(res);\n          switch (this.modal_alert_message) {\n            case 'done':\n              this.testsService.tests_add_testing_for_person(this.selection.selected, this.name_test).subscribe(res => {\n                this.modal_alert_message = JSON.parse(res)\n                switch (this.modal_alert_message) {\n                  case 'Готово!':\n                    this.dialogRef.close(this.modal_alert_message)\n                    break;\n                  default:\n                    this._snackBar.open(this.modal_alert_message[0].error, '', {\n                      duration: 7000,\n                      horizontalPosition: 'center',\n                      verticalPosition: 'top',\n                      panelClass: 'alert-style-error'\n                    });\n                    break;\n                }\n              })\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        })\n        break;\n    }\n  }\n\n  addNewTest() {\n    switch (this.newTest.invalid) {\n      case true:\n        console.log('false');\n        break;\n      default:\n        this.testsService.tests_add_new_test(this.newTest.value).subscribe(res => {\n          this.modal_alert_message = JSON.parse(res)\n          switch (this.modal_alert_message) {\n            case 'Новый тест добавлен':\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        })\n        break;\n    }\n\n  }\n\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource.data.forEach(row => this.selection.select(row));\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n  }\n\n}\n","<div *ngIf=\"formValueAdd\">\n\n\n  <h1 mat-dialog-title>Новый тест</h1>\n  <mat-divider></mat-divider>\n  <div [formGroup]=\"newTest\">\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Название теста</mat-label>\n      <input matInput formControlName=\"name_test\">\n      <mat-error *ngIf=\"!!fn.name_test.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Выберете должность</mat-label>\n      <mat-select formControlName=\"position_type\">\n        <mat-option [value]=\"item\" *ngFor=\"let item of list_position;\">\n          {{item}}\n        </mat-option>\n      </mat-select>\n      <mat-error *ngIf=\"!!fn.position_type.errors?.required\">Поле не заполнено</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"outline\">\n      <mat-label>Максимальная оценка теста</mat-label>\n      <input matInput type='number' formControlName=\"max_score\">\n      <mat-error *ngIf=\"!!fn.max_score.errors?.required\">Поле не заполнено</mat-error>\n      <mat-error *ngIf=\"!!fn.max_score.errors?.max\">Максимальная оценка 200 балов</mat-error>\n    </mat-form-field>\n\n    <mat-form-field class=\"col\" appearance=\"standard\">\n      <mat-label>Описание теста</mat-label>\n      <input matInput formControlName=\"description_test\">\n    </mat-form-field>\n\n  </div>\n\n  <mat-divider></mat-divider>\n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"addNewTest()\">Отправить</button>\n    <button mat-raised-button color=\"primary\" mat-dialog-close\n      style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n  </div>\n</div>\n\n<div *ngIf=\"boolean_list_person\">\n  <div class=\"row\">\n    <div class=\"col-2\">\n      <mat-form-field>\n        <mat-label>Поиск</mat-label>\n        <input matInput (keyup)=\"applyFilter($event)\">\n      </mat-form-field>\n    </div>\n    <div class=\"col-3 ml-auto\">\n      <mat-form-field>\n        <mat-label>Выберете тест</mat-label>\n        <mat-select [(ngModel)]=\"name_test\">\n          <mat-option *ngFor=\"let food of list_name_tests\" [value]=\"food\">\n            {{food}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n  </div>\n  <div class=\"mat-elevation-z8 mt-1\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null\" [checked]=\"selection.hasValue() && isAllSelected()\"\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\n            [checked]=\"selection.isSelected(row)\" [aria-label]=\"checkboxLabel(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n\n      <ng-container matColumnDef=\"fi\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Ф.И.</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.fi }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>TT,подразделение</th>\n        <td mat-cell *matCellDef=\"let row\">\n          {{row.department}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Должность</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.position}}</td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns;\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[5, 10, 20]\" showFirstLastButtons></mat-paginator>\n  </div>\n  <mat-divider></mat-divider>\n  <div mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" style=\"margin-bottom: 12px\" (click)=\"addPersons()\">Добавить</button>\n    <button mat-raised-button color=\"primary\" mat-dialog-close\n      style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n  </div>\n</div>\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { DialogData } from '../main/main.component';\nimport { MustMatch } from '../login/must-match.validator';\nimport { LoginService } from '../service/login.service';\n\n\n@Component({\n  templateUrl: './modal-users-settings.component.html',\n  styleUrls: ['./modal-users-settings.component.scss']\n})\nexport class ModalUsersSettingsComponent implements OnInit {\n\n  registerForm: FormGroup\n  modal_alert_message: any\n  user_name = this.loginService.user_name\n\n  constructor(\n    public dialogRef: MatDialogRef<ModalUsersSettingsComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: DialogData,\n    public formBuilder: FormBuilder,\n    private _snackBar: MatSnackBar,\n    private loginService: LoginService\n  ) { }\n\n  get f() { return this.registerForm.controls; }\n\n  ngOnInit(): void {\n    this.registerForm = this.formBuilder.group({\n      userName: new FormControl('', Validators.required),\n      password: new FormControl('', [Validators.required, Validators.minLength(6)]),\n      confirmPassword: new FormControl('', Validators.required),\n      first_name: new FormControl('', Validators.required),\n      last_name: new FormControl('', Validators.required),\n      user_role: new FormControl('', Validators.required)\n    }, {\n      validator: MustMatch('password', 'confirmPassword')\n    });\n  }\n\n  register() {\n    switch (this.registerForm.invalid) {\n      case true:\n        console.log('false');\n        console.log(this.registerForm.value);\n        break;\n      default:\n        this.loginService.registerUser(this.registerForm.value).subscribe(res => {\n          this.modal_alert_message = JSON.parse(res)\n          console.log(this.modal_alert_message);\n          switch (this.modal_alert_message) {\n            case 'Регистрация успешна':\n              this.dialogRef.close(this.modal_alert_message)\n              break;\n            default:\n              this._snackBar.open(this.modal_alert_message[0].error, '', {\n                duration: 7000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-error'\n              });\n              break;\n          }\n        });\n        break;\n    }\n  }\n}\n","<h1 mat-dialog-title>Новый пользователь</h1>\n<div mat-dialog-content>\n    <div [formGroup]=\"registerForm\">\n        <div class=\"row\">\n            <mat-form-field class=\"col\" appearance=\"outline\">\n                <mat-label>Фамилия</mat-label>\n                <input matInput formControlName=\"last_name\">\n                <mat-error *ngIf=\"!!f.last_name.errors?.required\">Поле не заполнено</mat-error>\n            </mat-form-field>\n\n            <mat-form-field class=\"col\" appearance=\"outline\">\n                <mat-label>Имя</mat-label>\n                <input matInput formControlName=\"first_name\">\n                <mat-error *ngIf=\"!!f.first_name.errors?.required\">Поле не заполнено</mat-error>\n            </mat-form-field>\n        </div>\n        <mat-form-field class=\"col\" appearance=\"outline\">\n            <mat-label>User name</mat-label>\n            <input matInput formControlName=\"userName\">\n            <mat-error *ngIf=\"!!f.userName.errors?.required\">Поле не заполнено</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\" appearance=\"outline\">\n            <mat-label>Пароль</mat-label>\n            <input matInput type=\"password\" formControlName=\"password\">\n            <mat-error *ngIf=\"!!f.password.errors?.required\">Поле не заполнено</mat-error>\n            <mat-error *ngIf=\"!!f.password.errors?.minlength\">Пароль должен быть не меньше 6 символов</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\" appearance=\"outline\">\n            <mat-label>Повторите пароль</mat-label>\n            <input matInput type=\"password\" formControlName=\"confirmPassword\">\n            <mat-error *ngIf=\"!!f.confirmPassword.errors?.required\">Поле не заполнено</mat-error>\n            <mat-error *ngIf=\"!!f.confirmPassword.errors?.mustMatch\">Введенный пароль не совпадает</mat-error>\n        </mat-form-field>\n\n        <mat-form-field class=\"col\" appearance=\"outline\">\n            <mat-label>Привилегии пользователя</mat-label>\n            <mat-select formControlName=\"user_role\">\n                <mat-option *ngIf=\"user_name==='admin'\" value=\"admin\">Admin</mat-option>\n                <mat-option value=\"user_hr\">Human resources</mat-option>\n                <mat-option value=\"user_pi\">Кадровый инспектор</mat-option>\n                <mat-option value=\"user_mt\">Менеджер по обучению</mat-option>\n            </mat-select>\n            <mat-error>Выберете привилегии</mat-error>\n        </mat-form-field>\n    </div>\n</div>\n<div mat-dialog-actions>\n    <button mat-raised-button color=\"primary\" class=\"mr-auto\" (click)=\"register()\">Отправить</button>\n    <button mat-raised-button color=\"primary\" mat-dialog-close\n        style=\"margin-left: auto; margin-bottom: 12px\">Отмена</button>\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { ReportPageService } from 'src/app/service/report-page.service'\nimport * as moment from 'moment';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { CdkTextareaAutosize } from '@angular/cdk/text-field';\n\n@Component({\n  selector: 'app-report-page',\n  templateUrl: './report-page.component.html',\n  styleUrls: ['./report-page.component.scss']\n})\nexport class ReportPageComponent implements OnInit {\n\n  modal_alert_message:any\n  report_list: string[]\n  search:any\n  type_reports = 'all'\n  type_reports_list:string[]\n\n  @ViewChild('autosize') autosize: CdkTextareaAutosize;\n\n  dataSource = new MatTableDataSource();\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  displayedColumns: string[] = [\n    'id',\n    'fi',\n    'number_phone',\n    'department',\n    'position',\n    'type_reports',\n    'description',\n    'date_time'\n  ];\n\n\n  constructor(\n    private reportPage:ReportPageService\n  ) {\n    this.reportPage.report_get_table(this.type_reports).subscribe(res => {\n      this.report_list = JSON.parse(res)\n      this.dataSource = new MatTableDataSource(this.report_list);\n      this.dataSource.paginator = this.paginator;\n    })\n    this.reportPage.report_get_type_reports_list().subscribe(res => {\n      this.type_reports_list = JSON.parse(res);\n    })\n  }\n\n  ngModalChangeTypeReportList(){\n    this.reportPage.report_get_table(this.type_reports).subscribe(res => {\n      this.report_list = JSON.parse(res)\n      this.dataSource = new MatTableDataSource(this.report_list);\n      this.dataSource.paginator = this.paginator;\n    })\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n  ngOnInit(): void {\n  }\n\n}\n","<div class=\"container-fluid mt-2 mb-3\">\n  <div class=\"row\">\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Поиск</mat-label>\n      <input matInput [(ngModel)]=\"search\" (keyup)=\"applyFilter($event)\">\n    </mat-form-field>\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Выберете тип обращения</mat-label>\n      <mat-select [(ngModel)]=\"type_reports\" (ngModelChange)=\"ngModalChangeTypeReportList()\">\n        <mat-option value=\"all\">Все</mat-option>\n        <mat-option *ngFor=\"let food of type_reports_list\" [value]=\"food\">\n          {{food}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n  </div>\n\n<div class=\"mat-elevation-z8\">\n  <table mat-table [dataSource]=\"dataSource\">\n\n    <ng-container matColumnDef=\"id\">\n      <th mat-header-cell *matHeaderCellDef> No. </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"fi\">\n      <th mat-header-cell *matHeaderCellDef> Фамилия, Имя </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.fi}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"number_phone\">\n      <th mat-header-cell *matHeaderCellDef> Номер телефона </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.number_phone}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"department\">\n      <th mat-header-cell *matHeaderCellDef> Подразделение </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.department}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"position\">\n      <th mat-header-cell *matHeaderCellDef> Должность </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n    </ng-container>\n\n\n    <ng-container matColumnDef=\"type_reports\">\n      <th mat-header-cell *matHeaderCellDef> Тип обращения </th>\n      <td mat-cell *matCellDef=\"let element\"> {{element.type_reports}} </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"description\">\n      <th mat-header-cell *matHeaderCellDef> Описание </th>\n      <td mat-cell *matCellDef=\"let element\">\n        <mat-form-field class=\"example-full-width\">\n          <!-- <textarea matInput cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"1\"\n            cdkAutosizeMaxRows=\"5\" readonly>{{element.description}}</textarea> -->\n            <textarea matInput readonly>{{element.description}}</textarea>\n        </mat-form-field>\n      </td>\n    </ng-container>\n\n    <ng-container matColumnDef=\"date_time\">\n      <th mat-header-cell *matHeaderCellDef style=\"text-align: center;\"> Дата обращения </th>\n      <td mat-cell *matCellDef=\"let element\" style=\"text-align: center;\"> {{element.date_time}} </td>\n    </ng-container>\n\n    <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n  </table>\n  <mat-paginator [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n</div>\n</div>\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ListTtService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n\n  get_all() {\n    return this.http.post(\n      './assets/php/list_tt_get_all.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  \n  edit_outlet(edit_outlet) {\n    return this.http.post(\n      './assets/php/list_tt_edit.php',\n      JSON.stringify(\n        {\n          edit_outlet:edit_outlet\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  \n  add_outlet(new_outlet){\n    return this.http.post(\n      './assets/php/list_tt_add.php',\n      JSON.stringify(\n        {\n          new_outlet:new_outlet\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { AppComponent } from '../app.component';\n\n\n@Injectable({\n\n  providedIn: 'root'\n\n})\nexport class LoginService {\n\n  user_id: string = JSON.parse(localStorage.getItem('id_user_pd'));\n  user_name: string = localStorage.getItem('user_name_pd');\n  user_role: string = localStorage.getItem('user_role_pd')\n\n\n  constructor(\n    private http: HttpClient\n  ) {\n  }\n\n  registerUser(user_form) {\n    return this.http.post(\n      './assets/php/register_user.php',\n      JSON.stringify(\n        {\n          user_form: user_form\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  getLogin(user_name, password) {\n\n    return this.http.post(\n      './assets/php/login.php',\n      JSON.stringify({\n\n        'user_name': user_name,\n        'password': password\n      }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  getSettingsUser(user_id) {\n    return this.http.post(\n      './assets/php/user_settings_get.php',\n      JSON.stringify({\n        'user_id': user_id,\n      }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  getUsersSettingsDistribution(user_id) {\n    return this.http.post(\n      './assets/php/users_settings_distribution_get.php',\n      JSON.stringify({\n        'user_id': user_id,\n      }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  toggleUsersSettingsDistribution(user_id,main_page,settings_page,list_tt_page, distribution_page,report_page,tests_page) {\n    return this.http.post(\n      './assets/php/users_settings_distribution_toggle.php',\n      JSON.stringify(\n        {\n          user_id: user_id,\n          main_page:main_page,\n          settings_page:settings_page,\n          list_tt_page:list_tt_page,\n          distribution_page:distribution_page,\n          report_page:report_page,\n          tests_page:tests_page\n\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MainService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  admin_main_table_get() {\n    return this.http.post(\n      './assets/php/admin_main_table_get.php',\n      JSON.stringify(\n        {}\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  admin_main_delete_employee(id_person) {\n    return this.http.post(\n      './assets/php/admin_main_delete_employee.php',\n      JSON.stringify(\n        {\n          id_person: id_person\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  admin_main_add_employee(new_form, time_create, user_name_create_employee) {\n    console.log(new_form);\n    return this.http.post(\n      './assets/php/admin_main_add_employee.php',\n      JSON.stringify(\n        {\n          new_form: new_form,\n          time_create: time_create,\n          user_name_create_employee: user_name_create_employee\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  admin_main_update_employee(user_name, form_edit_employee, time_last_change) {\n    return this.http.post(\n      './assets/php/admin_main_update_employee.php',\n      JSON.stringify(\n        {\n          user_name: user_name,\n          form_edit_employee: form_edit_employee,\n          time_last_change: time_last_change\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  admin_get_attraction_channel(date){\n    return this.http.post(\n      './assets/php/admin_get_attraction_channel.php',\n      JSON.stringify(\n        {\n          date: date\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n\n  user_hr_get_main_table(user_name_create_employee) {\n    return this.http.post(\n      './assets/php/user_hr_get_main_table.php',\n      JSON.stringify(\n        {\n          user_name_create_employee: user_name_create_employee\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  user_hr_main_add_employee(newPerson, dateTimeNow, user_name) {\n    return this.http.post(\n      './assets/php/user_hr_main_add_employee.php',\n      JSON.stringify(\n        {\n          newPerson: newPerson,\n          dateTimeNow: dateTimeNow,\n          user_name: user_name\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n\n\n  user_hr_main_update_employee(user_name, editPerson, dateTimeNow, id_person) {\n    return this.http.post(\n      './assets/php/user_hr_main_update_employee.php',\n      JSON.stringify(\n        {\n          user_name: user_name,\n          editPerson: editPerson,\n          dateTimeNow: dateTimeNow,\n          id_person:id_person\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  get_id_tt() {\n    return this.http.post(\n      './assets/php/get_id_tt.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  user_mt_main_table_get(name_test, passing_date) {\n    return this.http.post(\n      './assets/php/user_mt_main_table_get.php',\n      JSON.stringify(\n        {\n          name_test: name_test,\n          passing_date: passing_date\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  user_mt_update_employee(user_name, form_edit_employee, id_person, date_now) {\n    return this.http.post(\n      './assets/php/user_mt_get_main_update_employee.php',\n      JSON.stringify(\n        {\n          user_name: user_name,\n          form_edit_employee: form_edit_employee,\n          id_person: id_person,\n          date_now: date_now\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  user_pi_get_table_main() {\n    return this.http.post(\n      './assets/php/user_pi_get_main_table.php',\n      JSON.stringify(\n        {}\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  user_pi_update_employee(user_name, form_edit_employee, id_person, date_now) {\n    return this.http.post(\n      './assets/php/user_pi_get_main_update_employee.php',\n      JSON.stringify(\n        {\n          user_name: user_name,\n          form_edit_employee: form_edit_employee,\n          id_person: id_person,\n          date_now: date_now\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n\n\n\n\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReportPageService {\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  report_get_table(type_reports) {\n    return this.http.post(\n      './assets/php/report_get_table.php',\n      JSON.stringify(\n        {\n          type_reports:type_reports\n        }\n      ),\n      { responseType: 'text' }\n    )\n  }\n\n  report_get_type_reports_list(){\n    return this.http.post(\n      './assets/php/report_get_type_reports_list.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    )\n  }\n  \n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SettingsUsersService {\n\n  user_server: any;\n\n  constructor(\n    private http: HttpClient\n  ) { }\n\n  RunPy(user_id, backtest_id) {\n    console.log(user_id, backtest_id);\n    return this.http.post('http://' + this.user_server + '/research_tool/assets/python/trading_script/start_py.php',\n      JSON.stringify(\n        {\n          user_id: user_id,\n          backtest_id: backtest_id\n        }\n      ),\n      { responseType: 'text' });\n  }\n\n\n  get_users() {\n    return this.http.post(\n      './assets/php/settings_users_get.php',\n      JSON.stringify(\n        {\n\n        }\n      ),\n      { responseType: 'text' }\n    )\n  }\n\n  update_user_settings(users_array) {\n    return this.http.post(\n      './assets/php/settings_users_update.php',\n      JSON.stringify(\n        {\n          users_array:users_array\n        }\n      ),\n      { responseType: 'text' }\n    )\n  }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TelegramSendService {\n\n  constructor(\n    private http:HttpClient\n  ) { }\n\n  telegram_send_get_list_type_department(){\n    return this.http.post(\n      './assets/php/telegram_send_get_list_type_department.php',\n      JSON.stringify(\n        {\n\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_list_all_person(type_department){\n    return this.http.post(\n      './assets/php/telegram_send_get_list_all_person.php',\n      JSON.stringify(\n        {\n          type_department:type_department,\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_department_list(type_department){\n    return this.http.post(\n      './assets/php/telegram_send_get_department_list.php',\n      JSON.stringify(\n        {\n          type_department:type_department,\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_department_list_person(type_department,department){\n    return this.http.post(\n      './assets/php/telegram_send_get_department_list_person.php',\n      JSON.stringify(\n        {\n          type_department:type_department,\n          department:department\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_list_cities(){\n    return this.http.post(\n      './assets/php/telegram_send_get_list_cities.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_list_person_by_cities(array_city){\n    return this.http.post(\n      './assets/php/telegram_send_get_list_person_by_cities.php',\n      JSON.stringify(\n        {\n          array_city:array_city\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_person_by_number_tt(array_number_td){\n    return this.http.post(\n      './assets/php/telegram_send_get_person_by_number_tt.php',\n      JSON.stringify(\n        {\n          array_number_td:array_number_td\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_position_td(){\n    return this.http.post(\n      './assets/php/telegram_send_get_position_td.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  telegram_send_get_all_person_position (type_department,position){\n    return this.http.post(\n      './assets/php/telegram_send_get_all_person_position.php',\n      JSON.stringify(\n        {\n          type_department:type_department,\n          position:position\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  add_TOKEN_user(user_id,user_name,TOKEN_id,TOKEN_name){\n    return this.http.post(\n      './assets/php/telegram_add_token.php',\n      JSON.stringify(\n        {\n          user_id:user_id,\n          user_name:user_name,\n          TOKEN_id:TOKEN_id,\n          TOKEN_name:TOKEN_name,\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  get_my_token(user_id){\n    return this.http.post(\n      './assets/php/telegram_get_token_name.php',\n      JSON.stringify(\n        {\n          user_id:user_id\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n\n  get_type_department(){\n    return this.http.post(\n      './assets/php/telegram_get_type_department.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  get_department_trade_dot(city){\n    return this.http.post(\n      './assets/php/telegram_get_department.php',\n      JSON.stringify(\n        {\n          city:city\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n    get_position(){\n    return this.http.post(\n      './assets/php/telegram_get_trade_dot_position.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n\n  get_data_send_bot(department){\n    return this.http.post(\n      './assets/php/telegram_get_data_send.php',\n      JSON.stringify(\n        {\n          department:department\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  get_department_office(type_department){\n    return this.http.post(\n      './assets/php/telegram_get_department_office.php',\n      JSON.stringify(\n        {\n          type_department:type_department\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  select_person(user_id, selected){\n    return this.http.post(\n      './assets/php/telegram_get_select_person.php',\n      JSON.stringify({\n        user_id:user_id,\n        selected:selected\n      }),\n      { responseType: 'text' }\n    )\n\n  }\n}\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TestsService {\n\n  constructor(\n    private http:HttpClient\n  ) { }\n\n  tests_add_new_test(newTest){\n    return this.http.post(\n      './assets/php/tests_add_new_test.php',\n      JSON.stringify(\n        {\n          newTest:newTest\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  tests_get_list_position(){\n    return this.http.post(\n      './assets/php/tests_get_list_position.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  tests_save_changes_table(id_person,test_score,passing_date,name_test){\n    return this.http.post(\n      './assets/php/tests_save_changes_table.php',\n      JSON.stringify(\n        {\n          id_person:id_person,\n          test_score:test_score,\n          passing_date:passing_date,\n          name_test:name_test\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  tests_get_name_tests(){\n    return this.http.post(\n      './assets/php/tests_get_name_tests.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  tests_get_list_persons(){\n    return this.http.post(\n      './assets/php/tests_get_list_persons.php',\n      JSON.stringify(\n        {\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  tests_check_persons_for_match(list_person,name_test){\n    return this.http.post(\n      './assets/php/tests_check_persons_for_match.php',\n      JSON.stringify(\n        {\n          list_person:list_person,\n          name_test:name_test\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n\n  tests_add_testing_for_person(list_person,name_test){\n    return this.http.post(\n      './assets/php/tests_add_testing_for_person.php',\n      JSON.stringify(\n        {\n          list_person:list_person,\n          name_test:name_test\n\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n  tests_update_persons_data(editPerson,id_person){\n    return this.http.post(\n      './assets/php/tests_update_persons_data.php',\n      JSON.stringify(\n        {\n          editPerson:editPerson,\n          id_person:id_person\n        }\n      ),\n      { responseType: 'text' }\n    );\n  }\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { SettingsUsersService } from '../service/settings-users.service';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { LoginService } from '../service/login.service';\nimport { MatAccordion } from '@angular/material/expansion';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { ModalUsersSettingsComponent } from '../modal-users-settings/modal-users-settings.component';\n\nexport interface DialogData {\n  user_name: string,\n  value: string,\n  row: any\n\n}\n\n\ndeclare var $: any;\n\n@Component({\n  selector: 'app-settings-users',\n  templateUrl: './settings-users.component.html',\n  styleUrls: ['./settings-users.component.scss']\n})\nexport class SettingsUsersComponent implements OnInit {\n\n  @ViewChild(MatAccordion) accordion: MatAccordion;\n  panelOpenState = false;\n\n  error_register: any;\n  users_array:any;\n  hide = true\n  user_settings_obj:FormGroup\n  modal_alert_message:any;\n\n\n\n\n  constructor(\n    private settingsUsers:SettingsUsersService,\n    private loginService:LoginService,\n    private formBuilder: FormBuilder,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n\n  ) {\n    this.settingsUsers.get_users().subscribe(res => {\n      this.users_array = JSON.parse(res);\n    })\n  }\n\n\n  // update_user_settings(index){\n  //   this.settingsUsers.\n\n  // }\n  get_users_settings(){\n    this.settingsUsers.get_users().subscribe(res => {\n      this.users_array = JSON.parse(res);\n    })\n  }\n\n\n\n\n  update_user_settings(index){\n  this.settingsUsers.update_user_settings(this.users_array[index]).subscribe(res => {\n      this.modal_alert_message = JSON.parse(res)\n      switch(this.modal_alert_message){\n        case 'Данные обновлены':\n          this._snackBar.open(this.modal_alert_message, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          break;\n          default:\n            this._snackBar.open(this.modal_alert_message[0].error, '', {\n              duration: 7000,\n              horizontalPosition: 'center',\n              verticalPosition: 'top',\n              panelClass: 'alert-style-error'\n            });\n            break;\n      }\n    })\n  }\n\n  openDialog(): void {\n    const dialogRef = this.dialog.open(ModalUsersSettingsComponent, {\n      maxWidth: '500px',\n      disableClose: true,\n      data: {}\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      switch (result) {\n        case 'Пользователь добавлен':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          break;\n        }\n      })\n  }\n\n\n  ngOnInit(): void {\n\n  }\n\n\n\n}\n","<div class=\"container mt-2 mb-3\">\n    <button mat-fab color=\"primary\" class=\"m-2\" (click)=\"openDialog()\">\n        <mat-icon>add</mat-icon>\n    </button>\n<div class=\"example-headers-align mt-2\">\n    <mat-accordion>\n        <mat-expansion-panel [hidden]=\"item.user_name==='admin'\" *ngFor=\"let item of users_array; let i = index \">\n            <mat-expansion-panel-header>\n                <mat-panel-title class=\"col\">\n                    <mat-icon class=\"mr-2\">account_circle</mat-icon> {{ item.first_name + \" \" + item.last_name }}\n                </mat-panel-title>\n                <mat-panel-description class=\"col\">Персональные данные</mat-panel-description>\n            </mat-expansion-panel-header>\n            <div class=\"row justify-content-center\">\n\n                <mat-form-field>\n                    <mat-label>Имя</mat-label>\n                    <input [(ngModel)]=\"item.first_name\" matInput />\n                    <mat-hint *ngIf=\"item.first_name==='' \" [ngStyle]=\"{ color: 'red' } \">Введите данные</mat-hint>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>Фамилия</mat-label>\n                    <input [(ngModel)]=\"item.last_name\" matInput />\n                    <mat-hint *ngIf=\"item.last_name==='' \" [ngStyle]=\"{ color: 'red' } \">Введите данные</mat-hint>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>Имя пользователя</mat-label>\n                    <input [(ngModel)]=\"item.user_name\" matInput />\n                    <mat-hint *ngIf=\"item.user_name==='' \" [ngStyle]=\"{ color: 'red' } \">Введите данные</mat-hint>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>Пароль</mat-label>\n                    <input matInput [(ngModel)]=\"item.password\" [type]=\"hide ? 'password' : 'text' \" />\n                    <button mat-icon-button matSuffix (click)=\"hide=! hide \" [attr.aria-label]=\" 'Hide password' \" [attr.aria-pressed]=\"hide \">\n                        <mat-icon>{{ hide ? \"visibility_off \" : \"visibility \" }}</mat-icon>\n                    </button>\n                    <mat-hint *ngIf=\"item.password==='' \" [ngStyle]=\"{ color: 'red' } \">Введите данные</mat-hint>\n                </mat-form-field>\n\n                <mat-form-field>\n                    <mat-label>Интерфейс</mat-label>\n                    <mat-select [(ngModel)]=\"item.user_role\">\n                        <mat-option *ngIf=\"item.user_name ===' admin'\" value=\"admin\">Admin</mat-option>\n                        <mat-option value=\"user_hr\">Human resources</mat-option>\n                        <mat-option value=\"user_pi\">Кадровый инспектор</mat-option>\n                        <mat-option value=\"user_mt\">Менеджер по обучению</mat-option>\n                    </mat-select>\n                </mat-form-field>\n            </div>\n            <h2 class=\"text-center\">Доступ</h2>\n            <div class=\"row justify-content-center\">\n                    <mat-checkbox [(ngModel)]=\"item.access_tests\">Тесты</mat-checkbox>\n                    <mat-checkbox [(ngModel)]=\"item.access_list_tt\">Заведение</mat-checkbox>\n                    <mat-checkbox [(ngModel)]=\"item.access_distribution\">Рассылка в Telegram</mat-checkbox>\n                    <mat-checkbox [(ngModel)]=\"item.access_report\">Предложение и замечания</mat-checkbox>\n            </div>\n            <button mat-raised-button class=\"ml-auto \" color=\"primary\" (click)=\"update_user_settings(i) \">Обновить</button>\n        </mat-expansion-panel>\n    </mat-accordion>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport Telegram from 'telegram-send-message';\nimport { TelegramSendService } from '../service/telegram-send.service';\nimport { LoginService } from '../service/login.service';\nimport { SettingsUsersService } from '../service/settings-users.service';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { BreakpointObserver } from '@angular/cdk/layout';\ndeclare var $: any;\n\n@Component({\n  selector: 'app-telegram-send',\n  templateUrl: './telegram-send.component.html',\n  styleUrls: ['./telegram-send.component.scss'],\n})\nexport class TelegramSendComponent implements OnInit {\n\n  type_department = 'all';\n  department = 'all';\n  array_city = ['all'];\n  position = 'all'\n  array_number_td = ['all']\n  textMessage: {}\n\n  list_type_department: String[];\n  list_people_connected: String[];\n  list_people_not_connected: String[];\n  list_department: String[];\n  list_cities: string[];\n  list_position: string[];\n  list_number_tt: any[];\n  list_select:any\n\n  dataSource_connected = new MatTableDataSource();\n  dataSource_not_connected = new MatTableDataSource();\n  dataSource_select = new MatTableDataSource();\n\n  selection = new SelectionModel(true, []);\n\n  all_cities = false;\n  booleanTypeOffice = false;\n  booleanTypeTradeDot = false;\n\n  @ViewChild('paginator_connected', { static: true }) paginator_connected: MatPaginator;\n  @ViewChild('paginator_not_connected', { static: true }) paginator_not_connected: MatPaginator;\n  @ViewChild('paginator_select', { static: true }) paginator_select: MatPaginator;\n\n  local = JSON.parse(localStorage.getItem('data_source'))\n\n  displayedColumns_connected: string[] = [\n    'select',\n    'id_person',\n    'fi',\n    'department',\n    'type_department',\n    'position',\n    'status'\n  ];\n\n  displayedColumns_not_connected: string[] = [\n    'id_person',\n    'fi',\n    'department',\n    'type_department',\n    'position',\n    'status'\n  ];\n\n  displayedColumns_select: string[] = [\n    'fi',\n    'department'\n  ];\n\n  TOKEN_id = '1337687879:AAGOM9TILMpbpGDxjlV_XzPfIDSGf57whfM';\n  TOKEN_id_test = '1202623405:AAHxtwkptrydHKcKxLRykD9IwF6DdhiKf6k';\n\n\n  constructor(\n    private telegramSendService: TelegramSendService,\n    private loginService: LoginService,\n    private settingsUserService: SettingsUsersService,\n    private _snackBar: MatSnackBar\n\n  ) {\n    this.telegramSendService.telegram_send_get_list_type_department().subscribe(res => {\n      this.list_type_department = JSON.parse(res);\n\n    })\n    this.telegramSendService.telegram_send_get_list_all_person(this.type_department).subscribe((res) => {\n      this.list_people_connected = JSON.parse(res).connected;\n      this.list_people_not_connected = JSON.parse(res).not_connected;\n      this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n      this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n      this.dataSource_connected.paginator = this.paginator_connected;\n      this.dataSource_not_connected.paginator = this.paginator_not_connected;\n      this.selection = new SelectionModel(true, []);\n      console.log(this.dataSource_connected);\n    });\n    this.selectPerson()\n  }\n\n\n  ngModalChangeTypeDepartmentList() {\n    this.telegramSendService.telegram_send_get_list_all_person(this.type_department).subscribe((res) => {\n      this.list_people_connected = JSON.parse(res).connected;\n      this.list_people_not_connected = JSON.parse(res).not_connected;\n      this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n      this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n      this.dataSource_connected.paginator = this.paginator_connected;\n      this.dataSource_not_connected.paginator = this.paginator_not_connected;\n      this.selection = new SelectionModel(true, []);\n      switch (this.type_department) {\n        case 'Торговая точка':\n          this.telegramSendService.telegram_send_get_list_cities().subscribe(res => {\n            this.list_cities = JSON.parse(res)\n            this.booleanTypeOffice = false\n            this.booleanTypeTradeDot = true\n            this.department = 'all';\n          });\n          break;\n        case 'Офис':\n          this.telegramSendService.telegram_send_get_department_list(this.type_department).subscribe((res) => {\n            this.list_department = JSON.parse(res);\n            this.booleanTypeTradeDot = false\n            this.booleanTypeOffice = true\n          })\n          break;\n        case 'all':\n          this.booleanTypeTradeDot = false\n          this.booleanTypeOffice = false\n          break\n      }\n    });\n  }\n\n  ngModalChangeDepartmentOffice() {\n    this.telegramSendService.telegram_send_get_department_list_person(this.type_department, this.department).subscribe(res => {\n      this.list_people_connected = JSON.parse(res).connected;\n      this.list_people_not_connected = JSON.parse(res).not_connected;\n      this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n      this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n      this.dataSource_connected.paginator = this.paginator_connected;\n      this.dataSource_not_connected.paginator = this.paginator_not_connected;\n      this.selection = new SelectionModel(true, []);\n    })\n  }\n\n  ngModelChangeAllCities() {\n    switch (this.all_cities) {\n      case true:\n        this.telegramSendService.telegram_send_get_position_td().subscribe(res => {\n          this.list_position = JSON.parse(res);\n          this.telegramSendService.telegram_send_get_list_all_person(this.type_department).subscribe((res) => {\n            this.list_people_connected = JSON.parse(res).connected;\n            this.list_people_not_connected = JSON.parse(res).not_connected;\n            this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n            this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n            this.dataSource_connected.paginator = this.paginator_connected;\n            this.dataSource_not_connected.paginator = this.paginator_not_connected;\n            this.selection = new SelectionModel(true, []);\n          })\n        })\n        break;\n      case false:\n        this.telegramSendService.telegram_send_get_list_cities().subscribe(res => {\n          this.list_cities = JSON.parse(res)\n          this.telegramSendService.telegram_send_get_list_all_person(this.type_department).subscribe((res) => {\n            this.list_people_connected = JSON.parse(res).connected;\n            this.list_people_not_connected = JSON.parse(res).not_connected;\n            this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n            this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n            this.dataSource_connected.paginator = this.paginator_connected;\n            this.dataSource_not_connected.paginator = this.paginator_not_connected;\n            this.selection = new SelectionModel(true, []);\n          })\n        })\n        break;\n    }\n  }\n\n  ngModelChangePosition() {\n    this.telegramSendService.telegram_send_get_all_person_position(this.type_department, this.position).subscribe(res => {\n      this.list_people_connected = JSON.parse(res).connected;\n      this.list_people_not_connected = JSON.parse(res).not_connected;\n      this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n      this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n      this.dataSource_connected.paginator = this.paginator_connected;\n      this.dataSource_not_connected.paginator = this.paginator_not_connected;\n      this.selection = new SelectionModel(true, []);\n    })\n  }\n\n  ngModelChangeCities() {\n    this.telegramSendService.telegram_send_get_list_person_by_cities(this.array_city).subscribe(res => {\n      this.list_people_connected = JSON.parse(res).connected === null ? [] : JSON.parse(res).connected\n      this.list_people_not_connected = JSON.parse(res).not_connected === null ? [] : JSON.parse(res).not_connected;\n      this.list_number_tt = JSON.parse(res).number_td = null ? [] : JSON.parse(res).number_td\n      this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n      this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n      this.dataSource_connected.paginator = this.paginator_connected;\n      this.dataSource_not_connected.paginator = this.paginator_not_connected;\n      this.selection = new SelectionModel(true, []);\n    })\n\n  }\n\n  ngModelChangeNumberTT() {\n    switch (this.array_number_td) {\n      case null:\n      this.ngModelChangeCities()\n        break;\n      default:\n        this.telegramSendService.telegram_send_get_person_by_number_tt(this.array_number_td).subscribe(res => {\n          this.list_people_connected = JSON.parse(res).connected === null ? [] : JSON.parse(res).connected\n          this.list_people_not_connected = JSON.parse(res).not_connected === null ? [] : JSON.parse(res).not_connected;;\n          this.dataSource_connected = new MatTableDataSource(this.list_people_connected);\n          this.dataSource_not_connected = new MatTableDataSource(this.list_people_not_connected);\n          this.dataSource_connected.paginator = this.paginator_connected;\n          this.dataSource_not_connected.paginator = this.paginator_not_connected;\n          this.selection = new SelectionModel(true, []);\n        })\n        break;\n    }\n\n  }\n\n\n  /** Whether the number of selected elements matches the total number of rows. */\n  isAllSelected() {\n    const numSelected = this.selection.selected.length;\n    const numRows = this.dataSource_connected.data.length;\n    return numSelected === numRows;\n  }\n\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\n  masterToggle() {\n    this.isAllSelected() ?\n      this.selection.clear() :\n      this.dataSource_connected.data.forEach(row => this.selection.select(row));\n\n  }\n\n  /** The label for the checkbox on the passed row */\n  checkboxLabel(row?): string {\n    if (!row) {\n      return `${this.isAllSelected() ? 'select' : 'deselect'} all`;\n\n    }\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\n\n  }\n\n  buttonSendMessage() {\n    this.selection.selected.forEach(element => {\n      Telegram.setToken(this.TOKEN_id);\n      Telegram.setRecipient(element.id_telegram);\n      Telegram.setMessage(this.textMessage);\n      Telegram.send();\n      console.log(Telegram);\n    })\n    this._snackBar.open('Успешно отправлено!', '', {\n      duration: 2000,\n      horizontalPosition: 'center',\n      verticalPosition: 'top',\n      panelClass: 'alert-style-success'\n    });\n  }\n\n  selectPerson() {\n    this.telegramSendService.select_person(this.loginService.user_id, this.selection.selected).subscribe(res => {\n      console.log(this.selection.selected);\n      console.log(res);\n      this.dataSource_select.data = [];\n      this.list_select = JSON.parse(res) === null ? [] : JSON.parse(res);\n      console.log(this.dataSource_select);\n      console.log(this.list_select);\n      this.dataSource_select = new MatTableDataSource(this.list_select);\n      this.dataSource_select.paginator = this.paginator_select;\n    })\n  }\n\n  applyFilter(filterValue: string) {\n    filterValue = filterValue.trim(); // Remove whitespace\n    filterValue = filterValue.toLowerCase(); // MatTableDataSource defaults to lowercase matches\n    this.dataSource_connected.filter = filterValue;\n    console.log(filterValue);\n    console.log(this.dataSource_connected);\n    switch (filterValue) {\n      case `офис`:\n        this.telegramSendService.telegram_send_get_department_list(`офис`).subscribe((res) => {\n          this.list_department = JSON.parse(res);\n          this.booleanTypeTradeDot = false\n          this.booleanTypeOffice = true\n        })\n        break;\n        case 'торговая точка':\n              this.telegramSendService.telegram_send_get_list_cities().subscribe(res => {\n                    this.list_cities = JSON.parse(res)\n                    this.booleanTypeOffice = false\n                    this.booleanTypeTradeDot = true\n                    this.department = 'all';\n                  });\n                  break;\n      case '':\n        this.telegramSendService.telegram_send_get_department_list('').subscribe((res) => {\n          this.list_department = JSON.parse(res);\n          this.booleanTypeTradeDot = false\n          this.booleanTypeOffice = false\n        })\n        break;\n    }\n  }\n\n  ngOnInit(): void {\n\n  }\n\n\n\n}\n","<div class=\"container-fluid mt-2 mb-3\">\n  <div class=\"row\">\n    <div class=\"col-auto mt-2\">\n      <mat-form-field>\n        <mat-label>Выберете тип подразделения</mat-label>\n        <mat-select [(ngModel)]=\"type_department\" (selectionChange)=\"ngModalChangeTypeDepartmentList()\">\n          <mat-option value='all'>Все</mat-option>\n          <mat-option [value]=\"item_type_department\" *ngFor=\"let item_type_department of list_type_department\">\n            {{item_type_department}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n      <!-- Office -->\n      <mat-form-field *ngIf=\"booleanTypeOffice\">\n        <mat-label>Выберете подразделения</mat-label>\n        <mat-select [(ngModel)]=\"department\" (selectionChange)=\"ngModalChangeDepartmentOffice()\">\n          <mat-option value='all'>Все</mat-option>\n          <mat-option [value]=\"items_list_department\" *ngFor=\"let items_list_department of list_department\">\n            {{items_list_department}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n    </div>\n\n    <!-- Trade dot -->\n    <div *ngIf=\"booleanTypeTradeDot\" class=\"col-auto mt-2\">\n\n      <section class=\"example-section\">\n        <mat-checkbox class=\"example-margin\" [(ngModel)]=\"all_cities\" (ngModelChange)=\"ngModelChangeAllCities()\">Все города</mat-checkbox>\n      </section>\n\n      <mat-form-field *ngIf=\"all_cities\">\n        <mat-label>Выберете должность</mat-label>\n        <mat-select [(ngModel)]=\"position\" (selectionChange)=\"ngModelChangePosition()\">\n          <mat-option *ngFor=\"let items_list_position of list_position\" [value]=\"items_list_position\">\n            {{items_list_position}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field *ngIf=\"!all_cities\">\n        <mat-label>Выберете город</mat-label>\n        <mat-select [(ngModel)]=\"array_city\" (selectionChange)=\"ngModelChangeCities()\" multiple>\n          <mat-option *ngFor=\"let items_list_cities of list_cities\" [value]=\"items_list_cities\">{{items_list_cities}}\n          </mat-option>\n        </mat-select>\n      </mat-form-field>\n\n      <mat-form-field *ngIf=\"!all_cities\">\n        <mat-label>Выберете заведение</mat-label>\n        <mat-select [(ngModel)]=\"array_number_td\" (selectionChange)=\"ngModelChangeNumberTT()\" multiple>\n          <mat-option *ngFor=\"let items_list_number_tt of list_number_tt\" [value]=\"items_list_number_tt\">\n            TT-{{items_list_number_tt}}</mat-option>\n        </mat-select>\n      </mat-form-field>\n\n    </div>\n    <!-- <div class=\"col-auto mt-2\">\n      <mat-form-field class=\"example-full-width\">\n        <mat-label>Текст сообщения</mat-label>\n        <textarea matInput cdkTextareaAutosize #autosize=\"cdkTextareaAutosize\" cdkAutosizeMinRows=\"1\"\n          cdkAutosizeMaxRows=\"5\" [(ngModel)]='textMessage'></textarea>\n      </mat-form-field>\n    </div>\n    <div class=\"mt-2\">\n      <button mat-raised-button color=\"primary\" (click)=\"buttonSendMessage()\">Отправить</button>\n    </div> -->\n  </div>\n  <h2 class=\"m-2\">Подключенные</h2>\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource_connected\">\n\n      <ng-container matColumnDef=\"select\">\n        <th mat-header-cell *matHeaderCellDef>\n          <mat-checkbox (change)=\"$event ? masterToggle() : null; selectPerson()\"\n            [checked]=\"selection.hasValue() && isAllSelected()\"\n            [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [aria-label]=\"checkboxLabel()\">\n          </mat-checkbox>\n        </th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-checkbox (click)=\"$event.stopPropagation()\"\n            (change)=\"$event ? selection.toggle(row) : null; selectPerson()\" [checked]=\"selection.isSelected(row)\"\n            [aria-label]=\"checkboxLabel(row)\">\n          </mat-checkbox>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"id_person\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.id_person}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"fi\">\n        <th mat-header-cell *matHeaderCellDef> Фамилия, Имя </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.fi}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"type_department\">\n        <th mat-header-cell *matHeaderCellDef> Тип подразделения </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.type_department}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef> Подразделение </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.department}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef> Должность </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> Статус </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns_connected\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns_connected;\"></tr>\n    </table>\n    <mat-paginator #paginator_connected [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n  </div>\n\n  <h2 class=\"m-2\">Выбранные</h2>\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource_select\">\n\n      <ng-container matColumnDef=\"fi\">\n        <th mat-header-cell *matHeaderCellDef> Фамилия, Имя </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.fi}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef> Подразделение </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.department}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns_select\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns_select;\"></tr>\n    </table>\n    <mat-paginator #paginator_select [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n  </div>\n  <h2 class=\"m-2\">Не подключенные</h2>\n  <div class=\"mat-elevation-z8\">\n    <table mat-table [dataSource]=\"dataSource_not_connected\">\n\n      <ng-container matColumnDef=\"id_person\">\n        <th mat-header-cell *matHeaderCellDef> No. </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.id_person}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"fi\">\n        <th mat-header-cell *matHeaderCellDef> Фамилия, Имя </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.fi}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"type_department\">\n        <th mat-header-cell *matHeaderCellDef> Тип подразделения </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.type_department}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef> Подразделение </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.department}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef> Должность </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.position}} </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"status\">\n        <th mat-header-cell *matHeaderCellDef> Статус </th>\n        <td mat-cell *matCellDef=\"let element\"> {{element.status}} </td>\n      </ng-container>\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns_not_connected\"></tr>\n      <tr mat-row *matRowDef=\"let row; columns: displayedColumns_not_connected;\"></tr>\n    </table>\n    <mat-paginator #paginator_not_connected [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { MatTableDataSource } from '@angular/material/table';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MainService } from '../service/main.service';\nimport { LoginService } from '../service/login.service';\nimport * as moment from 'moment';\nimport { ModalMtComponent } from '../modal-mt/modal-mt.component';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { TestsService } from '../service/tests.service';\n\n\nexport interface DialogData {\n  user_name: string,\n  value: string,\n  row: any\n}\n\n@Component({\n  selector: 'app-tests',\n  templateUrl: './tests.component.html',\n  styleUrls: ['./tests.component.scss']\n})\nexport class TestsComponent implements OnInit {\n\n\n  id_tt: string[];\n  search: any\n  dataTable_user_mt = [];\n  displayedColumns: string[] = [\n    'fio',\n    'name_test',\n    'test_score',\n    'passing_date',\n    'type_department',\n    'department',\n    'position',\n    'internship_date'\n  ];\n  dataSource = new MatTableDataSource();\n\n  nameTestsList:string[];\n\n\n  modal_alert_message: any;\n  name_test = 'all'\n  passing_date = 'all'\n\n  @ViewChild(MatSort, { static: false }) sort: MatSort;\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n\n  constructor(\n    private mainService: MainService,\n    private formBuilder: FormBuilder,\n    public loginService: LoginService,\n    public dialog: MatDialog,\n    private _snackBar: MatSnackBar,\n    private testsService: TestsService\n\n  ) {\n    this.mainService.user_mt_main_table_get(this.name_test, this.passing_date).subscribe((res) => {\n      this.dataTable_user_mt = JSON.parse(res);\n      this.dataSource = new MatTableDataSource(this.dataTable_user_mt);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n\n    this.mainService.get_id_tt().subscribe(res => {\n      this.id_tt = JSON.parse(res)\n    });\n\n    this.testsService.tests_get_name_tests().subscribe(res => {\n      this.nameTestsList = JSON.parse(res)\n    })\n  }\n\n\n  ngOnInit(): void {\n\n  }\n\n  openDialog(row, value): void {\n    switch(value){\n      case 'new_testing_for_person':\n        const dialogRef_new_testing_for_person = this.dialog.open(ModalMtComponent, {\n          width: '900px',\n          maxHeight: '600px',\n          disableClose: true,\n          data: {\n            user_name: this.loginService.user_name,\n            value: value,\n            row: row\n          }\n        });\n\n        dialogRef_new_testing_for_person.afterClosed().subscribe(result => {\n          console.log(result);\n          switch (result) {\n            case 'Готово!':\n              this._snackBar.open(result, '', {\n                duration: 2000,\n                horizontalPosition: 'center',\n                verticalPosition: 'top',\n                panelClass: 'alert-style-success'\n              });\n              this.get_table_personal();\n              break;\n          }\n        })\n        break;\n\n\n    case 'new_test':\n\n    const dialogRef = this.dialog.open(ModalMtComponent, {\n      maxWidth: '400px',\n      disableClose: true,\n      data: {\n        user_name: this.loginService.user_name,\n        value: value,\n        row: row\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(result);\n      switch (result) {\n        case 'Новый тест добавлен':\n          this._snackBar.open(result, '', {\n            duration: 2000,\n            horizontalPosition: 'center',\n            verticalPosition: 'top',\n            panelClass: 'alert-style-success'\n          });\n          this.get_table_personal();\n          break;\n      }\n    })\n    break;\n  }\n  }\n\n  get_table_personal() {\n    this.mainService.user_mt_main_table_get(this.name_test, moment.parseZone(this.passing_date).format('YYYY-MM-DD')).subscribe((res) => {\n      console.log(this.name_test);\n      this.dataTable_user_mt = JSON.parse(res);\n      this.dataSource = new MatTableDataSource(this.dataTable_user_mt);\n      this.dataSource.sort = this.sort;\n      this.dataSource.paginator = this.paginator;\n    });\n  }\n\n  saveChanges(row){\n    this.testsService.tests_save_changes_table(row.id_person,row.test_score,moment.parseZone(row.passing_date).format('YYYY-MM-DD'),row.name_test).subscribe(res => {\n      this.modal_alert_message = JSON.parse(res)\n    })\n\n  }\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.dataSource.filter = filterValue.trim().toLowerCase();\n  }\n\n\n}\n","<div class=\"container-fluid mt-2\">\n  <div class=\"row\">\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Поиск</mat-label>\n      <input matInput [(ngModel)]=\"search\" (keyup)=\"applyFilter($event)\">\n    </mat-form-field>\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Выберете тест</mat-label>\n      <mat-select [(ngModel)]=\"name_test\" (ngModelChange)=\"get_table_personal()\">\n        <mat-option value=\"all\">Все</mat-option>\n        <mat-option *ngFor=\"let food of nameTestsList\" [value]=\"food\">\n          {{food}}\n        </mat-option>\n      </mat-select>\n    </mat-form-field>\n\n    <mat-form-field class=\"col-2 mt-2\">\n      <mat-label>Выберете дату</mat-label>\n      <input matInput [(ngModel)]=\"passing_date\" [matDatepicker]=\"picker_passing_date\" (ngModelChange)=\"get_table_personal()\">\n      <mat-datepicker-toggle matSuffix [for]=\"picker_passing_date\"></mat-datepicker-toggle>\n      <mat-datepicker #picker_passing_date></mat-datepicker>\n    </mat-form-field>\n\n\n    <div class=\"ml-auto\">\n      <button mat-raised-button color=\"primary\" class=\"mr-2\" (click)=\"openDialog('','new_testing_for_person')\">Добавить сотрудников</button>\n      <button mat-raised-button color=\"primary\" (click)=\"openDialog('','new_test')\">Добавить тест</button>\n    </div>\n  </div>\n  <div class=\"mat-elevation-z8 mt-1\">\n    <table mat-table [dataSource]=\"dataSource\" matSort>\n\n      <ng-container matColumnDef=\"fio\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header style=\"padding-left: 50px;\">Ф.И.О.</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.fio }}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"type_department\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Тип подразделения</th>\n        <td mat-cell *matCellDef=\"let row\">\n          {{row.type_department}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"department\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>TT,подразделение</th>\n        <td mat-cell *matCellDef=\"let row\">\n          {{row.department}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"position\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Должность</th>\n        <td mat-cell *matCellDef=\"let row\">{{row.position}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"internship_date\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата стажировки</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.internship_date}}</td>\n      </ng-container>\n      \n      <ng-container matColumnDef=\"name_test\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Название теста</th>\n        <td mat-cell *matCellDef=\"let row\">{{ row.name_test}}</td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"test_score\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Оценка</th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-form-field style=\"width: 4rem;\">\n            <input matInput type=\"number\" max=\"200\" [(ngModel)]=\"row.test_score\" (ngModelChange)=\"saveChanges(row)\">\n          </mat-form-field>\n        </td>\n      </ng-container>\n\n      <ng-container matColumnDef=\"passing_date\">\n        <th mat-header-cell *matHeaderCellDef mat-sort-header>Дата тестирования</th>\n        <td mat-cell *matCellDef=\"let row\">\n          <mat-form-field style=\"width: 11rem;\">\n            <input matInput [(ngModel)]=\"row.passing_date\" [matDatepicker]=\"picker_passing_date\" readonly (ngModelChange)=\"saveChanges(row)\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker_passing_date\"></mat-datepicker-toggle>\n            <mat-datepicker #picker_passing_date></mat-datepicker>\n          </mat-form-field>\n        </td>\n      </ng-container>\n\n\n      <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\n      <tr mat-row class=\"example-element-row col\" *matRowDef=\"let row; columns: displayedColumns\"></tr>\n    </table>\n    <mat-paginator [pageSizeOptions]=\"[20, 30, 50]\" showFirstLastButtons></mat-paginator>\n  </div>\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}